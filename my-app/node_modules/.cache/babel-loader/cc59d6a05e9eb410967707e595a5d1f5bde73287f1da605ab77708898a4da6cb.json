{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }],\n      userName: localStorage.getItem(\"userName\"),\n      numberOfAsesorias: 1,\n      asesorias: JSON.parse(localStorage.getItem(\"asesorias\")) || [],\n      userId: localStorage.getItem(\"id\"),\n      selectedAsesoriasUploaded: false\n    };\n  },\n  computed: {\n    allFilesSubmitted() {\n      return this.asesorias.every(asesoria => asesoria.submitted);\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      this.$router.push(\"/login\");\n    },\n    initializeAsesorias() {\n      this.asesorias = Array.from({\n        length: this.numberOfAsesorias\n      }, (v, i) => ({\n        id: i + 1,\n        file: {\n          data: null,\n          filename: null\n        },\n        submitted: this.asesorias[i]?.submitted || false // Set submitted status based on existing data\n      }));\n    },\n    async submitFiles() {\n      const formData = new FormData();\n      const submittedIndexes = []; // Store the indexes of submitted files\n\n      // Collect submitted files and their indexes\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && !asesoria.submitted) {\n          formData.append(\"files\", asesoria.file);\n          submittedIndexes.push(index); // Store the index of submitted file\n        }\n      });\n      try {\n        const response = await axios.post(\"http://localhost:3000/upload/multiple\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.status === 201) {\n          response.data.files.forEach((file, fileIndex) => {\n            const index = submittedIndexes[fileIndex];\n            if (index !== undefined) {\n              this.asesorias[index].submitted = true;\n              this.asesorias[index].file.data = file.data;\n              this.asesorias[index].file.filename = file.filename;\n            }\n          });\n\n          // Save the updated asesorias data in localStorage\n          localStorage.setItem(\"asesorias\", JSON.stringify(this.asesorias));\n          window.alert(\"Files uploaded successfully!\"); // Display alert\n          console.log(\"Files uploaded successfully!\");\n        } else {\n          console.error(\"Failed to upload files.\");\n        }\n\n        // Refresh file data after submission\n        await this.fetchFileData();\n      } catch (error) {\n        console.error(\"Error uploading files:\", error);\n      }\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userData = response.data;\n        this.numberOfAsesorias = userData.asesorias;\n        this.initializeAsesorias(); // Initialize asesorias based on fetched number\n      } catch (error) {\n        console.error(\"Error fetching asesorías:\", error);\n      }\n    },\n    async fetchFileData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/files\");\n        const files = response.data;\n        // Update file objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.asesorias[index]) {\n            this.asesorias[index].file.data = file.data;\n            this.asesorias[index].file.filename = file.filename;\n            this.asesorias[index].file.id = file._id;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching file data:\", error);\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchFileData();\n      const zip = new JSZip();\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && asesoria.file.data) {\n          const byteString = atob(asesoria.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          zip.file(`filename_${index + 1}.pdf`, ab);\n        }\n      });\n      zip.generateAsync({\n        type: \"blob\"\n      }).then(content => {\n        saveAs(content, \"asesorias.zip\");\n      });\n    },\n    deleteFile(index) {\n      const fileId = this.asesorias[index].file.id;\n      axios.delete(`http://localhost:3000/files/${fileId}`).then(response => {\n        if (response.status === 200) {\n          this.asesorias[index].submitted = false;\n          this.asesorias[index].file = {\n            data: null,\n            filename: null\n          };\n          localStorage.setItem(\"asesorias\", JSON.stringify(this.asesorias));\n          window.alert(\"File deleted successfully!\");\n        } else {\n          console.error(\"Failed to delete file.\");\n        }\n      }).catch(error => {\n        console.error(\"Error deleting file:\", error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchAsesorias();\n    this.fetchFileData();\n  }\n};","map":{"version":3,"names":["axios","JSZip","saveAs","data","drawer","sidebarItems","title","icon","userName","localStorage","getItem","numberOfAsesorias","asesorias","JSON","parse","userId","selectedAsesoriasUploaded","computed","allFilesSubmitted","every","asesoria","submitted","methods","navigate","index","$router","push","logout","removeItem","initializeAsesorias","Array","from","length","v","i","id","file","filename","submitFiles","formData","FormData","submittedIndexes","forEach","append","response","post","headers","status","files","fileIndex","undefined","setItem","stringify","window","alert","console","log","error","fetchFileData","fetchAsesorias","get","userData","_id","downloadAllFiles","zip","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","generateAsync","type","then","content","deleteFile","fileId","delete","catch","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/AsesoriasAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 800px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\"\n              >Asesorías</v-card-title\n            >\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"numberOfAsesorias\"\n                    label=\"Number of Asesorías\"\n                    type=\"number\"\n                    min=\"1\"\n                    readonly\n                  ></v-text-field>\n                  <v-btn color=\"blue darken-2\" @click=\"initializeAsesorias\">\n                    Select Number of Asesorías\n                  </v-btn>\n                </v-col>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-col\n                  v-for=\"(asesoria, index) in asesorias\"\n                  :key=\"asesoria.id\"\n                  cols=\"6\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <v-file-input\n                        v-model=\"asesoria.file\"\n                        :label=\"'Upload File for Asesoría ' + (index + 1)\"\n                        prepend-icon=\"mdi-upload\"\n                        :disabled=\"asesoria.submitted\"\n                        accept=\"application/pdf\"\n                      ></v-file-input>\n                    </v-col>\n                    <!-- Delete button -->\n                    <v-col v-if=\"asesoria.submitted\" cols=\"12\">\n                      <v-btn color=\"red\" fab small @click=\"deleteFile(index)\">\n                        <v-icon>mdi-delete</v-icon>\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn\n                color=\"blue darken-2\"\n                @click=\"submitFiles\"\n                :disabled=\"allFilesSubmitted || !selectedAsesoriasUploaded\"\n              >\n                Submit All\n              </v-btn>\n              <v-btn color=\"green darken-2\" @click=\"downloadAllFiles\">\n                Download All Files\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n      ],\n      userName: localStorage.getItem(\"userName\"),\n      numberOfAsesorias: 1,\n      asesorias: JSON.parse(localStorage.getItem(\"asesorias\")) || [],\n      userId: localStorage.getItem(\"id\"),\n      selectedAsesoriasUploaded: false,\n    };\n  },\n  computed: {\n    allFilesSubmitted() {\n      return this.asesorias.every((asesoria) => asesoria.submitted);\n    },\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      this.$router.push(\"/login\");\n    },\n    initializeAsesorias() {\n      this.asesorias = Array.from(\n        { length: this.numberOfAsesorias },\n        (v, i) => ({\n          id: i + 1,\n          file: { data: null, filename: null },\n          submitted: this.asesorias[i]?.submitted || false, // Set submitted status based on existing data\n        })\n      );\n    },\n    async submitFiles() {\n      const formData = new FormData();\n      const submittedIndexes = []; // Store the indexes of submitted files\n\n      // Collect submitted files and their indexes\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && !asesoria.submitted) {\n          formData.append(\"files\", asesoria.file);\n          submittedIndexes.push(index); // Store the index of submitted file\n        }\n      });\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/upload/multiple\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        if (response.status === 201) {\n          response.data.files.forEach((file, fileIndex) => {\n            const index = submittedIndexes[fileIndex];\n            if (index !== undefined) {\n              this.asesorias[index].submitted = true;\n              this.asesorias[index].file.data = file.data;\n              this.asesorias[index].file.filename = file.filename;\n            }\n          });\n\n          // Save the updated asesorias data in localStorage\n          localStorage.setItem(\"asesorias\", JSON.stringify(this.asesorias));\n\n          window.alert(\"Files uploaded successfully!\"); // Display alert\n          console.log(\"Files uploaded successfully!\");\n        } else {\n          console.error(\"Failed to upload files.\");\n        }\n\n        // Refresh file data after submission\n        await this.fetchFileData();\n      } catch (error) {\n        console.error(\"Error uploading files:\", error);\n      }\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/users/${this.userId}`\n        );\n        const userData = response.data;\n        this.numberOfAsesorias = userData.asesorias;\n        this.initializeAsesorias(); // Initialize asesorias based on fetched number\n      } catch (error) {\n        console.error(\"Error fetching asesorías:\", error);\n      }\n    },\n    async fetchFileData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/files\");\n        const files = response.data;\n        // Update file objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.asesorias[index]) {\n            this.asesorias[index].file.data = file.data;\n            this.asesorias[index].file.filename = file.filename;\n            this.asesorias[index].file.id = file._id;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching file data:\", error);\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchFileData();\n\n      const zip = new JSZip();\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && asesoria.file.data) {\n          const byteString = atob(asesoria.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          zip.file(`filename_${index + 1}.pdf`, ab);\n        }\n      });\n\n      zip.generateAsync({ type: \"blob\" }).then((content) => {\n        saveAs(content, \"asesorias.zip\");\n      });\n    },\n    deleteFile(index) {\n      const fileId = this.asesorias[index].file.id;\n      axios\n        .delete(`http://localhost:3000/files/${fileId}`)\n        .then((response) => {\n          if (response.status === 200) {\n            this.asesorias[index].submitted = false;\n            this.asesorias[index].file = { data: null, filename: null };\n            localStorage.setItem(\"asesorias\", JSON.stringify(this.asesorias));\n            window.alert(\"File deleted successfully!\");\n          } else {\n            console.error(\"Failed to delete file.\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error deleting file:\", error);\n        });\n    },\n  },\n\n  mounted() {\n    this.fetchAsesorias();\n    this.fetchFileData();\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}