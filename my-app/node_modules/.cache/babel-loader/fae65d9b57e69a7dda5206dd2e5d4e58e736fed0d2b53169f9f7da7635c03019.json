{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: localStorage.getItem('userName'),\n      pdfFiles: {\n        'Solicitud de residencias profesionales': null,\n        'Carta de presentación': null,\n        'Carta de aceptación': null,\n        'Cartilla IMSS': null,\n        'Oficio de Asignación de asesor interno': null,\n        Anteproyecto: null,\n        'Liberación de los 5 créditos': null,\n        'Liberación servicio social': null\n      },\n      submittedFiles: {},\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }, {\n        title: 'Archivos',\n        icon: 'mdi-file-document-outline'\n      }],\n      userId: localStorage.getItem('id')\n    };\n  },\n  mounted() {\n    this.fetchFileData();\n  },\n  computed: {\n    isFormValid() {\n      for (const key in this.pdfFiles) {\n        if (!this.pdfFiles[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  },\n  methods: {\n    async fetchFileData() {\n      try {\n        const response = await axios.get('http://localhost:3000/archivos');\n        const files = response.data;\n        this.submittedFiles = updatedFiles;\n        localStorage.setItem('submittedFiles', JSON.stringify(this.submittedFiles));\n      } catch (error) {\n        console.error('Error fetching file data:', error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        case 2:\n          this.$router.push('/student/archivos');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.$router.push('/login');\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        for (const key in this.pdfFiles) {\n          if (this.pdfFiles[key]) {\n            formData.append('files', this.pdfFiles[key]);\n          }\n        }\n        const response = await axios.post('http://localhost:3000/upload-archivo', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 201) {\n          window.alert('File uploaded successfully!');\n          console.log('File uploaded successfully!');\n          // Move uploaded files to submittedFiles\n          for (const key in this.pdfFiles) {\n            if (this.pdfFiles[key]) {\n              this.submittedFiles[key] = this.pdfFiles[key];\n            }\n          }\n          // Save submittedFiles to localStorage\n          localStorage.setItem('submittedFiles', JSON.stringify(this.submittedFiles));\n          // Reset the form after successful upload\n          this.pdfFiles = Object.fromEntries(Object.keys(this.pdfFiles).map(key => [key, null]));\n        } else {\n          console.error('Failed to upload file.');\n        }\n      } catch (error) {\n        console.error('Error uploading files:', error);\n      }\n    },\n    downloadAllFiles() {\n      // Download all files logic\n    },\n    downloadFile(file) {\n      // Download individual file logic\n    },\n    deleteFile(fieldName) {\n      const fileId = this.submittedFiles[fieldName]._id;\n      axios.delete(`http://localhost:3000/archivos/${fileId}`).then(response => {\n        if (response.status === 200) {\n          // File deleted successfully from the server\n          // Now, remove it from the submittedFiles object\n          delete this.submittedFiles[fieldName];\n          // Update localStorage\n          localStorage.setItem('submittedFiles', JSON.stringify(this.submittedFiles));\n          // Optionally, you can provide feedback to the user\n          window.alert('File deleted successfully!');\n        } else {\n          // Failed to delete file\n          console.error('Failed to delete file:', response.data.message);\n          window.alert('Failed to delete file. Please try again later.');\n        }\n      }).catch(error => {\n        console.error('Error deleting file:', error);\n        window.alert('An error occurred while deleting the file. Please try again later.');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userName","localStorage","getItem","pdfFiles","Anteproyecto","submittedFiles","drawer","sidebarItems","title","icon","userId","mounted","fetchFileData","computed","isFormValid","key","methods","response","get","files","updatedFiles","setItem","JSON","stringify","error","console","navigate","index","$router","push","logout","removeItem","submitForm","formData","FormData","append","post","headers","status","window","alert","log","Object","fromEntries","keys","map","downloadAllFiles","downloadFile","file","deleteFile","fieldName","fileId","_id","delete","then","message","catch"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n    <v-app>\n      <v-container>\n        <!-- Top Bar -->\n        <v-app-bar app color=\"blue darken-2\" dark>\n          <!-- Burger menu icon -->\n          <v-btn icon @click=\"drawer = !drawer\">\n            <v-icon>mdi-menu</v-icon>\n          </v-btn>\n          <!-- Title -->\n          <v-toolbar-title>{{ userName }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <!-- Logout button -->\n          <v-btn icon @click=\"logout\">\n            <v-icon>mdi-logout</v-icon>\n          </v-btn>\n        </v-app-bar>\n\n        <!-- Sidebar -->\n        <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n          <v-list dense>\n            <v-list-item\n              v-for=\"(item, index) in sidebarItems\"\n              :key=\"index\"\n              @click=\"navigate(index)\"\n            >\n              <v-list-item-action>\n                <v-icon>{{ item.icon }}</v-icon>\n              </v-list-item-action>\n              <v-list-item-content>\n                <v-list-item-title>{{ item.title }}</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-navigation-drawer>\n\n        <!-- Main Content -->\n        <v-main>\n          <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n            <v-card class=\"mx-auto\" max-width=\"800\">\n              <v-card-title class=\"blue darken-2 white--text\">\n                Upload PDF Files\n              </v-card-title>\n              <v-card-text>\n                <v-row>\n                  <v-col\n                    v-for=\"(file, fieldName) in pdfFiles\"\n                    :key=\"fieldName\"\n                    cols=\"12\"\n                    md=\"6\"\n                  >\n                    <v-card class=\"mb-3\">\n                      <v-card-title>{{ fieldName }}</v-card-title>\n                      <v-file-input\n                        v-if=\"!submittedFiles[fieldName]\"\n                        v-model=\"pdfFiles[fieldName]\"\n                        accept=\".pdf\"\n                        :label=\"'Select ' + fieldName\"\n                      ></v-file-input>\n                      <v-row class=\"mt-2\" v-if=\"submittedFiles[fieldName]\">\n                        <v-col cols=\"4\">\n                          <v-icon color=\"blue darken-2\" size=\"48\">mdi-file-pdf-box</v-icon>\n                        </v-col>\n                        <v-col cols=\"4\">\n                          <v-btn color=\"blue darken-2\" block @click=\"downloadFile(submittedFiles[fieldName])\">Descargar</v-btn>\n                        </v-col>\n                        <v-col cols=\"4\">\n                          <v-btn color=\"red darken-2\" block @click=\"deleteFile(fieldName)\">Eliminar</v-btn>\n                        </v-col>\n                      </v-row>\n                    </v-card>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-card-actions>\n                <v-btn color=\"blue darken-2\" @click=\"submitForm\">Submit</v-btn>\n                <v-btn color=\"primary\" @click=\"downloadAllFiles\">Download All Files</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-main>\n      </v-container>\n    </v-app>\n  </template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      userName: localStorage.getItem('userName'),\n      pdfFiles: {\n        'Solicitud de residencias profesionales': null,\n        'Carta de presentación': null,\n        'Carta de aceptación': null,\n        'Cartilla IMSS': null,\n        'Oficio de Asignación de asesor interno': null,\n        Anteproyecto: null,\n        'Liberación de los 5 créditos': null,\n        'Liberación servicio social': null\n      },\n      submittedFiles: {},\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' },\n        { title: 'Archivos', icon: 'mdi-file-document-outline' }\n      ],\n      userId: localStorage.getItem('id')\n    }\n  },\n  mounted () {\n    this.fetchFileData()\n  },\n  computed: {\n    isFormValid () {\n      for (const key in this.pdfFiles) {\n        if (!this.pdfFiles[key]) {\n          return false\n        }\n      }\n      return true\n    }\n  },\n  methods: {\n    async fetchFileData () {\n      try {\n        const response = await axios.get('http://localhost:3000/archivos')\n        const files = response.data\n\n\n        this.submittedFiles = updatedFiles\n        localStorage.setItem('submittedFiles', JSON.stringify(this.submittedFiles))\n      } catch (error) {\n        console.error('Error fetching file data:', error)\n      }\n    },\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student')\n          break\n        case 1:\n          this.$router.push('/student/asesorias')\n          break\n        case 2:\n          this.$router.push('/student/archivos')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      this.$router.push('/login')\n    },\n    async submitForm () {\n      try {\n        const formData = new FormData()\n        for (const key in this.pdfFiles) {\n          if (this.pdfFiles[key]) {\n            formData.append('files', this.pdfFiles[key])\n          }\n        }\n        const response = await axios.post(\n          'http://localhost:3000/upload-archivo',\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        )\n        if (response.status === 201) {\n          window.alert('File uploaded successfully!')\n          console.log('File uploaded successfully!')\n          // Move uploaded files to submittedFiles\n          for (const key in this.pdfFiles) {\n            if (this.pdfFiles[key]) {\n              this.submittedFiles[key] = this.pdfFiles[key]\n            }\n          }\n          // Save submittedFiles to localStorage\n          localStorage.setItem(\n            'submittedFiles',\n            JSON.stringify(this.submittedFiles)\n          )\n          // Reset the form after successful upload\n          this.pdfFiles = Object.fromEntries(\n            Object.keys(this.pdfFiles).map((key) => [key, null])\n          )\n        } else {\n          console.error('Failed to upload file.')\n        }\n      } catch (error) {\n        console.error('Error uploading files:', error)\n      }\n    },\n    downloadAllFiles () {\n      // Download all files logic\n    },\n    downloadFile (file) {\n      // Download individual file logic\n    },\n    deleteFile (fieldName) {\n      const fileId = this.submittedFiles[fieldName]._id\n      axios\n        .delete(`http://localhost:3000/archivos/${fileId}`)\n        .then((response) => {\n          if (response.status === 200) {\n            // File deleted successfully from the server\n            // Now, remove it from the submittedFiles object\n            delete this.submittedFiles[fieldName]\n            // Update localStorage\n            localStorage.setItem(\n              'submittedFiles',\n              JSON.stringify(this.submittedFiles)\n            )\n            // Optionally, you can provide feedback to the user\n            window.alert('File deleted successfully!')\n          } else {\n            // Failed to delete file\n            console.error('Failed to delete file:', response.data.message)\n            window.alert('Failed to delete file. Please try again later.')\n          }\n        })\n        .catch((error) => {\n          console.error('Error deleting file:', error)\n          window.alert(\n            'An error occurred while deleting the file. Please try again later.'\n          )\n        })\n    }\n  }\n}\n</script>\n\n  <style scoped>\n  .v-btn i {\n    color: white;\n  }\n  </style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}