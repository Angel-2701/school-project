{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      id: localStorage.getItem(\"id\"),\n      editDialog: false,\n      editedProjectName: \"\",\n      editedProjectId: \"\",\n      newProject: {\n        name: \"\",\n        company: \"\",\n        _id: \"\"\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      users: [],\n      sidebarItems: [{\n        title: \"Projects\",\n        icon: \"mdi-folder-outline\"\n      }],\n      userName: \"John Doe\",\n      drawer: false,\n      selectedProject: null,\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    const projectId = parseFloat(to.params.projectId);\n    axios.get(`http://localhost:3000/projects/${projectId}`).then(response => {\n      next(vm => {\n        vm.selectedProject = response.data;\n      });\n    }).catch(error => {\n      console.error(\"Error fetching user details:\", error);\n      next(false); // Prevent component from rendering\n    });\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const teacherResponse = await axios.get(`http://localhost:3000/users/${this.id}`);\n        const teacher = teacherResponse.data;\n        const studentsResponse = await axios.get(\"http://localhost:3000/students\");\n        const allStudents = studentsResponse.data;\n        const teacherStudents = allStudents.filter(student => teacher.alumnos.includes(student._id));\n        const projectIds = teacherStudents.map(student => student.project);\n        const projectsResponse = await axios.get(\"http://localhost:3000/projects\");\n        const projects = projectsResponse.data;\n        const filteredProjects = projects.filter(project => projectIds.includes(project._id));\n        this.projects = filteredProjects;\n        this.students = teacherStudents;\n        this.users = this.students.filter(student => student.project === this.selectedProject._id);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    openGradeDialog(user, event) {\n      event.stopPropagation();\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = {\n          grade1: null,\n          grade2: null,\n          grade3: null\n        };\n      }\n      this.editDialog = true;\n    },\n    saveGrades() {\n      axios.put(`http://localhost:3000/users/${this.selectedUser._id}`, this.selectedUser).then(response => {\n        console.log(\"User updated successfully:\", response.data);\n        this.editDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error(\"Error updating user:\", error);\n      });\n    },\n    openConsultanciesDialog(student, event) {\n      event.stopPropagation();\n      this.selectedStudent = student;\n      this.enableConsultanciesDialog = true;\n    },\n    enableConsultancies() {\n      const numberOfConsultancies = parseInt(this.selectedStudent.consultancies);\n      console.log(\"Number of Consultancies to Enable:\", numberOfConsultancies);\n      this.updateConsultancies(numberOfConsultancies);\n    },\n    updateConsultancies() {\n      axios.put(`http://localhost:3000/users/${this.selectedStudent._id}`, this.selectedStudent).then(response => {\n        console.log(\"User consultancies updated successfully:\", response.data);\n        this.enableConsultanciesDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error(\"Error updating user consultancies:\", error);\n      });\n    },\n    navigate(index) {\n      this.showProjects = true;\n      switch (index) {\n        case 0:\n          this.$router.push(\"/Teacher/Projects\");\n          break;\n        case 1:\n          this.$router.push(\"/Students\");\n          break;\n        case 2:\n          this.$router.push(\"/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      this.$router.push(\"/login\");\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: {\n          userId: item._id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchData();\n    // Filter students based on the selected project ID\n    this.users = this.students.filter(student => student.project === this.selectedProject._id);\n  }\n};","map":{"version":3,"names":["axios","data","id","localStorage","getItem","editDialog","editedProjectName","editedProjectId","newProject","name","company","_id","showProjects","projects","students","users","sidebarItems","title","icon","userName","drawer","selectedProject","selectedUser","gradeOptions","enableConsultanciesDialog","numberOfConsultancies","beforeRouteEnter","to","from","next","projectId","parseFloat","params","get","then","response","vm","catch","error","console","methods","fetchData","teacherResponse","teacher","studentsResponse","allStudents","teacherStudents","filter","student","alumnos","includes","projectIds","map","project","projectsResponse","filteredProjects","openGradeDialog","user","event","stopPropagation","grades","grade1","grade2","grade3","saveGrades","put","log","openConsultanciesDialog","selectedStudent","enableConsultancies","parseInt","consultancies","updateConsultancies","navigate","index","$router","push","logout","removeItem","handleRowClick","item","userId","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/ProjectTable.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- Top Bar -->\n    <v-app-bar app color=\"blue darken-2\" dark>\n      <!-- Burger menu icon -->\n      <v-btn icon @click=\"drawer = !drawer\">\n        <v-icon>mdi-menu</v-icon>\n      </v-btn>\n      <!-- Title -->\n      <v-toolbar-title>{{ userName }}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <!-- Logout button -->\n      <v-btn icon @click=\"logout\">\n        <v-icon>mdi-logout</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-main>\n      <!-- Main content -->\n      <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n        <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n          <!-- Students Data -->\n          <v-data-table v-if=\"users.length > 0\" :items=\"users\" align=\"center\">\n            <template v-slot:top>\n              <v-toolbar flat color=\"blue darken-2\">\n                <v-toolbar-title>{{ selectedProject.name }}</v-toolbar-title>\n                <v-divider class=\"mx-4\" inset vertical></v-divider>\n                <v-spacer></v-spacer>\n                <!-- Removed the button for creating a new project -->\n              </v-toolbar>\n            </template>\n            <template v-slot:headers>\n              <tr>\n                <th>{{ \"ID\" }}</th>\n                <th>{{ \"Nombre\" }}</th>\n                <th>{{ \"Apellido\" }}</th>\n                <th>{{ \"Apellido Materno\" }}</th>\n                <th>{{ \"Carrera\" }}</th>\n                <th>{{ \"Proyecto\" }}</th>\n                <!-- Exclude numeroTelefonico from the headers -->\n              </tr>\n            </template>\n            <template v-slot:item=\"{ item }\">\n              <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                <td>{{ item._id }}</td>\n                <td>{{ item.nombre }}</td>\n                <td>{{ item.apellido }}</td>\n                <td>{{ item.apellidoM }}</td>\n                <td>{{ item.carrera }}</td>\n                <td>{{ item.project }}</td>\n                <td>\n                  <!-- Use small prop to make the buttons smaller -->\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on }\">\n                      <v-btn\n                        icon\n                        small\n                        color=\"blue darken-2\"\n                        @click=\"openGradeDialog(item, $event)\"\n                        style=\"width: 30px; height: 30px; margin-right: 5px\"\n                        v-on=\"on\"\n                      >\n                        <v-icon style=\"font-size: 18px\"\n                          >mdi-clipboard-check-outline</v-icon\n                        >\n                      </v-btn>\n                    </template>\n                    <span>Assign Grades</span>\n                  </v-tooltip>\n\n                  <v-btn\n                    icon\n                    small\n                    color=\"green darken-2\"\n                    @click=\"openConsultanciesDialog(item, $event)\"\n                    style=\"width: 30px; height: 30px; margin-right: 5px\"\n                  >\n                    <v-icon style=\"font-size: 18px\">mdi-check</v-icon>\n                  </v-btn>\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n        </v-card>\n      </v-col>\n    </v-main>\n\n    <!-- Dialog for assigning grades -->\n    <v-dialog v-model=\"editDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Assign Grades to {{ selectedUser.nombre }}\n          {{ selectedUser.apellido }}\n        </v-card-title>\n        <v-card-text>\n          <v-row>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade1\"\n                :items=\"gradeOptions\"\n                label=\"Grade 1\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade2\"\n                :items=\"gradeOptions\"\n                label=\"Grade 2\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade3\"\n                :items=\"gradeOptions\"\n                label=\"Grade 3\"\n              ></v-select>\n            </v-col>\n          </v-row>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"editDialog = false\"\n            >Cancel</v-btn\n          >\n          <v-btn color=\"blue darken-1\" text @click=\"saveGrades\">Save</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Dialog for enabling consultancies -->\n    <v-dialog v-model=\"enableConsultanciesDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Enable Consultancies for {{ selectedStudent.nombre }}\n          {{ selectedStudent.apellido }}\n        </v-card-title>\n        <v-card-text>\n          <v-text-field\n            v-model=\"selectedStudent.consultancies\"\n            label=\"Number of Consultancies (Max: 16)\"\n            type=\"number\"\n            max=\"16\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"enableConsultanciesDialog = false\"\n            >Cancel</v-btn\n          >\n          <v-btn color=\"blue darken-1\" text @click=\"enableConsultancies\"\n            >Enable</v-btn\n          >\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      id: localStorage.getItem(\"id\"),\n      editDialog: false,\n      editedProjectName: \"\",\n      editedProjectId: \"\",\n      newProject: {\n        name: \"\",\n        company: \"\",\n        _id: \"\",\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      users: [],\n      sidebarItems: [{ title: \"Projects\", icon: \"mdi-folder-outline\" }],\n      userName: \"John Doe\",\n      drawer: false,\n      selectedProject: null,\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1,\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    const projectId = parseFloat(to.params.projectId);\n    axios\n      .get(`http://localhost:3000/projects/${projectId}`)\n      .then((response) => {\n        next((vm) => {\n          vm.selectedProject = response.data;\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching user details:\", error);\n        next(false); // Prevent component from rendering\n      });\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const teacherResponse = await axios.get(\n          `http://localhost:3000/users/${this.id}`\n        );\n        const teacher = teacherResponse.data;\n\n        const studentsResponse = await axios.get(\n          \"http://localhost:3000/students\"\n        );\n        const allStudents = studentsResponse.data;\n\n        const teacherStudents = allStudents.filter((student) =>\n          teacher.alumnos.includes(student._id)\n        );\n\n        const projectIds = teacherStudents.map((student) => student.project);\n\n        const projectsResponse = await axios.get(\n          \"http://localhost:3000/projects\"\n        );\n        const projects = projectsResponse.data;\n\n        const filteredProjects = projects.filter((project) =>\n          projectIds.includes(project._id)\n        );\n\n        this.projects = filteredProjects;\n        this.students = teacherStudents;\n        this.users = this.students.filter(\n          (student) => student.project === this.selectedProject._id\n        );\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    openGradeDialog(user, event) {\n      event.stopPropagation();\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = { grade1: null, grade2: null, grade3: null };\n      }\n      this.editDialog = true;\n    },\n    saveGrades() {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedUser._id}`,\n          this.selectedUser\n        )\n        .then((response) => {\n          console.log(\"User updated successfully:\", response.data);\n          this.editDialog = false;\n          this.fetchData();\n        })\n        .catch((error) => {\n          console.error(\"Error updating user:\", error);\n        });\n    },\n    openConsultanciesDialog(student, event) {\n      event.stopPropagation();\n      this.selectedStudent = student;\n      this.enableConsultanciesDialog = true;\n    },\n    enableConsultancies() {\n      const numberOfConsultancies = parseInt(\n        this.selectedStudent.consultancies\n      );\n      console.log(\"Number of Consultancies to Enable:\", numberOfConsultancies);\n      this.updateConsultancies(numberOfConsultancies);\n    },\n    updateConsultancies() {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedStudent._id}`,\n          this.selectedStudent\n        )\n        .then((response) => {\n          console.log(\n            \"User consultancies updated successfully:\",\n            response.data\n          );\n          this.enableConsultanciesDialog = false;\n          this.fetchData();\n        })\n        .catch((error) => {\n          console.error(\"Error updating user consultancies:\", error);\n        });\n    },\n\n    navigate(index) {\n      this.showProjects = true;\n      switch (index) {\n        case 0:\n          this.$router.push(\"/Teacher/Projects\");\n          break;\n        case 1:\n          this.$router.push(\"/Students\");\n          break;\n        case 2:\n          this.$router.push(\"/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      this.$router.push(\"/login\");\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: { userId: item._id },\n      });\n    },\n  },\n  mounted() {\n    this.fetchData();\n    // Filter students based on the selected project ID\n    this.users = this.students.filter(\n      (student) => student.project === this.selectedProject._id\n    );\n  },\n};\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}