{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data: () => ({\n    valid: true,\n    email: \"\",\n    emailRules: [v => !!v || \"E-mail is required\", v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"],\n    password: \"\",\n    passwordRules: [v => !!v || \"Password is required\"]\n  }),\n  methods: {\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password\n        });\n        if (response.status === 200) {\n          const {\n            token,\n            rol\n          } = response.data;\n\n          // Store the token in localStorage\n          localStorage.setItem(\"token\", token);\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","valid","email","emailRules","v","test","password","passwordRules","methods","submit","response","post","correo","contraseña","status","token","rol","localStorage","setItem","$router","push","console","log","error"],"sources":["/Users/angel/project-system/my-app/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container class=\"fill-height\" fluid>\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"4\">\n        <v-card class=\"elevation-12\">\n          <v-toolbar color=\"primary\" dark flat>\n            <v-toolbar-title>Login</v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-text-field\n                label=\"Email\"\n                v-model=\"email\"\n                :rules=\"emailRules\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"Password\"\n                v-model=\"password\"\n                :rules=\"passwordRules\"\n                type=\"password\"\n                required\n              ></v-text-field>\n            </v-form>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" @click=\"submit\">Login</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    valid: true,\n    email: \"\",\n    emailRules: [\n      (v) => !!v || \"E-mail is required\",\n      (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n    ],\n    password: \"\",\n    passwordRules: [(v) => !!v || \"Password is required\"],\n  }),\n  methods: {\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password,\n        });\n\n        if (response.status === 200) {\n          const { token, rol } = response.data;\n\n          // Store the token in localStorage\n          localStorage.setItem(\"token\", token);\n\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-card {\n  margin-top: 100px;\n}\n</style>\n"],"mappings":";AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,CACTC,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,oBAAoB,EACjCA,CAAC,IAAK,WAAW,CAACC,IAAI,CAACD,CAAC,KAAK,sBAAsB,CACrD;IACDE,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,CAAEH,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB;EACtD,CAAC,CAAC;EACFI,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,6BAA6B,EAAE;UAC/DC,MAAM,EAAE,IAAI,CAACV,KAAK;UAClBW,UAAU,EAAE,IAAI,CAACP;QACnB,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACI,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAM;YAAEC,KAAK;YAAEC;UAAI,IAAIN,QAAQ,CAACV,IAAI;;UAEpC;UACAiB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;UAEpC,QAAQC,GAAG;YACT,KAAK,OAAO;cACV,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;cAC3B;YACF,KAAK,SAAS;cACZ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;cAC7B;YACF,KAAK,SAAS;cACZ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;cAC7B;YACF;cACE;cACA,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,gBAAgB,CAAC;cACnC;UACJ;UAEAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEZ,QAAQ,CAACV,IAAI,CAAC;QACjD,OAAO;UACL;QAAA;MAEJ,EAAE,OAAOuB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACb,QAAQ,CAACV,IAAI,CAACuB,KAAK,CAAC;MAC1D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}