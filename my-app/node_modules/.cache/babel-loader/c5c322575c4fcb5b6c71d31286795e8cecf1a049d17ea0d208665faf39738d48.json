{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport LoginPage from '../components/LoginPage.vue';\nimport AdminPage from '../components/AdminPage.vue';\nimport StudentPage from '../components/StudentPage.vue';\nimport TeacherPage from '../components/TeacherPage.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '/',\n  name: 'Login',\n  component: LoginPage\n}, {\n  path: '/Admin',\n  name: 'Admin',\n  component: AdminPage,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/Student',\n  name: 'Student',\n  component: StudentPage,\n  meta: {\n    requiresAuth: true,\n    role: 'student'\n  }\n}, {\n  path: '/Teacher',\n  name: 'Teacher',\n  component: TeacherPage,\n  meta: {\n    requiresAuth: true,\n    role: 'teacher'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const userRole = token ? parseToken(token).rol : null;\n  if (requiresAuth && !token) {\n    // Redirect to login page if authentication is required but token is not present\n    next('/login');\n  } else if (requiresAuth && userRole !== to.meta.role) {\n    // Redirect to corresponding role page if user role does not match the route's required role\n    switch (userRole) {\n      case 'admin':\n        next('/Admin');\n        break;\n      case 'student':\n        next('/Student');\n        break;\n      case 'teacher':\n        next('/Teacher');\n        break;\n      default:\n        // Redirect to login page if user role is invalid\n        next('/login');\n    }\n  } else {\n    // Allow access to the route\n    next();\n  }\n});\nfunction parseToken(token) {\n  // Assuming the token is in JWT format with a payload containing the user's role\n  const [, payloadBase64] = token.split('.');\n  const payloadJson = atob(payloadBase64);\n  const payload = JSON.parse(payloadJson);\n  return payload;\n}\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","LoginPage","AdminPage","StudentPage","TeacherPage","routes","path","name","component","meta","requiresAuth","role","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record","userRole","parseToken","rol","payloadBase64","split","payloadJson","atob","payload","JSON","parse"],"sources":["/Users/angel/project-system/my-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport LoginPage from '../components/LoginPage.vue'\nimport AdminPage from '../components/AdminPage.vue'\nimport StudentPage from '../components/StudentPage.vue'\nimport TeacherPage from '../components/TeacherPage.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/',\n    name: 'Login',\n    component: LoginPage\n  },\n  {\n    path: '/Admin',\n    name: 'Admin',\n    component: AdminPage,\n    meta: { requiresAuth: true, role: 'admin' }\n  },\n  {\n    path: '/Student',\n    name: 'Student',\n    component: StudentPage,\n    meta: { requiresAuth: true, role: 'student' }\n  },\n  {\n    path: '/Teacher',\n    name: 'Teacher',\n    component: TeacherPage,\n    meta: { requiresAuth: true, role: 'teacher' }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token')\n  const requiresAuth = to.matched.some((record) => record.meta.requiresAuth)\n  const userRole = token ? parseToken(token).rol : null\n\n  if (requiresAuth && !token) {\n    // Redirect to login page if authentication is required but token is not present\n    next('/login')\n  } else if (requiresAuth && userRole !== to.meta.role) {\n    // Redirect to corresponding role page if user role does not match the route's required role\n    switch (userRole) {\n      case 'admin':\n        next('/Admin')\n        break\n      case 'student':\n        next('/Student')\n        break\n      case 'teacher':\n        next('/Teacher')\n        break\n      default:\n        // Redirect to login page if user role is invalid\n        next('/login')\n    }\n  } else {\n    // Allow access to the route\n    next()\n  }\n})\n\nfunction parseToken (token) {\n  // Assuming the token is in JWT format with a payload containing the user's role\n  const [, payloadBase64] = token.split('.')\n  const payloadJson = atob(payloadBase64)\n  const payload = JSON.parse(payloadJson)\n  return payload\n}\n\nexport default router\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,WAAW,MAAM,+BAA+B;AAEvD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KACT,MAAM,EAAC,+BAAgC,wBAAwB;AACnE,CAAC,EACD;EACEF,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ;AAC5C,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEL,WAAW;EACtBM,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU;AAC9C,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEJ,WAAW;EACtBK,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU;AAC9C,CAAC,CACF;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMb,YAAY,GAAGQ,EAAE,CAACM,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACjB,IAAI,CAACC,YAAY,CAAC;EAC1E,MAAMiB,QAAQ,GAAGN,KAAK,GAAGO,UAAU,CAACP,KAAK,CAAC,CAACQ,GAAG,GAAG,IAAI;EAErD,IAAInB,YAAY,IAAI,CAACW,KAAK,EAAE;IAC1B;IACAD,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM,IAAIV,YAAY,IAAIiB,QAAQ,KAAKT,EAAE,CAACT,IAAI,CAACE,IAAI,EAAE;IACpD;IACA,QAAQgB,QAAQ;MACd,KAAK,OAAO;QACVP,IAAI,CAAC,QAAQ,CAAC;QACd;MACF,KAAK,SAAS;QACZA,IAAI,CAAC,UAAU,CAAC;QAChB;MACF,KAAK,SAAS;QACZA,IAAI,CAAC,UAAU,CAAC;QAChB;MACF;QACE;QACAA,IAAI,CAAC,QAAQ,CAAC;IAClB;EACF,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,SAASQ,UAAUA,CAAEP,KAAK,EAAE;EAC1B;EACA,MAAM,GAAGS,aAAa,CAAC,GAAGT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC;EAC1C,MAAMC,WAAW,GAAGC,IAAI,CAACH,aAAa,CAAC;EACvC,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;EACvC,OAAOE,OAAO;AAChB;AAEA,eAAetB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}