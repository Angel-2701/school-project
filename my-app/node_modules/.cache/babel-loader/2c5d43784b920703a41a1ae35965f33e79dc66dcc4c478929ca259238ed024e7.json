{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data: () => ({\n    verificationCode: \"\",\n    sentCode: \"\",\n    alert: false,\n    valid: true,\n    email: \"\",\n    emailRules: [v => !!v || \"Correo requerido\", v => /.+@.+\\..+/.test(v) || \"Correo debe ser válido\"],\n    password: \"\",\n    passwordRules: [v => !!v || \"Contraseña requerida\"],\n    forgotPasswordDialog: false,\n    resetEmail: \"\",\n    resetNumber: \"\",\n    resetValid: true,\n    verifyCodeDialog: false,\n    resetPasswordDialog: false\n  }),\n  methods: {\n    async getUserByCorreo(correo) {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/email/${correo}`);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          console.error(\"Error fetching user data:\", response.status);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        return null;\n      }\n    },\n    async sendResetEmail() {\n      if (this.$refs.resetForm.validate()) {\n        try {\n          const user = await this.getUserByCorreo(this.resetEmail); // Assuming resetEmail contains the email address\n\n          if (user && user.numeroTelefonico === Number(this.resetNumber)) {\n            // Add '+52' prefix to the phone number\n            const prefixedPhoneNumber = `+52${this.resetNumber}`;\n\n            // Send SMS if phone numbers match\n            const response = await axios.post(\"http://localhost:3000/send-sms\", {\n              phone: prefixedPhoneNumber\n            });\n            if (response.status === 200) {\n              console.log(\"Se ha enviado un mensaje de texto para restablecer tu contraseña.\");\n              this.forgotPasswordDialog = false;\n              this.verifyCodeDialog = true; // Show the verification code dialog\n              this.sentCode = response.data.code;\n            } else {\n              console.log(\"Error al enviar el mensaje de texto.\");\n            }\n          } else {\n            this.resetAlert = true;\n            this.resetAlertMessage = \"El usuario no existe o el número de teléfono es incorrecto.\";\n          }\n        } catch (error) {\n          console.error(\"Error sending reset email:\", error);\n          this.resetAlert = true;\n          this.resetAlertMessage = \"Error al enviar el mensaje de texto.\";\n        }\n      }\n    },\n    async verifyCode() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/verify-code\", {\n          code: this.verificationCode,\n          sentCode: this.sentCode // Sending the stored verification code to the server for comparison\n        });\n        if (response.data.success) {\n          // Code verification successful\n          console.log(\"Code verification successful\");\n          this.verifyCodeDialog = false; // Close the verification code dialog\n          this.resetPasswordDialog = true; // Open the dialog to enter the new password\n        } else {\n          // Code verification failed, handle the error\n          console.error(\"Code verification failed:\", response.data.message);\n        }\n      } catch (error) {\n        console.error(\"Error verifying code:\", error);\n      }\n    },\n    forgotPassword() {\n      this.forgotPasswordDialog = true;\n    },\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password\n        });\n        if (response.status === 200) {\n          const {\n            token,\n            rol,\n            nombre,\n            id\n          } = response.data;\n\n          // Store the token and the user's name in localStorage\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userName\", nombre);\n          localStorage.setItem(\"id\", id);\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher/projects\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n        this.alert = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","verificationCode","sentCode","alert","valid","email","emailRules","v","test","password","passwordRules","forgotPasswordDialog","resetEmail","resetNumber","resetValid","verifyCodeDialog","resetPasswordDialog","methods","getUserByCorreo","correo","response","get","status","console","error","sendResetEmail","$refs","resetForm","validate","user","numeroTelefonico","Number","prefixedPhoneNumber","post","phone","log","code","resetAlert","resetAlertMessage","verifyCode","success","message","forgotPassword","submit","contraseña","token","rol","nombre","id","localStorage","setItem","$router","push"],"sources":["/Users/angel/school-project/my-app/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container class=\"fill-height\" fluid>\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"4\">\n        <v-card class=\"elevation-12\">\n          <v-toolbar color=\"primary\" dark flat>\n            <v-toolbar-title>Ingresa Credenciales</v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-alert\n              v-if=\"alert\"\n              type=\"error\"\n              dismissible\n              @click=\"alert = false\"\n            >\n              Las credenciales son incorrectas\n            </v-alert>\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-text-field\n                label=\"Correo Electrónico\"\n                v-model=\"email\"\n                :rules=\"emailRules\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"Contraseña\"\n                v-model=\"password\"\n                :rules=\"passwordRules\"\n                type=\"password\"\n                required\n              ></v-text-field>\n              <v-btn text color=\"primary\" @click=\"forgotPassword\"\n                >¿Olvidaste tu contraseña?</v-btn\n              >\n            </v-form>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" @click=\"submit\">Entrar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-dialog v-model=\"forgotPasswordDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Recuperar Contraseña</span>\n        </v-card-title>\n        <v-card-text>\n          <v-form ref=\"resetForm\" v-model=\"resetValid\" lazy-validation>\n            <v-text-field\n              label=\"Correo Electrónico\"\n              v-model=\"resetEmail\"\n              :rules=\"emailRules\"\n              email\n              required\n            ></v-text-field>\n            <v-text-field\n              label=\"Teléfono\"\n              v-model=\"resetNumber\"\n              number\n              required\n            ></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"sendResetEmail\">Enviar</v-btn>\n          <v-btn text @click=\"forgotPasswordDialog = false\">Cancelar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"verifyCodeDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Verificar Código</span>\n        </v-card-title>\n        <v-card-text>\n          <v-form\n            ref=\"verifyCodeForm\"\n            v-model=\"verifyCodeValid\"\n            lazy-validation\n          >\n            <v-text-field\n              label=\"Código de Verificación\"\n              v-model=\"verificationCode\"\n              required\n            ></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"verifyCode\">Verificar</v-btn>\n          <v-btn text @click=\"verifyCodeDialog = false\">Cancelar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"resetPasswordDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Restablecer Contraseña</span>\n        </v-card-title>\n        <v-card-text>\n          <v-form\n            ref=\"resetPasswordForm\"\n            v-model=\"resetPasswordValid\"\n            lazy-validation\n          >\n            <v-text-field\n              label=\"Nueva Contraseña\"\n              v-model=\"newPassword\"\n              :rules=\"newPasswordRules\"\n              type=\"password\"\n              required\n            ></v-text-field>\n            <v-text-field\n              label=\"Confirmar Nueva Contraseña\"\n              v-model=\"confirmNewPassword\"\n              :rules=\"confirmNewPasswordRules\"\n              type=\"password\"\n              required\n            ></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"resetPassword\"\n            >Restablecer Contraseña</v-btn\n          >\n          <v-btn text @click=\"resetPasswordDialog = false\">Cancelar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    verificationCode: \"\",\n    sentCode: \"\",\n    alert: false,\n    valid: true,\n    email: \"\",\n    emailRules: [\n      (v) => !!v || \"Correo requerido\",\n      (v) => /.+@.+\\..+/.test(v) || \"Correo debe ser válido\",\n    ],\n    password: \"\",\n    passwordRules: [(v) => !!v || \"Contraseña requerida\"],\n    forgotPasswordDialog: false,\n    resetEmail: \"\",\n    resetNumber: \"\",\n    resetValid: true,\n    verifyCodeDialog: false,\n    resetPasswordDialog: false,\n  }),\n  methods: {\n    async getUserByCorreo(correo) {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/users/email/${correo}`\n        );\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          console.error(\"Error fetching user data:\", response.status);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        return null;\n      }\n    },\n    async sendResetEmail() {\n      if (this.$refs.resetForm.validate()) {\n        try {\n          const user = await this.getUserByCorreo(this.resetEmail); // Assuming resetEmail contains the email address\n\n          if (user && user.numeroTelefonico === Number(this.resetNumber)) {\n            // Add '+52' prefix to the phone number\n            const prefixedPhoneNumber = `+52${this.resetNumber}`;\n\n            // Send SMS if phone numbers match\n            const response = await axios.post(\n              \"http://localhost:3000/send-sms\",\n              {\n                phone: prefixedPhoneNumber,\n              }\n            );\n\n            if (response.status === 200) {\n              console.log(\n                \"Se ha enviado un mensaje de texto para restablecer tu contraseña.\"\n              );\n              this.forgotPasswordDialog = false;\n              this.verifyCodeDialog = true; // Show the verification code dialog\n              this.sentCode = response.data.code;\n            } else {\n              console.log(\"Error al enviar el mensaje de texto.\");\n            }\n          } else {\n            this.resetAlert = true;\n            this.resetAlertMessage =\n              \"El usuario no existe o el número de teléfono es incorrecto.\";\n          }\n        } catch (error) {\n          console.error(\"Error sending reset email:\", error);\n          this.resetAlert = true;\n          this.resetAlertMessage = \"Error al enviar el mensaje de texto.\";\n        }\n      }\n    },\n\n    async verifyCode() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/verify-code\", {\n          code: this.verificationCode,\n          sentCode: this.sentCode, // Sending the stored verification code to the server for comparison\n        });\n\n        if (response.data.success) {\n          // Code verification successful\n          console.log(\"Code verification successful\");\n          this.verifyCodeDialog = false; // Close the verification code dialog\n          this.resetPasswordDialog = true; // Open the dialog to enter the new password\n        } else {\n          // Code verification failed, handle the error\n          console.error(\"Code verification failed:\", response.data.message);\n        }\n      } catch (error) {\n        console.error(\"Error verifying code:\", error);\n      }\n    },\n\n    forgotPassword() {\n      this.forgotPasswordDialog = true;\n    },\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password,\n        });\n\n        if (response.status === 200) {\n          const { token, rol, nombre, id } = response.data;\n\n          // Store the token and the user's name in localStorage\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userName\", nombre);\n          localStorage.setItem(\"id\", id);\n\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher/projects\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n        this.alert = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-card {\n  margin-top: 100px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}