{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data: () => ({\n    alert: false,\n    valid: true,\n    email: \"\",\n    emailRules: [v => !!v || \"Correo requerido\", v => /.+@.+\\..+/.test(v) || \"Correo debe ser válido\"],\n    password: \"\",\n    passwordRules: [v => !!v || \"Contraseña requerida\"],\n    forgotPasswordDialog: false,\n    resetEmail: \"\",\n    resetValid: true\n  }),\n  methods: {\n    async sendResetEmail() {\n      if (this.$refs.resetForm.validate()) {\n        try {\n          const response = await axios.post(\"http://localhost:3000/send-sms\", {\n            phone: this.resetEmail // Assuming resetEmail contains the phone number\n          });\n          if (response.status === 200) {\n            this.$toast.success(\"Se ha enviado un mensaje de texto para restablecer tu contraseña.\");\n            this.forgotPasswordDialog = false;\n          } else {\n            this.$toast.error(\"Error al enviar el mensaje de texto.\");\n          }\n        } catch (error) {\n          console.error(\"Error sending reset email:\", error);\n          this.$toast.error(\"Error al enviar el mensaje de texto.\");\n        }\n      }\n    },\n    forgotPassword() {\n      this.forgotPasswordDialog = true;\n    },\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password\n        });\n        if (response.status === 200) {\n          const {\n            token,\n            rol,\n            nombre,\n            id\n          } = response.data;\n\n          // Store the token and the user's name in localStorage\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userName\", nombre);\n          localStorage.setItem(\"id\", id);\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher/projects\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n        this.alert = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","alert","valid","email","emailRules","v","test","password","passwordRules","forgotPasswordDialog","resetEmail","resetValid","methods","sendResetEmail","$refs","resetForm","validate","response","post","phone","status","$toast","success","error","console","forgotPassword","submit","correo","contraseña","token","rol","nombre","id","localStorage","setItem","$router","push","log"],"sources":["/Users/angel/school-project/my-app/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container class=\"fill-height\" fluid>\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"4\">\n        <v-card class=\"elevation-12\">\n          <v-toolbar color=\"primary\" dark flat>\n            <v-toolbar-title>Ingresa Credenciales</v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-alert\n              v-if=\"alert\"\n              type=\"error\"\n              dismissible\n              @click=\"alert = false\"\n            >\n              Las credenciales son incorrectas\n            </v-alert>\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-text-field\n                label=\"Correo Electrónico\"\n                v-model=\"email\"\n                :rules=\"emailRules\"\n                required\n              ></v-text-field>\n              <v-text-field\n                label=\"Contraseña\"\n                v-model=\"password\"\n                :rules=\"passwordRules\"\n                type=\"password\"\n                required\n              ></v-text-field>\n              <v-btn text color=\"primary\" @click=\"forgotPassword\"\n                >¿Olvidaste tu contraseña?</v-btn\n              >\n            </v-form>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" @click=\"submit\">Entrar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-dialog v-model=\"forgotPasswordDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">Recuperar Contraseña</span>\n        </v-card-title>\n        <v-card-text>\n          <v-form ref=\"resetForm\" v-model=\"resetValid\" lazy-validation>\n            <v-text-field\n              label=\"Correo Electrónico\"\n              v-model=\"resetEmail\"\n              :rules=\"emailRules\"\n              required\n            ></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"sendResetEmail\">Enviar</v-btn>\n          <v-btn text @click=\"forgotPasswordDialog = false\">Cancelar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    alert: false,\n    valid: true,\n    email: \"\",\n    emailRules: [\n      (v) => !!v || \"Correo requerido\",\n      (v) => /.+@.+\\..+/.test(v) || \"Correo debe ser válido\",\n    ],\n    password: \"\",\n    passwordRules: [(v) => !!v || \"Contraseña requerida\"],\n    forgotPasswordDialog: false,\n    resetEmail: \"\",\n    resetValid: true,\n  }),\n  methods: {\n    async sendResetEmail() {\n      if (this.$refs.resetForm.validate()) {\n        try {\n          const response = await axios.post(\"http://localhost:3000/send-sms\", {\n            phone: this.resetEmail, // Assuming resetEmail contains the phone number\n          });\n          if (response.status === 200) {\n            this.$toast.success(\n              \"Se ha enviado un mensaje de texto para restablecer tu contraseña.\"\n            );\n            this.forgotPasswordDialog = false;\n          } else {\n            this.$toast.error(\"Error al enviar el mensaje de texto.\");\n          }\n        } catch (error) {\n          console.error(\"Error sending reset email:\", error);\n          this.$toast.error(\"Error al enviar el mensaje de texto.\");\n        }\n      }\n    },\n    forgotPassword() {\n      this.forgotPasswordDialog = true;\n    },\n    async submit() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/login\", {\n          correo: this.email,\n          contraseña: this.password,\n        });\n\n        if (response.status === 200) {\n          const { token, rol, nombre, id } = response.data;\n\n          // Store the token and the user's name in localStorage\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userName\", nombre);\n          localStorage.setItem(\"id\", id);\n\n          switch (rol) {\n            case \"admin\":\n              this.$router.push(\"/Admin\");\n              break;\n            case \"student\":\n              this.$router.push(\"/Student\");\n              break;\n            case \"teacher\":\n              this.$router.push(\"/Teacher/projects\");\n              break;\n            default:\n              // Redirect to a default route for unknown roles\n              this.$router.push(\"/default-route\");\n              break;\n          }\n\n          console.log(\"Login successful:\", response.data);\n        } else {\n          // Handle other status codes if needed\n        }\n      } catch (error) {\n        console.error(\"Login error:\", error.response.data.error);\n        this.alert = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-card {\n  margin-top: 100px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}