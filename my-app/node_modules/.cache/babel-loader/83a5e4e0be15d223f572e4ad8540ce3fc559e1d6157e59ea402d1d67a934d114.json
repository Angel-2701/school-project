{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      file1Uploaded: localStorage.getItem(\"file1Uploaded\") === \"true\" || false,\n      file2Uploaded: localStorage.getItem(\"file2Uploaded\") === \"true\" || false,\n      file3Uploaded: localStorage.getItem(\"file3Uploaded\") === \"true\" || false,\n      userName: localStorage.getItem(\"userName\"),\n      selectedFile: null,\n      pdfFiles: [],\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Archivos\",\n        icon: \"mdi-file-document-outline\"\n      }],\n      userId: localStorage.getItem(\"id\"),\n      // Retrieve the user's name from localStorage\n      project: {\n        name: \"\",\n        company: \"\"\n      },\n      file1: null,\n      file2: null,\n      file3: null\n    };\n  },\n  mounted() {\n    this.fetchProject();\n    this.fetchPDFFiles();\n  },\n  computed: {\n    nextFileNumber() {\n      if (!this.file1Uploaded) {\n        return 1;\n      } else if (!this.file2Uploaded) {\n        return 2;\n      } else if (!this.file3Uploaded) {\n        return 3;\n      } else {\n        return \"All\";\n      }\n    },\n    allFilesUploaded() {\n      return this.file1Uploaded && this.file2Uploaded && this.file3Uploaded;\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    fetchProject() {\n      // Get the user ID from localStorage or another context\n\n      if (!this.userId) {\n        console.error(\"No user ID found.\");\n        return;\n      }\n\n      // Fetch the user data\n      axios.get(`http://localhost:3000/users/${this.userId}`).then(response => {\n        const user = response.data;\n        const projectId = user.proyecto;\n        if (!projectId) {\n          console.error(\"No project ID found for the user.\");\n          return;\n        }\n\n        // Fetch the project data using the projectId\n        return axios.get(`http://localhost:3000/projects/${projectId}`);\n      }).then(response => {\n        if (response) {\n          this.project = response.data; // Save the project in this.project\n        }\n      }).catch(error => {\n        console.error(\"Error fetching project data:\", error);\n      });\n    },\n    onFileChange(fileNumber, event) {\n      switch (fileNumber) {\n        case 1:\n          this.file1 = event.target.files[0];\n          break;\n        case 2:\n          this.file2 = event.target.files[0];\n          break;\n        case 3:\n          this.file3 = event.target.files[0];\n          break;\n        default:\n          break;\n      }\n    },\n    async uploadFiles() {\n      if (this.file1 && !this.file1Uploaded) {\n        await this.uploadFile(1, this.file1);\n      }\n      if (this.file2 && !this.file2Uploaded) {\n        await this.uploadFile(2, this.file2);\n      }\n      if (this.file3 && !this.file3Uploaded) {\n        await this.uploadFile(3, this.file3);\n      }\n    },\n    async uploadFile(fileNumber, file) {\n      if (!file) {\n        alert(`Please select a PDF file ${fileNumber} first!`);\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.status === 201) {\n          alert(`File ${fileNumber} uploaded successfully!`);\n          this[`file${fileNumber}Uploaded`] = true;\n          localStorage.setItem(`file${fileNumber}Uploaded`, \"true\");\n\n          // Extract the ID of the uploaded file\n          const fileId = response.data.file.id;\n\n          // Send a PUT request to update the user with the file ID\n          await axios.put(`http://localhost:3000/users/${this.userId}`, {\n            [`seguimiento${fileNumber}`]: fileId\n          });\n          this.fetchPDFFiles(); // After successful upload, fetch PDF files again\n        } else {\n          alert(`Failed to upload file ${fileNumber}.`);\n        }\n      } catch (error) {\n        console.error(`Error uploading file ${fileNumber}:`, error);\n        alert(`Error uploading file ${fileNumber}.`);\n      }\n    },\n    async fetchPDFFiles() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/files\");\n        this.pdfFiles = response.data;\n        // Check which files have already been uploaded\n        this.pdfFiles.forEach(file => {\n          if (file.filename === \"seguimiento1.pdf\") {\n            this.file1Uploaded = true;\n            localStorage.setItem(\"file1Uploaded\", \"true\"); // Save upload status in local storage\n          } else if (file.filename === \"seguimiento2.pdf\") {\n            this.file2Uploaded = true;\n            localStorage.setItem(\"file2Uploaded\", \"true\"); // Save upload status in local storage\n          } else if (file.filename === \"seguimiento3.pdf\") {\n            this.file3Uploaded = true;\n            localStorage.setItem(\"file3Uploaded\", \"true\"); // Save upload status in local storage\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching PDF files:\", error);\n        alert(\"Error fetching PDF files.\");\n      }\n    },\n    // Vue Component Method to Delete File\n    async deleteFile(fileId) {\n      try {\n        const response = await axios.delete(`http://localhost:3000/files/${fileId}`);\n        if (response.status === 200) {\n          alert(\"File deleted successfully!\");\n          await this.updateUserFileProperty(fileId); // Update user's file property\n          this.fetchPDFFiles(); // Refresh the list of PDF files\n        } else {\n          alert(\"Failed to delete file.\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting file:\", error);\n        alert(\"Error deleting file.\");\n      }\n    },\n    async updateUserFileProperty(fileId) {\n      try {\n        const userResponse = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userData = userResponse.data;\n\n        // Check which property contains the fileId to be deleted\n        let fileProperty;\n        let deletedFileNumber = null;\n        if (userData.seguimiento1 === fileId) {\n          fileProperty = \"seguimiento1\";\n          deletedFileNumber = 1;\n        } else if (userData.seguimiento2 === fileId) {\n          fileProperty = \"seguimiento2\";\n          deletedFileNumber = 2;\n        } else if (userData.seguimiento3 === fileId) {\n          fileProperty = \"seguimiento3\";\n          deletedFileNumber = 3;\n        }\n        if (deletedFileNumber !== null) {\n          // Disable the deleted file's field and enable the previous ones\n          this[`file${deletedFileNumber}Uploaded`] = false;\n          localStorage.setItem(`file${deletedFileNumber}Uploaded`, \"false\");\n          if (deletedFileNumber === 1) {\n            this.file2Uploaded = false;\n            this.file3Uploaded = false;\n          } else if (deletedFileNumber === 2) {\n            this.file1Uploaded = true;\n            this.file3Uploaded = false;\n          } else if (deletedFileNumber === 3) {\n            this.file1Uploaded = true;\n            this.file2Uploaded = true;\n          }\n        }\n\n        // Remove the corresponding property from the user's data\n        if (fileProperty) {\n          userData[fileProperty] = null;\n\n          // Send a PUT request to update the user's data\n          await axios.put(`http://localhost:3000/users/${this.userId}`, userData);\n        }\n      } catch (error) {\n        console.error(\"Error updating user file property:\", error);\n        alert(\"Error updating user file property.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","file1Uploaded","localStorage","getItem","file2Uploaded","file3Uploaded","userName","selectedFile","pdfFiles","drawer","sidebarItems","title","icon","userId","project","name","company","file1","file2","file3","mounted","fetchProject","fetchPDFFiles","computed","nextFileNumber","allFilesUploaded","methods","navigate","index","$router","push","logout","removeItem","console","error","get","then","response","user","projectId","proyecto","catch","onFileChange","fileNumber","event","target","files","uploadFiles","uploadFile","file","alert","formData","FormData","append","post","headers","status","setItem","fileId","id","put","forEach","filename","deleteFile","delete","updateUserFileProperty","userResponse","userData","fileProperty","deletedFileNumber","seguimiento1","seguimiento2","seguimiento3"],"sources":["/Users/angel/school-project/my-app/src/components/StudentPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Información del Proyecto\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.nombre\"\n                    label=\"Proyecto\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.empresa\"\n                    label=\"Empresa\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-row>\n  <!-- File 2 -->\n  <v-col cols=\"12\" md=\"4\" class=\"d-flex\">\n    <v-card class=\"d-flex flex-column\" outlined>\n      <v-file-input\n        v-model=\"file2\"\n        label=\"Cargar seguimiento 2\"\n        prepend-icon=\"mdi-upload\"\n        type=\"file\"\n        :disabled=\"!file1Uploaded || file2Uploaded\"\n        @change=\"onFileChange(2, $event)\"\n        accept=\"application/pdf\"\n      ></v-file-input>\n      <v-divider></v-divider>\n      <v-card-text v-if=\"file2Uploaded\" class=\"text-center\">\n        <v-icon color=\"blue darken-2\" size=\"48\">mdi-file-pdf-box</v-icon>\n        <div>{{ file2.name }}</div>\n        <v-divider></v-divider>\n        <v-btn\n          :href=\"'data:application/octet-stream;base64,' + file2.data\"\n          :download=\"file2.name\"\n          color=\"blue darken-2\"\n          block\n        >\n          Descargar\n        </v-btn>\n        <v-btn color=\"red darken-2\" block @click=\"deleteFile(2)\">\n          Eliminar\n        </v-btn>\n      </v-card-text>\n    </v-card>\n  </v-col>\n\n  <!-- File 3 -->\n  <v-col cols=\"12\" md=\"4\" class=\"d-flex\">\n    <v-card class=\"d-flex flex-column\" outlined>\n      <v-file-input\n        v-model=\"file3\"\n        label=\"Cargar seguimiento 3\"\n        prepend-icon=\"mdi-upload\"\n        type=\"file\"\n        :disabled=\"!file2Uploaded || file3Uploaded\"\n        @change=\"onFileChange(3, $event)\"\n        accept=\"application/pdf\"\n      ></v-file-input>\n      <v-divider></v-divider>\n      <v-card-text v-if=\"file3Uploaded\" class=\"text-center\">\n        <v-icon color=\"blue darken-2\" size=\"48\">mdi-file-pdf-box</v-icon>\n        <div>{{ file3.name }}</div>\n        <v-divider></v-divider>\n        <v-btn\n          :href=\"'data:application/octet-stream;base64,' + file3.data\"\n          :download=\"file3.name\"\n          color=\"blue darken-2\"\n          block\n        >\n          Descargar\n        </v-btn>\n        <v-btn color=\"red darken-2\" block @click=\"deleteFile(3)\">\n          Eliminar\n        </v-btn>\n      </v-card-text>\n    </v-card>\n  </v-col>\n</v-row>\n\n            </v-card-text>\n            <v-divider class=\"my-4\"></v-divider>\n            <div v-if=\"pdfFiles.length > 0\">\n              <v-card-title class=\"blue darken-2 white--text\">\n                ARCHIVOS SUBIDOS\n              </v-card-title>\n              <v-row>\n                <v-col\n                  v-for=\"(file, index) in pdfFiles\"\n                  :key=\"index\"\n                  cols=\"12\"\n                  md=\"4\"\n                  class=\"d-flex align-center\"\n                >\n                  <v-card class=\"ma-2 pa-2\" outlined>\n                    <v-card-text class=\"text-center\">\n                      <v-icon color=\"blue darken-2\" size=\"48\"\n                        >mdi-file-pdf-box</v-icon\n                      >\n                      <div>{{ file.filename }}</div>\n                    </v-card-text>\n                    <v-divider></v-divider>\n                    <v-btn\n                      :href=\"\n                        'data:application/octet-stream;base64,' + file.data\n                      \"\n                      :download=\"file.filename\"\n                      color=\"blue darken-2\"\n                      block\n                    >\n                      Descargar\n                    </v-btn>\n                    <v-btn\n                      color=\"red darken-2\"\n                      block\n                      @click=\"deleteFile(file._id)\"\n                    >\n                      Eliminar\n                    </v-btn>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </div>\n            <v-card-actions>\n              <v-btn\n                color=\"blue darken-2\"\n                @click=\"uploadFiles\"\n                :disabled=\"allFilesUploaded\"\n              >\n                Subir seguimiento {{ nextFileNumber }}\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      file1Uploaded: localStorage.getItem(\"file1Uploaded\") === \"true\" || false,\n      file2Uploaded: localStorage.getItem(\"file2Uploaded\") === \"true\" || false,\n      file3Uploaded: localStorage.getItem(\"file3Uploaded\") === \"true\" || false,\n      userName: localStorage.getItem(\"userName\"),\n      selectedFile: null,\n      pdfFiles: [],\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Archivos\", icon: \"mdi-file-document-outline\" },\n      ],\n      userId: localStorage.getItem(\"id\"), // Retrieve the user's name from localStorage\n      project: {\n        name: \"\",\n        company: \"\",\n      },\n      file1: null,\n      file2: null,\n      file3: null,\n    };\n  },\n  mounted() {\n    this.fetchProject();\n    this.fetchPDFFiles();\n  },\n  computed: {\n    nextFileNumber() {\n      if (!this.file1Uploaded) {\n        return 1;\n      } else if (!this.file2Uploaded) {\n        return 2;\n      } else if (!this.file3Uploaded) {\n        return 3;\n      } else {\n        return \"All\";\n      }\n    },\n    allFilesUploaded() {\n      return this.file1Uploaded && this.file2Uploaded && this.file3Uploaded;\n    },\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    fetchProject() {\n      // Get the user ID from localStorage or another context\n\n      if (!this.userId) {\n        console.error(\"No user ID found.\");\n        return;\n      }\n\n      // Fetch the user data\n      axios\n        .get(`http://localhost:3000/users/${this.userId}`)\n        .then((response) => {\n          const user = response.data;\n          const projectId = user.proyecto;\n\n          if (!projectId) {\n            console.error(\"No project ID found for the user.\");\n            return;\n          }\n\n          // Fetch the project data using the projectId\n          return axios.get(`http://localhost:3000/projects/${projectId}`);\n        })\n        .then((response) => {\n          if (response) {\n            this.project = response.data; // Save the project in this.project\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching project data:\", error);\n        });\n    },\n    onFileChange(fileNumber, event) {\n      switch (fileNumber) {\n        case 1:\n          this.file1 = event.target.files[0];\n          break;\n        case 2:\n          this.file2 = event.target.files[0];\n          break;\n        case 3:\n          this.file3 = event.target.files[0];\n          break;\n        default:\n          break;\n      }\n    },\n    async uploadFiles() {\n      if (this.file1 && !this.file1Uploaded) {\n        await this.uploadFile(1, this.file1);\n      }\n      if (this.file2 && !this.file2Uploaded) {\n        await this.uploadFile(2, this.file2);\n      }\n      if (this.file3 && !this.file3Uploaded) {\n        await this.uploadFile(3, this.file3);\n      }\n    },\n    async uploadFile(fileNumber, file) {\n      if (!file) {\n        alert(`Please select a PDF file ${fileNumber} first!`);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/upload\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        if (response.status === 201) {\n          alert(`File ${fileNumber} uploaded successfully!`);\n          this[`file${fileNumber}Uploaded`] = true;\n          localStorage.setItem(`file${fileNumber}Uploaded`, \"true\");\n\n          // Extract the ID of the uploaded file\n          const fileId = response.data.file.id;\n\n          // Send a PUT request to update the user with the file ID\n          await axios.put(`http://localhost:3000/users/${this.userId}`, {\n            [`seguimiento${fileNumber}`]: fileId,\n          });\n\n          this.fetchPDFFiles(); // After successful upload, fetch PDF files again\n        } else {\n          alert(`Failed to upload file ${fileNumber}.`);\n        }\n      } catch (error) {\n        console.error(`Error uploading file ${fileNumber}:`, error);\n        alert(`Error uploading file ${fileNumber}.`);\n      }\n    },\n\n    async fetchPDFFiles() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/files\");\n        this.pdfFiles = response.data;\n        // Check which files have already been uploaded\n        this.pdfFiles.forEach((file) => {\n          if (file.filename === \"seguimiento1.pdf\") {\n            this.file1Uploaded = true;\n            localStorage.setItem(\"file1Uploaded\", \"true\"); // Save upload status in local storage\n          } else if (file.filename === \"seguimiento2.pdf\") {\n            this.file2Uploaded = true;\n            localStorage.setItem(\"file2Uploaded\", \"true\"); // Save upload status in local storage\n          } else if (file.filename === \"seguimiento3.pdf\") {\n            this.file3Uploaded = true;\n            localStorage.setItem(\"file3Uploaded\", \"true\"); // Save upload status in local storage\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching PDF files:\", error);\n        alert(\"Error fetching PDF files.\");\n      }\n    },\n    // Vue Component Method to Delete File\n    async deleteFile(fileId) {\n      try {\n        const response = await axios.delete(\n          `http://localhost:3000/files/${fileId}`\n        );\n        if (response.status === 200) {\n          alert(\"File deleted successfully!\");\n          await this.updateUserFileProperty(fileId); // Update user's file property\n          this.fetchPDFFiles(); // Refresh the list of PDF files\n        } else {\n          alert(\"Failed to delete file.\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting file:\", error);\n        alert(\"Error deleting file.\");\n      }\n    },\n\n    async updateUserFileProperty(fileId) {\n      try {\n        const userResponse = await axios.get(\n          `http://localhost:3000/users/${this.userId}`\n        );\n        const userData = userResponse.data;\n\n        // Check which property contains the fileId to be deleted\n        let fileProperty;\n        let deletedFileNumber = null;\n        if (userData.seguimiento1 === fileId) {\n          fileProperty = \"seguimiento1\";\n          deletedFileNumber = 1;\n        } else if (userData.seguimiento2 === fileId) {\n          fileProperty = \"seguimiento2\";\n          deletedFileNumber = 2;\n        } else if (userData.seguimiento3 === fileId) {\n          fileProperty = \"seguimiento3\";\n          deletedFileNumber = 3;\n        }\n\n        if (deletedFileNumber !== null) {\n          // Disable the deleted file's field and enable the previous ones\n          this[`file${deletedFileNumber}Uploaded`] = false;\n          localStorage.setItem(`file${deletedFileNumber}Uploaded`, \"false\");\n          if (deletedFileNumber === 1) {\n            this.file2Uploaded = false;\n            this.file3Uploaded = false;\n          } else if (deletedFileNumber === 2) {\n            this.file1Uploaded = true;\n            this.file3Uploaded = false;\n          } else if (deletedFileNumber === 3) {\n            this.file1Uploaded = true;\n            this.file2Uploaded = true;\n          }\n        }\n\n        // Remove the corresponding property from the user's data\n        if (fileProperty) {\n          userData[fileProperty] = null;\n\n          // Send a PUT request to update the user's data\n          await axios.put(\n            `http://localhost:3000/users/${this.userId}`,\n            userData\n          );\n        }\n      } catch (error) {\n        console.error(\"Error updating user file property:\", error);\n        alert(\"Error updating user file property.\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}