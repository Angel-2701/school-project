{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }],\n      userId: localStorage.getItem('id'),\n      // Retrieve the user's ID from localStorage\n      project: {\n        name: '',\n        company: ''\n      },\n      file1: null,\n      file2: null,\n      file3: null,\n      file1Uploaded: false,\n      file2Uploaded: false\n    };\n  },\n  mounted() {\n    this.fetchProject();\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      // Redirect the user to the login page\n      this.$router.push('/login');\n    },\n    fetchProject() {\n      if (!this.userId) {\n        console.error(\"No user ID found.\");\n        return;\n      }\n      axios.get(`http://localhost:3000/users/${this.userId}`).then(response => {\n        const user = response.data;\n\n        // Fetch the files themselves\n        return Promise.all([user.file1 ? this.fetchFile(user.file1) : null, user.file2 ? this.fetchFile(user.file2) : null, user.file3 ? this.fetchFile(user.file3) : null]);\n      }).then(files => {\n        // Assign the fetched files to the corresponding v-model variables\n        this.file1 = files[0];\n        this.file2 = files[1];\n        this.file3 = files[2];\n\n        // Set fileUploaded flags accordingly\n        this.file1Uploaded = !!files[0];\n        this.file2Uploaded = !!files[1];\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    },\n    fetchFile(filePath) {\n      // Fetch the file from the server\n      return axios.get(`http://localhost:3000/${filePath}`, {\n        responseType: \"blob\"\n      }).then(response => {\n        // Convert the blob response to a File object\n        const blob = new Blob([response.data]);\n        const file = new File([blob], filePath.split(\"/\").pop()); // Set the file name\n        return file;\n      }).catch(error => {\n        console.error(\"Error fetching file:\", error);\n        return null;\n      });\n    },\n    clearFile(fileNumber) {\n      switch (fileNumber) {\n        case 1:\n          this.file1 = null;\n          this.file1Uploaded = false;\n          break;\n        case 2:\n          this.file2 = null;\n          this.file2Uploaded = false;\n          break;\n        case 3:\n          this.file3 = null;\n          break;\n        default:\n          break;\n      }\n    },\n    submitFiles() {\n      const formData = new FormData();\n      formData.append('file1', this.file1);\n      axios.post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log('File 1 uploaded successfully:', response.data);\n        this.file1Uploaded = true;\n        // If file 1 is uploaded successfully, proceed to upload file 2\n        if (this.file2) {\n          this.uploadFile2();\n        }\n      }).catch(error => {\n        console.error('Error uploading file 1:', error);\n      });\n    },\n    uploadFile2() {\n      const formData = new FormData();\n      formData.append('file2', this.file2);\n      axios.post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log('File 2 uploaded successfully:', response.data);\n        this.file2Uploaded = true;\n        // If file 2 is uploaded successfully, proceed to upload file 3\n        if (this.file3) {\n          this.uploadFile3();\n        }\n      }).catch(error => {\n        console.error('Error uploading file 2:', error);\n      });\n    },\n    uploadFile3() {\n      const formData = new FormData();\n      formData.append('file3', this.file3);\n      axios.post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log('File 3 uploaded successfully:', response.data);\n        // File 3 uploaded successfully\n      }).catch(error => {\n        console.error('Error uploading file 3:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","drawer","sidebarItems","title","icon","userId","localStorage","getItem","project","name","company","file1","file2","file3","file1Uploaded","file2Uploaded","mounted","fetchProject","methods","navigate","index","$router","push","logout","removeItem","console","error","get","then","response","user","Promise","all","fetchFile","files","catch","filePath","responseType","blob","Blob","file","File","split","pop","clearFile","fileNumber","submitFiles","formData","FormData","append","post","headers","log","uploadFile2","uploadFile3"],"sources":["/Users/angel/school-project/my-app/src/components/StudentPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <v-col cols=\"12\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\"\n              >Project Information</v-card-title\n            >\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.name\"\n                    label=\"Project Name\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.company\"\n                    label=\"Company\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-row>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file1\"\n                    label=\"Upload File 1\"\n                    prepend-icon=\"mdi-upload\"\n                    clearable\n                    @click:clear=\"clearFile(1)\"\n                  ></v-file-input>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file2\"\n                    label=\"Upload File 2\"\n                    prepend-icon=\"mdi-upload\"\n                    clearable\n                    :disabled=\"!file1Uploaded\"\n                    @click:clear=\"clearFile(2)\"\n                  ></v-file-input>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file3\"\n                    label=\"Upload File 3\"\n                    prepend-icon=\"mdi-upload\"\n                    clearable\n                    :disabled=\"!file2Uploaded\"\n                    @click:clear=\"clearFile(3)\"\n                  ></v-file-input>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"blue darken-2\" @click=\"submitFiles\"\n                >Submit Files</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' }\n      ],\n      userId: localStorage.getItem('id'), // Retrieve the user's ID from localStorage\n      project: {\n        name: '',\n        company: ''\n      },\n      file1: null,\n      file2: null,\n      file3: null,\n      file1Uploaded: false,\n      file2Uploaded: false\n    }\n  },\n  mounted () {\n    this.fetchProject()\n  },\n  methods: {\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student')\n          break\n        case 1:\n          this.$router.push('/student/asesorias')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    },\n    fetchProject() {\n  if (!this.userId) {\n    console.error(\"No user ID found.\");\n    return;\n  }\n\n  axios\n    .get(`http://localhost:3000/users/${this.userId}`)\n    .then((response) => {\n      const user = response.data;\n\n      // Fetch the files themselves\n      return Promise.all([\n        user.file1 ? this.fetchFile(user.file1) : null,\n        user.file2 ? this.fetchFile(user.file2) : null,\n        user.file3 ? this.fetchFile(user.file3) : null,\n      ]);\n    })\n    .then((files) => {\n      // Assign the fetched files to the corresponding v-model variables\n      this.file1 = files[0];\n      this.file2 = files[1];\n      this.file3 = files[2];\n\n      // Set fileUploaded flags accordingly\n      this.file1Uploaded = !!files[0];\n      this.file2Uploaded = !!files[1];\n    })\n    .catch((error) => {\n      console.error(\"Error fetching user data:\", error);\n    });\n},\n\nfetchFile(filePath) {\n  // Fetch the file from the server\n  return axios.get(`http://localhost:3000/${filePath}`, { responseType: \"blob\" })\n    .then((response) => {\n      // Convert the blob response to a File object\n      const blob = new Blob([response.data]);\n      const file = new File([blob], filePath.split(\"/\").pop()); // Set the file name\n      return file;\n    })\n    .catch((error) => {\n      console.error(\"Error fetching file:\", error);\n      return null;\n    });\n},\n\n\n    clearFile (fileNumber) {\n      switch (fileNumber) {\n        case 1:\n          this.file1 = null\n          this.file1Uploaded = false\n          break\n        case 2:\n          this.file2 = null\n          this.file2Uploaded = false\n          break\n        case 3:\n          this.file3 = null\n          break\n        default:\n          break\n      }\n    },\n    submitFiles () {\n      const formData = new FormData()\n      formData.append('file1', this.file1)\n\n      axios\n        .post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then((response) => {\n          console.log('File 1 uploaded successfully:', response.data)\n          this.file1Uploaded = true\n          // If file 1 is uploaded successfully, proceed to upload file 2\n          if (this.file2) {\n            this.uploadFile2()\n          }\n        })\n        .catch((error) => {\n          console.error('Error uploading file 1:', error)\n        })\n    },\n    uploadFile2 () {\n      const formData = new FormData()\n      formData.append('file2', this.file2)\n\n      axios\n        .post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then((response) => {\n          console.log('File 2 uploaded successfully:', response.data)\n          this.file2Uploaded = true\n          // If file 2 is uploaded successfully, proceed to upload file 3\n          if (this.file3) {\n            this.uploadFile3()\n          }\n        })\n        .catch((error) => {\n          console.error('Error uploading file 2:', error)\n        })\n    },\n    uploadFile3 () {\n      const formData = new FormData()\n      formData.append('file3', this.file3)\n\n      axios\n        .post(`http://localhost:3000/users/${this.userId}/files`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then((response) => {\n          console.log('File 3 uploaded successfully:', response.data)\n          // File 3 uploaded successfully\n        })\n        .catch((error) => {\n          console.error('Error uploading file 3:', error)\n        })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":";AAyGA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,YAAY,EAAE,CACZ;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,EACjD;QAAED,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAA2B,EACxD;MACDC,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;MAAE;MACpCC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,YAAY,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAOA,CAAGC,KAAK,EAAE;MACf,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU;UAC5B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,oBAAoB;UACtC;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAKA,CAAA,EAAK;MACR;MACAjB,YAAY,CAACkB,UAAU,CAAC,OAAO;MAC/BlB,YAAY,CAACkB,UAAU,CAAC,MAAM;MAC9B;MACA,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC5B,CAAC;IACDL,YAAYA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACZ,MAAM,EAAE;QAChBoB,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QAClC;MACF;MAEA3B,KAAI,CACD4B,GAAG,CAAE,+BAA8B,IAAI,CAACtB,MAAO,EAAC,EAChDuB,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAMC,IAAG,GAAID,QAAQ,CAAC7B,IAAI;;QAE1B;QACA,OAAO+B,OAAO,CAACC,GAAG,CAAC,CACjBF,IAAI,CAACnB,KAAI,GAAI,IAAI,CAACsB,SAAS,CAACH,IAAI,CAACnB,KAAK,IAAI,IAAI,EAC9CmB,IAAI,CAAClB,KAAI,GAAI,IAAI,CAACqB,SAAS,CAACH,IAAI,CAAClB,KAAK,IAAI,IAAI,EAC9CkB,IAAI,CAACjB,KAAI,GAAI,IAAI,CAACoB,SAAS,CAACH,IAAI,CAACjB,KAAK,IAAI,IAAI,CAC/C,CAAC;MACJ,CAAC,EACAe,IAAI,CAAEM,KAAK,IAAK;QACf;QACA,IAAI,CAACvB,KAAI,GAAIuB,KAAK,CAAC,CAAC,CAAC;QACrB,IAAI,CAACtB,KAAI,GAAIsB,KAAK,CAAC,CAAC,CAAC;QACrB,IAAI,CAACrB,KAAI,GAAIqB,KAAK,CAAC,CAAC,CAAC;;QAErB;QACA,IAAI,CAACpB,aAAY,GAAI,CAAC,CAACoB,KAAK,CAAC,CAAC,CAAC;QAC/B,IAAI,CAACnB,aAAY,GAAI,CAAC,CAACmB,KAAK,CAAC,CAAC,CAAC;MACjC,CAAC,EACAC,KAAK,CAAET,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN,CAAC;IAEDO,SAASA,CAACG,QAAQ,EAAE;MAClB;MACA,OAAOrC,KAAK,CAAC4B,GAAG,CAAE,yBAAwBS,QAAS,EAAC,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAC,EAC3ET,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMS,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACV,QAAQ,CAAC7B,IAAI,CAAC,CAAC;QACtC,MAAMwC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACH,IAAI,CAAC,EAAEF,QAAQ,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,EAAE;QAC1D,OAAOH,IAAI;MACb,CAAC,EACAL,KAAK,CAAET,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAO,IAAI;MACb,CAAC,CAAC;IACN,CAAC;IAGGkB,SAAQA,CAAGC,UAAU,EAAE;MACrB,QAAQA,UAAU;QAChB,KAAK,CAAC;UACJ,IAAI,CAAClC,KAAI,GAAI,IAAG;UAChB,IAAI,CAACG,aAAY,GAAI,KAAI;UACzB;QACF,KAAK,CAAC;UACJ,IAAI,CAACF,KAAI,GAAI,IAAG;UAChB,IAAI,CAACG,aAAY,GAAI,KAAI;UACzB;QACF,KAAK,CAAC;UACJ,IAAI,CAACF,KAAI,GAAI,IAAG;UAChB;QACF;UACE;MACJ;IACF,CAAC;IACDiC,WAAUA,CAAA,EAAK;MACb,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACtC,KAAK;MAEnCZ,KAAI,CACDmD,IAAI,CAAE,+BAA8B,IAAI,CAAC7C,MAAO,QAAO,EAAE0C,QAAQ,EAAE;QAClEI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAvB,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,OAAO,CAAC2B,GAAG,CAAC,+BAA+B,EAAEvB,QAAQ,CAAC7B,IAAI;QAC1D,IAAI,CAACc,aAAY,GAAI,IAAG;QACxB;QACA,IAAI,IAAI,CAACF,KAAK,EAAE;UACd,IAAI,CAACyC,WAAW,CAAC;QACnB;MACF,CAAC,EACAlB,KAAK,CAAET,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK;MAChD,CAAC;IACL,CAAC;IACD2B,WAAUA,CAAA,EAAK;MACb,MAAMN,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACrC,KAAK;MAEnCb,KAAI,CACDmD,IAAI,CAAE,+BAA8B,IAAI,CAAC7C,MAAO,QAAO,EAAE0C,QAAQ,EAAE;QAClEI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAvB,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,OAAO,CAAC2B,GAAG,CAAC,+BAA+B,EAAEvB,QAAQ,CAAC7B,IAAI;QAC1D,IAAI,CAACe,aAAY,GAAI,IAAG;QACxB;QACA,IAAI,IAAI,CAACF,KAAK,EAAE;UACd,IAAI,CAACyC,WAAW,CAAC;QACnB;MACF,CAAC,EACAnB,KAAK,CAAET,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK;MAChD,CAAC;IACL,CAAC;IACD4B,WAAUA,CAAA,EAAK;MACb,MAAMP,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACpC,KAAK;MAEnCd,KAAI,CACDmD,IAAI,CAAE,+BAA8B,IAAI,CAAC7C,MAAO,QAAO,EAAE0C,QAAQ,EAAE;QAClEI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAvB,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,OAAO,CAAC2B,GAAG,CAAC,+BAA+B,EAAEvB,QAAQ,CAAC7B,IAAI;QAC1D;MACF,CAAC,EACAmC,KAAK,CAAET,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK;MAChD,CAAC;IACL;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}