{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      options: ['Option 1', 'Option 2', 'Option 3', 'Option 4', 'Option 5', 'Option 6'\n      // Add more options as needed\n      ],\n      selectedOptions: [],\n      teachers: [],\n      sidebarItems: [{\n        title: 'Projects',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Students',\n        icon: 'mdi-account-plus-outline'\n      }, {\n        title: 'Teachers',\n        icon: 'mdi-account-tie'\n      }],\n      userName: 'John Doe',\n      drawer: false,\n      editDialog: false,\n      editedTeacher: {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        correo: '',\n        contraseña: ''\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newTeacher: {\n        nombre: '',\n        apellido: '',\n        correo: '',\n        contraseña: ''\n        // Add more fields as needed\n      }\n    };\n  },\n  methods: {\n    handleSelectionChange(newValues, oldValue) {\n      if (newValues.length > 5) {\n        // If more than 5 options are selected, keep only the first 5 selections\n        this.selectedOptions = newValues.slice(0, 5);\n      }\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get('http://localhost:3000/teachers');\n        this.teachers = response.data;\n      } catch (error) {\n        console.error('Error fetching teachers:', error);\n      }\n    },\n    async navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/admin');\n          break;\n        case 1:\n          this.$router.push('/students');\n          break;\n        case 2:\n          this.$router.push('/teachers');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n    },\n    editUser(teacher) {\n      this.editedTeacher = {\n        ...teacher\n      };\n      this.editDialog = true;\n    },\n    async saveEditedTeacher() {\n      try {\n        // Send the updated teacher data to the server\n        const response = await axios.put(`http://localhost:3000/users/${this.editedTeacher._id}`, this.editedTeacher);\n        console.log('Teacher updated successfully:', response.data);\n        this.fetchData();\n      } catch (error) {\n        console.error('Error updating teacher:', error);\n      }\n      this.editDialog = false;\n    },\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n    },\n    async saveNewTeacher() {\n      try {\n        // Add 'rol' field with value 'teacher'\n        this.newTeacher.rol = 'teacher';\n        const response = await axios.post('http://localhost:3000/register', this.newTeacher);\n        if (response.status === 201) {\n          console.log('Teacher created successfully:', response.data);\n          this.fetchData();\n        } else {\n          console.error('Failed to create teacher:', response.data);\n        }\n      } catch (error) {\n        console.error('Error creating teacher:', error);\n      }\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    async deleteTeacher(teacherId) {\n      try {\n        const response = await axios.delete(`http://localhost:3000/users/${teacherId}`);\n        console.log('Teacher deleted successfully:', response.data);\n        this.fetchData(); // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error('Error deleting teacher:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","data","options","selectedOptions","teachers","sidebarItems","title","icon","userName","drawer","editDialog","editedTeacher","_id","nombre","apellido","correo","contraseña","createDialog","newTeacher","methods","handleSelectionChange","newValues","oldValue","length","slice","fetchData","response","get","error","console","navigate","index","$router","push","logout","editUser","teacher","saveEditedTeacher","put","log","cancelEdit","openCreateDialog","saveNewTeacher","rol","post","status","cancelCreate","deleteTeacher","teacherId","delete","mounted"],"sources":["/Users/angel/project-system/my-app/src/components/TeachersPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"10\">\n          <v-card>\n            <!-- Teachers Data -->\n            <v-data-table\n              v-if=\"teachers.length > 0\"\n              :items=\"teachers\"\n              align=\"center\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Teachers</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr>\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    {{ value }}\n                  </td>\n                  <td>\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editUser(item)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteTeacher(item._id)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Edit Teacher</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"editedTeacher.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.contraseña\"\n              label=\"Password\"\n              type=\"password\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveEditedTeacher\">Save</v-btn>\n            <v-btn @click=\"cancelEdit\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Create New Teacher</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"newTeacher._id\" label=\"ID\"></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.contraseña\"\n              label=\"Password\"\n              type=\"password\"\n            ></v-text-field>\n            <v-select\n              v-model=\"selectedOptions\"\n              :items=\"options\"\n              label=\"Select options (max 5)\"\n              multiple\n              counter\n              chips\n            ></v-select>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveNewTeacher\">Save</v-btn>\n            <v-btn @click=\"cancelCreate\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      options: [\n        'Option 1',\n        'Option 2',\n        'Option 3',\n        'Option 4',\n        'Option 5',\n        'Option 6'\n        // Add more options as needed\n      ],\n      selectedOptions: [],\n      teachers: [],\n      sidebarItems: [\n        { title: 'Projects', icon: 'mdi-folder-outline' },\n        { title: 'Students', icon: 'mdi-account-plus-outline' },\n        { title: 'Teachers', icon: 'mdi-account-tie' }\n      ],\n      userName: 'John Doe',\n      drawer: false,\n      editDialog: false,\n      editedTeacher: {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        correo: '',\n        contraseña: ''\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newTeacher: {\n        nombre: '',\n        apellido: '',\n        correo: '',\n        contraseña: ''\n        // Add more fields as needed\n      }\n    }\n  },\n  methods: {\n    handleSelectionChange (newValues, oldValue) {\n      if (newValues.length > 5) {\n        // If more than 5 options are selected, keep only the first 5 selections\n        this.selectedOptions = newValues.slice(0, 5)\n      }\n    },\n    async fetchData () {\n      try {\n        const response = await axios.get('http://localhost:3000/teachers')\n        this.teachers = response.data\n      } catch (error) {\n        console.error('Error fetching teachers:', error)\n      }\n    },\n\n    async navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/admin')\n          break\n        case 1:\n          this.$router.push('/students')\n          break\n        case 2:\n          this.$router.push('/teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n    },\n    editUser (teacher) {\n      this.editedTeacher = { ...teacher }\n      this.editDialog = true\n    },\n    async saveEditedTeacher () {\n      try {\n        // Send the updated teacher data to the server\n        const response = await axios.put(\n          `http://localhost:3000/users/${this.editedTeacher._id}`,\n          this.editedTeacher\n        )\n\n        console.log('Teacher updated successfully:', response.data)\n        this.fetchData()\n      } catch (error) {\n        console.error('Error updating teacher:', error)\n      }\n      this.editDialog = false\n    },\n\n    cancelEdit () {\n      this.editDialog = false\n    },\n    openCreateDialog () {\n      this.createDialog = true\n    },\n    async saveNewTeacher () {\n      try {\n        // Add 'rol' field with value 'teacher'\n        this.newTeacher.rol = 'teacher'\n\n        const response = await axios.post(\n          'http://localhost:3000/register',\n          this.newTeacher\n        )\n        if (response.status === 201) {\n          console.log('Teacher created successfully:', response.data)\n          this.fetchData()\n        } else {\n          console.error('Failed to create teacher:', response.data)\n        }\n      } catch (error) {\n        console.error('Error creating teacher:', error)\n      }\n      this.createDialog = false\n    },\n\n    cancelCreate () {\n      this.createDialog = false\n    },\n    async deleteTeacher (teacherId) {\n      try {\n        const response = await axios.delete(\n          `http://localhost:3000/users/${teacherId}`\n        )\n        console.log('Teacher deleted successfully:', response.data)\n        this.fetchData() // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error('Error deleting teacher:', error)\n      }\n    }\n  },\n  mounted () {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}