{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nexport default {\n  data() {\n    return {\n      archivos: [{\n        id: 1,\n        fieldName: \"Solicitud de residencias profesionales\",\n        file: null,\n        submitted: false\n      }, {\n        id: 2,\n        fieldName: \"Carta de presentación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 3,\n        fieldName: \"Carta de aceptación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 4,\n        fieldName: \"Cartilla IMSS\",\n        file: null,\n        submitted: false\n      }, {\n        id: 5,\n        fieldName: \"Oficio de Asignación de asesor interno\",\n        file: null,\n        submitted: false\n      }, {\n        id: 6,\n        fieldName: \"Anteproyecto\",\n        file: null,\n        submitted: false\n      }, {\n        id: 7,\n        fieldName: \"Liberación de los 5 créditos\",\n        file: null,\n        submitted: false\n      }, {\n        id: 8,\n        fieldName: \"Liberación servicio social\",\n        file: null,\n        submitted: false\n      }],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Archivos\",\n        icon: \"mdi-file-document-outline\"\n      }],\n      userId: localStorage.getItem(\"id\")\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some(archivo => !archivo.file);\n    }\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n        // Update archivo objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.archivos[index]) {\n            this.archivos[index].file = {\n              id: file._id,\n              filename: file.filename,\n              data: file.data // assuming 'data' contains the base64 string\n            };\n            this.archivos[index].submitted = true;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists\n          if (archivo.file) {\n            // Append each file to the FormData object\n            formData.append(\"files\", archivo.file);\n          }\n        }\n\n        // Append userId to formData\n        formData.append(\"userId\", this.userId);\n\n        // Perform an HTTP POST request to submit the files\n        const response = await axios.post(\"http://localhost:3000/upload-archivo\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n\n        // Check if the request was successful\n        if (response.status === 201) {\n          // Log the response data for debugging\n          console.log(\"Response data:\", response.data);\n\n          // Check if the response contains the files array\n          if (response.data && response.data.files) {\n            // Update archivos with the new data structure\n            const updatedArchivos = {\n              ...this.archivos\n            };\n\n            // Iterate through each archivo and update the submitted status and file data\n            response.data.files.forEach(file => {\n              const archivo = this.archivos.find(a => a.file && a.file.name === file.filename);\n\n              // Check if archivo and file exist\n              if (archivo) {\n                // Update the submitted status and file data for the archivo\n                archivo.submitted = true;\n                archivo.file = {\n                  id: file.id,\n                  filename: file.filename,\n                  data: file.data // assuming the server sends back file data\n                };\n                // Update the file ID in updatedArchivos\n                updatedArchivos[archivo.fieldName] = archivo.file.id;\n              }\n            });\n\n            // Update user collection with the updatedArchivos object\n            await axios.put(`http://localhost:3000/users/${this.userId}`, {\n              archivos: updatedArchivos\n            });\n\n            // Update the archivos array in local storage\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            // Display a success message to the user\n            alert(\"Files submitted successfully!\");\n          } else {\n            // Handle the case where the response does not contain the expected data\n            console.error(\"Response data does not contain files array:\", response.data);\n          }\n        } else {\n          // Handle the case where the request was not successful\n          console.error(\"Failed to submit files:\", response.statusText);\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n      zip.generateAsync({\n        type: \"blob\"\n      }).then(content => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios.delete(`http://localhost:3000/archivos/${archivoId}`, {\n        data: {\n          userId: this.userId\n        } // Pass userId in the request body\n      }).then(response => {\n        if (response.status === 200) {\n          // Reset the archivo object\n          this.archivos[index].submitted = false;\n          this.archivos[index].file = null; // Ensure the file property is null\n          localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n          window.alert(\"File deleted successfully!\");\n        } else {\n          console.error(\"Failed to delete file.\");\n        }\n      }).catch(error => {\n        console.error(\"Error deleting file:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","JSZip","saveAs","data","archivos","id","fieldName","file","submitted","userName","localStorage","getItem","drawer","sidebarItems","title","icon","userId","mounted","fetchArchivoData","computed","isSubmitDisabled","some","archivo","methods","response","get","files","forEach","index","_id","filename","error","console","navigate","$router","push","logout","removeItem","submitForm","formData","FormData","i","length","append","post","headers","status","log","updatedArchivos","find","a","name","put","setItem","JSON","stringify","alert","statusText","downloadAllFiles","zip","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","uniqueFilename","generateAsync","type","then","content","deleteFile","archivoId","delete","window","catch"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Archivos\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col\n                  v-for=\"(archivo, index) in archivos\"\n                  :key=\"archivo.id\"\n                  cols=\"12\"\n                  md=\"6\"\n                >\n                  <v-card class=\"mb-3\">\n                    <v-card-title>{{ archivo.fieldName }}</v-card-title>\n                    <v-card-text class=\"text-center\" v-if=\"archivo.submitted\">\n                      <v-icon color=\"blue darken-2\" size=\"48\"\n                        >mdi-file-pdf-box</v-icon\n                      >\n                      <div>{{ archivo.file.filename }}</div>\n                    </v-card-text>\n                    <v-divider v-if=\"archivo.submitted\"></v-divider>\n                    <v-file-input\n                      v-if=\"!archivo.submitted\"\n                      v-model=\"archivo.file\"\n                      :label=\"archivo.fieldName\"\n                      prepend-icon=\"mdi-upload\"\n                      accept=\"application/pdf\"\n                    ></v-file-input>\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      :href=\"\n                        'data:application/octet-stream;base64,' +\n                        archivo.file.data\n                      \"\n                      :download=\"archivo.file.filename\"\n                      color=\"blue darken-2\"\n                      >Descargar</v-btn\n                    >\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      color=\"red darken-2\"\n                      @click=\"deleteFile(index)\"\n                      >Eliminar</v-btn\n                    >\n                  </v-card>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-divider class=\"my-4\"></v-divider>\n            <v-card-actions>\n              <v-btn\n                :disabled=\"isSubmitDisabled\"\n                color=\"blue darken-2\"\n                @click=\"submitForm\"\n                >Enviar</v-btn\n              >\n              <v-btn color=\"primary\" @click=\"downloadAllFiles\"\n                >Descargar todos los archivos</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport default {\n  data() {\n    return {\n      archivos: [\n        {\n          id: 1,\n          fieldName: \"Solicitud de residencias profesionales\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 2,\n          fieldName: \"Carta de presentación\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 3,\n          fieldName: \"Carta de aceptación\",\n          file: null,\n          submitted: false,\n        },\n        { id: 4, fieldName: \"Cartilla IMSS\", file: null, submitted: false },\n        {\n          id: 5,\n          fieldName: \"Oficio de Asignación de asesor interno\",\n          file: null,\n          submitted: false,\n        },\n        { id: 6, fieldName: \"Anteproyecto\", file: null, submitted: false },\n        {\n          id: 7,\n          fieldName: \"Liberación de los 5 créditos\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 8,\n          fieldName: \"Liberación servicio social\",\n          file: null,\n          submitted: false,\n        },\n      ],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Archivos\", icon: \"mdi-file-document-outline\" },\n      ],\n      userId: localStorage.getItem(\"id\"),\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some((archivo) => !archivo.file);\n    },\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n        // Update archivo objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.archivos[index]) {\n            this.archivos[index].file = {\n              id: file._id,\n              filename: file.filename,\n              data: file.data, // assuming 'data' contains the base64 string\n            };\n            this.archivos[index].submitted = true;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists\n          if (archivo.file) {\n            // Append each file to the FormData object\n            formData.append(\"files\", archivo.file);\n          }\n        }\n\n        // Append userId to formData\n        formData.append(\"userId\", this.userId);\n\n        // Perform an HTTP POST request to submit the files\n        const response = await axios.post(\n          \"http://localhost:3000/upload-archivo\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        // Check if the request was successful\n        if (response.status === 201) {\n          // Log the response data for debugging\n          console.log(\"Response data:\", response.data);\n\n          // Check if the response contains the files array\n          if (response.data && response.data.files) {\n            // Update archivos with the new data structure\n            const updatedArchivos = { ...this.archivos };\n\n            // Iterate through each archivo and update the submitted status and file data\n            response.data.files.forEach((file) => {\n              const archivo = this.archivos.find(\n                (a) => a.file && a.file.name === file.filename\n              );\n\n              // Check if archivo and file exist\n              if (archivo) {\n                // Update the submitted status and file data for the archivo\n                archivo.submitted = true;\n                archivo.file = {\n                  id: file.id,\n                  filename: file.filename,\n                  data: file.data, // assuming the server sends back file data\n                };\n                // Update the file ID in updatedArchivos\n                updatedArchivos[archivo.fieldName] = archivo.file.id;\n              }\n            });\n\n            // Update user collection with the updatedArchivos object\n            await axios.put(`http://localhost:3000/users/${this.userId}`, {\n              archivos: updatedArchivos,\n            });\n\n            // Update the archivos array in local storage\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            // Display a success message to the user\n            alert(\"Files submitted successfully!\");\n          } else {\n            // Handle the case where the response does not contain the expected data\n            console.error(\n              \"Response data does not contain files array:\",\n              response.data\n            );\n          }\n        } else {\n          // Handle the case where the request was not successful\n          console.error(\"Failed to submit files:\", response.statusText);\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      }\n    },\n\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n\n      zip.generateAsync({ type: \"blob\" }).then((content) => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios\n        .delete(`http://localhost:3000/archivos/${archivoId}`, {\n          data: { userId: this.userId }, // Pass userId in the request body\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            // Reset the archivo object\n            this.archivos[index].submitted = false;\n            this.archivos[index].file = null; // Ensure the file property is null\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            window.alert(\"File deleted successfully!\");\n          } else {\n            console.error(\"Failed to delete file.\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error deleting file:\", error);\n        });\n    }\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}