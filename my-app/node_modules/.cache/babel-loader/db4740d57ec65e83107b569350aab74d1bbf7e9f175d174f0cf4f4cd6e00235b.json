{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7113872c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Uploaded PDF Files\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = [\"href\", \"download\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"application/pdf\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadFile && $options.uploadFile(...args))\n  }, \"Upload PDF\"), $data.pdfFiles.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pdfFiles, (file, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createCommentVNode(\" View PDF \"), _createElementVNode(\"a\", {\n      href: 'data:application/pdf;base64,' + file.data,\n      target: \"_blank\"\n    }, _toDisplayString(file.filename), 9 /* TEXT, PROPS */, _hoisted_3), _createCommentVNode(\" Download PDF \"), _createElementVNode(\"a\", {\n      href: 'data:application/octet-stream;base64,' + file.data,\n      download: file.filename\n    }, \"Download\", 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementVNode","_createElementBlock","type","onChange","_cache","args","$options","onFileChange","accept","onClick","uploadFile","$data","pdfFiles","length","_hoisted_1","_hoisted_2","_Fragment","_renderList","file","index","_createCommentVNode","href","data","target","filename","_hoisted_3","download","_hoisted_4"],"sources":["/Users/angel/school-project/my-app/src/components/StudentPage.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"onFileChange\" accept=\"application/pdf\" />\n    <button @click=\"uploadFile\">Upload PDF</button>\n\n    <div v-if=\"pdfFiles.length > 0\">\n      <h2>Uploaded PDF Files</h2>\n      <ul>\n        <li v-for=\"(file, index) in pdfFiles\" :key=\"index\">\n          <!-- View PDF -->\n          <a\n            :href=\"'data:application/pdf;base64,' + file.data\"\n            target=\"_blank\"\n            >{{ file.filename }}</a\n          >\n          <!-- Download PDF -->\n          <a\n            :href=\"'data:application/octet-stream;base64,' + file.data\"\n            :download=\"file.filename\"\n            >Download</a\n          >\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      pdfFiles: [],\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.selectedFile) {\n        alert(\"Please select a PDF file first!\");\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"file\", this.selectedFile);\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/upload\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        if (response.status === 201) {\n          alert(\"File uploaded successfully!\");\n          this.fetchPDFFiles(); // After successful upload, fetch PDF files again\n        } else {\n          alert(\"Failed to upload file.\");\n        }\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n        alert(\"Error uploading file.\");\n      }\n    },\n    async fetchPDFFiles() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/files\");\n        this.pdfFiles = response.data;\n      } catch (error) {\n        console.error(\"Error fetching PDF files:\", error);\n        alert(\"Error fetching PDF files.\");\n      }\n    },\n  },\n  mounted() {\n    this.fetchPDFFiles(); // Fetch PDF files when the component is mounted\n  },\n};\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n"],"mappings":";;;EAAAA,GAAA;AAAA;gEAMMC,mBAAA,CAA2B,YAAvB,oBAAkB;mBAN5B;mBAAA;;uBACEC,mBAAA,CAuBM,cAtBJD,mBAAA,CAAqE;IAA9DE,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;qCACjDR,mBAAA,CAA+C;IAAtCS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,UAAA,IAAAJ,QAAA,CAAAI,UAAA,IAAAL,IAAA,CAAU;KAAE,YAAU,GAE3BM,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAA1BZ,mBAAA,CAkBM,OAvBVa,UAAA,GAMMC,UAA2B,EAC3Bf,mBAAA,CAeK,c,kBAdHC,mBAAA,CAaKe,SAAA,QArBbC,WAAA,CAQoCN,KAAA,CAAAC,QAAQ,EAR5C,CAQoBM,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAaK;MAbkCF,GAAG,EAAEoB;IAAK,IAC/CC,mBAAA,cAAiB,EACjBpB,mBAAA,CAIC;MAHEqB,IAAI,mCAAmCH,IAAI,CAACI,IAAI;MACjDC,MAAM,EAAC;wBACHL,IAAI,CAACM,QAAQ,wBAb7BC,UAAA,GAeUL,mBAAA,kBAAqB,EACrBpB,mBAAA,CAIC;MAHEqB,IAAI,4CAA4CH,IAAI,CAACI,IAAI;MACzDI,QAAQ,EAAER,IAAI,CAACM;OACf,UAAQ,iBAnBrBG,UAAA,E;wCAAAP,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}