{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: localStorage.getItem('userName'),\n      pdfFiles: {\n        'Solicitud de residencias profesionales': {\n          _id: '',\n          file: null,\n          submitted: false\n        },\n        'Carta de presentación': {\n          _id: '',\n          file: null,\n          submitted: false\n        }\n      },\n      submittedFiles: {},\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }, {\n        title: 'Archivos',\n        icon: 'mdi-file-document-outline'\n      }],\n      userId: localStorage.getItem('id')\n    };\n  },\n  mounted() {\n    this.fetchFileData();\n  },\n  methods: {\n    async fetchFileData() {\n      try {\n        const response = await axios.get('/files');\n        this.submittedFiles = response.data.reduce((acc, file) => {\n          acc[file.filename] = {\n            _id: file._id,\n            submitted: true\n          };\n          return acc;\n        }, {});\n        for (const key in this.pdfFiles) {\n          if (this.submittedFiles[key]) {\n            this.pdfFiles[key]._id = this.submittedFiles[key]._id;\n            this.pdfFiles[key].submitted = true;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        case 2:\n          this.$router.push('/student/archivos');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.$router.push('/login');\n    },\n    async submitForm() {\n      try {\n        for (const [fieldName, fileInfo] of Object.entries(this.pdfFiles)) {\n          if (fileInfo.file && !fileInfo.submitted) {\n            const formData = new FormData();\n            formData.append('file', fileInfo.file);\n            const response = await axios.post('/upload-archivo', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            this.pdfFiles[fieldName]._id = response.data.file._id;\n            this.pdfFiles[fieldName].submitted = true;\n          }\n        }\n        this.fetchFileData(); // Refresh the submitted files list\n      } catch (error) {\n        console.error('Error uploading files:', error);\n      }\n    },\n    downloadAllFiles() {\n      // Download all files logic\n    },\n    async downloadFile(fileId) {\n      try {\n        const response = await axios.get(`/files/${fileId}`, {\n          responseType: 'blob'\n        });\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'file.pdf'); // Change the file name as needed\n        document.body.appendChild(link);\n        link.click();\n      } catch (error) {\n        console.error('Error downloading file:', error);\n      }\n    },\n    async deleteFile(fileId, fieldName) {\n      try {\n        await axios.delete(`/files/${fileId}`);\n        this.pdfFiles[fieldName]._id = '';\n        this.pdfFiles[fieldName].file = null;\n        this.pdfFiles[fieldName].submitted = false;\n      } catch (error) {\n        console.error('Error deleting file:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userName","localStorage","getItem","pdfFiles","_id","file","submitted","submittedFiles","drawer","sidebarItems","title","icon","userId","mounted","fetchFileData","methods","response","get","reduce","acc","filename","key","error","console","navigate","index","$router","push","logout","removeItem","submitForm","fieldName","fileInfo","Object","entries","formData","FormData","append","post","headers","downloadAllFiles","downloadFile","fileId","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","deleteFile","delete"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n    <v-app>\n      <v-container>\n        <!-- Top Bar -->\n        <v-app-bar app color=\"blue darken-2\" dark>\n          <!-- Burger menu icon -->\n          <v-btn icon @click=\"drawer = !drawer\">\n            <v-icon>mdi-menu</v-icon>\n          </v-btn>\n          <!-- Title -->\n          <v-toolbar-title>{{ userName }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <!-- Logout button -->\n          <v-btn icon @click=\"logout\">\n            <v-icon>mdi-logout</v-icon>\n          </v-btn>\n        </v-app-bar>\n  \n        <!-- Sidebar -->\n        <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n          <v-list dense>\n            <v-list-item\n              v-for=\"(item, index) in sidebarItems\"\n              :key=\"index\"\n              @click=\"navigate(index)\"\n            >\n              <v-list-item-action>\n                <v-icon>{{ item.icon }}</v-icon>\n              </v-list-item-action>\n              <v-list-item-content>\n                <v-list-item-title>{{ item.title }}</v-list-item-title>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-navigation-drawer>\n  \n        <!-- Main Content -->\n        <v-main>\n          <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n            <v-card class=\"mx-auto\" max-width=\"800\">\n              <v-card-title class=\"blue darken-2 white--text\">\n                Upload PDF Files\n              </v-card-title>\n              <v-card-text>\n                <v-row>\n                  <v-col\n                    v-for=\"(fileInfo, fieldName) in pdfFiles\"\n                    :key=\"fieldName\"\n                    cols=\"12\"\n                    md=\"6\"\n                  >\n                    <v-card class=\"mb-3\">\n                      <v-card-title>{{ fieldName }}</v-card-title>\n                      <v-file-input\n                        v-model=\"pdfFiles[fieldName].file\"\n                        accept=\".pdf\"\n                        :label=\"'Select ' + fieldName\"\n                      ></v-file-input>\n                      <v-card-actions>\n                        <v-btn\n                          v-if=\"fileInfo.submitted\"\n                          color=\"green\"\n                          @click=\"downloadFile(fileInfo._id)\"\n                        >\n                          Download\n                        </v-btn>\n                        <v-btn\n                          v-if=\"fileInfo.submitted\"\n                          color=\"red\"\n                          @click=\"deleteFile(fileInfo._id, fieldName)\"\n                        >\n                          Delete\n                        </v-btn>\n                      </v-card-actions>\n                    </v-card>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-card-actions>\n                <v-btn color=\"blue darken-2\" @click=\"submitForm\">Submit</v-btn>\n                <v-btn color=\"primary\" @click=\"downloadAllFiles\"\n                  >Download All Files</v-btn\n                >\n              </v-card-actions>\n            </v-card>\n          </v-col>\n        </v-main>\n      </v-container>\n    </v-app>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data () {\n      return {\n        userName: localStorage.getItem('userName'),\n        pdfFiles: {\n          'Solicitud de residencias profesionales': {\n            _id: '',\n            file: null,\n            submitted: false\n          },\n          'Carta de presentación': {\n            _id: '',\n            file: null,\n            submitted: false\n          }\n        },\n        submittedFiles: {},\n        drawer: false,\n        sidebarItems: [\n          { title: 'Proyecto', icon: 'mdi-folder-outline' },\n          { title: 'Asesorias', icon: 'mdi-account-plus-outline' },\n          { title: 'Archivos', icon: 'mdi-file-document-outline' }\n        ],\n        userId: localStorage.getItem('id')\n      }\n    },\n    mounted () {\n      this.fetchFileData();\n    },\n    methods: {\n      async fetchFileData () {\n        try {\n          const response = await axios.get('/files');\n          this.submittedFiles = response.data.reduce((acc, file) => {\n            acc[file.filename] = {\n              _id: file._id,\n              submitted: true\n            };\n            return acc;\n          }, {});\n          for (const key in this.pdfFiles) {\n            if (this.submittedFiles[key]) {\n              this.pdfFiles[key]._id = this.submittedFiles[key]._id;\n              this.pdfFiles[key].submitted = true;\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching files:', error);\n        }\n      },\n      navigate (index) {\n        switch (index) {\n          case 0:\n            this.$router.push('/student');\n            break;\n          case 1:\n            this.$router.push('/student/asesorias');\n            break;\n          case 2:\n            this.$router.push('/student/archivos');\n            break;\n          default:\n            break;\n        }\n      },\n      logout () {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        this.$router.push('/login');\n      },\n      async submitForm () {\n        try {\n          for (const [fieldName, fileInfo] of Object.entries(this.pdfFiles)) {\n            if (fileInfo.file && !fileInfo.submitted) {\n              const formData = new FormData();\n              formData.append('file', fileInfo.file);\n              const response = await axios.post('/upload-archivo', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n              this.pdfFiles[fieldName]._id = response.data.file._id;\n              this.pdfFiles[fieldName].submitted = true;\n            }\n          }\n          this.fetchFileData(); // Refresh the submitted files list\n        } catch (error) {\n          console.error('Error uploading files:', error);\n        }\n      },\n      downloadAllFiles () {\n        // Download all files logic\n      },\n      async downloadFile (fileId) {\n        try {\n          const response = await axios.get(`/files/${fileId}`, {\n            responseType: 'blob'\n          });\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', 'file.pdf'); // Change the file name as needed\n          document.body.appendChild(link);\n          link.click();\n        } catch (error) {\n          console.error('Error downloading file:', error);\n        }\n      },\n      async deleteFile (fileId, fieldName) {\n        try {\n          await axios.delete(`/files/${fileId}`);\n          this.pdfFiles[fieldName]._id = '';\n          this.pdfFiles[fieldName].file = null;\n          this.pdfFiles[fieldName].submitted = false;\n        } catch (error) {\n          console.error('Error deleting file:', error);\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .v-btn i {\n    color: white;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}