{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      studentsTable: [],\n      students: [],\n      projects: [],\n      projectMenu: false,\n      // Control for project dropdown menu\n      sidebarItems: [{\n        title: \"Projects\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Students\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Teachers\",\n        icon: \"mdi-account-tie\"\n      }],\n      userName: \"John Doe\",\n      drawer: false,\n      editDialog: false,\n      editedStudent: {\n        _id: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        apellidoM: \"\",\n        correo: \"\",\n        project: \"\",\n        carrera: \"\",\n        numeroTelefonico: \"\",\n        empresa: '',\n        periodo: ''\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newStudent: {\n        nombre: \"\",\n        apellido: \"\",\n        apellidoM: \"\",\n        correo: \"\",\n        project: \"\",\n        contraseña: \"\",\n        carrera: \"\",\n        numeroTelefonico: \"\",\n        empresa: '',\n        periodo: ''\n        // Add more fields as needed\n      }\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/students\");\n        this.students = response.data;\n        this.studentsTable = response.data.map(student => ({\n          _id: student._id,\n          nombre: student.nombre,\n          apellido: student.apellido,\n          carrera: student.carrera,\n          project: student.project\n        }));\n      } catch (error) {\n        console.error(\"Error fetching students:\", error);\n      }\n    },\n    async fetchProjects() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        // Extract just the names from the projects data\n        this.projects = response.data.map(project => project._id);\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n    async navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/admin/students\");\n          break;\n        case 2:\n          this.$router.push(\"/admin/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    editUser(student, event) {\n      event.stopPropagation(); // Stop event propagation\n      this.editedStudent = {\n        ...student\n      }; // Copy student data to editedStudent\n      this.editDialog = true;\n    },\n    async saveEditedStudent() {\n      try {\n        const response = await axios.put(`http://localhost:3000/users/${this.editedStudent._id}`, this.editedStudent);\n        console.log(\"User updated successfully:\", response.data);\n        this.fetchData();\n      } catch (error) {\n        console.error(\"Error updating user:\", error);\n      }\n      this.editDialog = false;\n    },\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n      // Fetch projects data when opening create dialog\n      this.fetchProjects();\n    },\n    async saveNewStudent() {\n      try {\n        const response = await axios.post(\"http://localhost:3000/register\", this.newStudent);\n        if (response.status === 201) {\n          console.log(\"Student created successfully:\", response.data);\n          this.fetchData();\n        } else {\n          console.error(\"Failed to create student:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error creating student:\", error);\n      }\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    async deleteUser(userId, event) {\n      event.stopPropagation(); // Stop event propagation\n      try {\n        const response = await axios.delete(`http://localhost:3000/users/${userId}`);\n        console.log(\"User deleted successfully:\", response.data);\n        this.fetchData(); // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    },\n    selectProject(project) {\n      this.newStudent.project = project.name; // Set the selected project name\n      this.projectMenu = false; // Close the dropdown menu\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: {\n          userId: item._id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchData();\n    this.fetchProjects();\n  }\n};","map":{"version":3,"names":["axios","data","studentsTable","students","projects","projectMenu","sidebarItems","title","icon","userName","drawer","editDialog","editedStudent","_id","nombre","apellido","apellidoM","correo","project","carrera","numeroTelefonico","empresa","periodo","createDialog","newStudent","contraseña","methods","fetchData","response","get","map","student","error","console","fetchProjects","navigate","index","$router","push","logout","localStorage","removeItem","editUser","event","stopPropagation","saveEditedStudent","put","log","cancelEdit","openCreateDialog","saveNewStudent","post","status","cancelCreate","deleteUser","userId","delete","selectProject","name","handleRowClick","item","params","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/StudentsPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n          <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n            <!-- Students Data -->\n            <v-data-table\n              v-if=\"studentsTable.length > 0\"\n              :items=\"studentsTable\"\n              align=\"center\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Students</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    {{ value }}\n                  </td>\n                  <td>\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editUser(item, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteUser(item._id, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Edit Student</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"editedStudent.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedStudent.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedStudent.apellidoM\"\n              label=\"Apellido Materno\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedStudent.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-select\n              v-model=\"editedStudent.project\"\n              :items=\"projects\"\n              label=\"Select Project\"\n            ></v-select>\n            <v-text-field\n              v-model=\"editedStudent.carrera\"\n              label=\"Carrera\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedStudent.numeroTelefonico\"\n              label=\"Phone Number\"\n              type=\"number\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedStudent.empresa\"\n              label=\"Empresa\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveEditedStudent\">Save</v-btn>\n            <v-btn @click=\"cancelEdit\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Create New Student</v-card-title>\n          <v-card-text>\n            <!-- <v-text-field v-model=\"newStudent._id\" label=\"ID\"></v-text-field> Remove this line -->\n            <v-text-field v-model=\"newStudent._id\" label=\"ID\"></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.apellidoM\"\n              label=\"Apellido Materno\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.contraseña\"\n              label=\"Password\"\n              type=\"password\"\n            ></v-text-field>\n            <!-- Add dropdown menu for projects -->\n            <v-select\n              v-model=\"newStudent.project\"\n              :items=\"projects\"\n              label=\"Select Project\"\n            ></v-select>\n            <v-text-field\n              v-model=\"newStudent.carrera\"\n              label=\"Carrera\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.numeroTelefonico\"\n              label=\"Phone Number\"\n              type=\"number\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.empresa\"\n              label=\"Empresa\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newStudent.periodo\"\n              label=\"Empresa\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveNewStudent\">Save</v-btn>\n            <v-btn @click=\"cancelCreate\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      studentsTable: [],\n      students: [],\n      projects: [],\n      projectMenu: false, // Control for project dropdown menu\n      sidebarItems: [\n        { title: \"Projects\", icon: \"mdi-folder-outline\" },\n        { title: \"Students\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Teachers\", icon: \"mdi-account-tie\" },\n      ],\n      userName: \"John Doe\",\n      drawer: false,\n      editDialog: false,\n      editedStudent: {\n        _id: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        apellidoM: \"\",\n        correo: \"\",\n        project: \"\",\n        carrera: \"\",\n        numeroTelefonico: \"\",\n        empresa: '',\n        periodo: '',\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newStudent: {\n        nombre: \"\",\n        apellido: \"\",\n        apellidoM: \"\",\n        correo: \"\",\n        project: \"\",\n        contraseña: \"\",\n        carrera: \"\",\n        numeroTelefonico: \"\",\n        empresa: '',\n        periodo: '',\n        // Add more fields as needed\n      },\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/students\");\n        this.students = response.data;\n        this.studentsTable = response.data.map((student) => ({\n          _id: student._id,\n          nombre: student.nombre,\n          apellido: student.apellido,\n          carrera: student.carrera,\n          project: student.project,\n        }));\n      } catch (error) {\n        console.error(\"Error fetching students:\", error);\n      }\n    },\n    async fetchProjects() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        // Extract just the names from the projects data\n        this.projects = response.data.map((project) => project._id);\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n    async navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/admin/students\");\n          break;\n        case 2:\n          this.$router.push(\"/admin/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    editUser(student, event) {\n      event.stopPropagation(); // Stop event propagation\n      this.editedStudent = { ...student }; // Copy student data to editedStudent\n      this.editDialog = true;\n    },\n    async saveEditedStudent() {\n      try {\n        const response = await axios.put(\n          `http://localhost:3000/users/${this.editedStudent._id}`,\n          this.editedStudent\n        );\n        console.log(\"User updated successfully:\", response.data);\n        this.fetchData();\n      } catch (error) {\n        console.error(\"Error updating user:\", error);\n      }\n      this.editDialog = false;\n    },\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n      // Fetch projects data when opening create dialog\n      this.fetchProjects();\n    },\n    async saveNewStudent() {\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/register\",\n          this.newStudent\n        );\n        if (response.status === 201) {\n          console.log(\"Student created successfully:\", response.data);\n          this.fetchData();\n        } else {\n          console.error(\"Failed to create student:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error creating student:\", error);\n      }\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    async deleteUser(userId, event) {\n      event.stopPropagation(); // Stop event propagation\n      try {\n        const response = await axios.delete(\n          `http://localhost:3000/users/${userId}`\n        );\n        console.log(\"User deleted successfully:\", response.data);\n        this.fetchData(); // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    },\n\n    selectProject(project) {\n      this.newStudent.project = project.name; // Set the selected project name\n      this.projectMenu = false; // Close the dropdown menu\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: { userId: item._id },\n      });\n    },\n  },\n  mounted() {\n    this.fetchData();\n    this.fetchProjects();\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}