{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4fa328f7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"ID\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Nombre\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Apellido Paterno\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Apellido Materno\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Carrera\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Proyecto\")), /*#__PURE__*/_createCommentVNode(\" Exclude numeroTelefonico from the headers \")], -1 /* HOISTED */));\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_FilesDialog = _resolveComponent(\"FilesDialog\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, {\n      fluid: \"\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" Top Bar \"), _createVNode(_component_v_app_bar, {\n        app: \"\",\n        color: \"blue darken-2\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" Burger menu icon \"), _createVNode(_component_v_btn, {\n          icon: \"\",\n          onClick: _cache[0] || (_cache[0] = $event => _ctx.drawer = !_ctx.drawer)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-menu\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" Title \"), _createVNode(_component_v_toolbar_title, null, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.userName), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_spacer), _createCommentVNode(\" Logout button \"), _createVNode(_component_v_btn, {\n          icon: \"\",\n          onClick: _ctx.logout\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-logout\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" Sidebar \"), _createVNode(_component_v_navigation_drawer, {\n        app: \"\",\n        modelValue: _ctx.drawer,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.drawer = $event),\n        color: \"blue darken-2\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_list, {\n          dense: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sidebarItems, (item, index) => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: index,\n              onClick: $event => _ctx.navigate(index)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_action, null, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.icon), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_content, null, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_main, null, {\n        default: _withCtx(() => [_createCommentVNode(\" Main content \"), _createVNode(_component_v_col, {\n          cols: \"12\",\n          style: {\n            \"max-width\": \"1500px\",\n            \"margin\": \"0px auto\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            class: \"text-center\",\n            style: {\n              \"width\": \"100%\",\n              \"margin\": \"0px auto\"\n            }\n          }, {\n            text: _withCtx(() => [_createVNode(_component_v_text_field, {\n              modelValue: _ctx.search,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.search = $event),\n              label: \"Buscar\",\n              \"prepend-inner-icon\": \"mdi-magnify\",\n              variant: \"outlined\",\n              \"hide-details\": \"\",\n              \"single-line\": \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            default: _withCtx(() => [_createVNode(_component_v_data_table, {\n              items: _ctx.studentsTable,\n              align: \"center\",\n              search: _ctx.search,\n              \"items-per-page-text\": \"Elementos por pÃ¡gina\",\n              pageText: \"\"\n            }, {\n              top: _withCtx(() => [_createVNode(_component_v_toolbar, {\n                flat: \"\",\n                color: \"blue darken-2\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\"Alumnos\")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_divider, {\n                  class: \"mx-4\",\n                  inset: \"\",\n                  vertical: \"\"\n                }), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                  icon: \"\",\n                  color: \"blue darken-2\",\n                  onClick: _ctx.openCreateDialog\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                    default: _withCtx(() => [_createTextVNode(\"mdi-plus\")]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              })]),\n              headers: _withCtx(() => [_hoisted_1]),\n              item: _withCtx(({\n                item\n              }) => [_createElementVNode(\"tr\", {\n                onClick: $event => _ctx.handleRowClick(item),\n                class: \"clickable-row\"\n              }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item, (value, key) => {\n                return _openBlock(), _createElementBlock(\"td\", {\n                  key: key\n                }, [_createCommentVNode(\" Render project name instead of ID \"), key === 'project' ? (_openBlock(), _createElementBlock(_Fragment, {\n                  key: 0\n                }, [_createTextVNode(_toDisplayString(_ctx.getProjectName(item[key])), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n                  key: 1\n                }, [_createTextVNode(_toDisplayString(value), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]);\n              }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                small: \"\",\n                color: \"blue darken-2\",\n                onClick: $event => _ctx.openFilesDialog(item, $event)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\" Documentos \")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                icon: \"\",\n                small: \"\",\n                color: \"blue darken-2\",\n                onClick: $event => _ctx.editUser(item, $event),\n                style: {\n                  \"width\": \"30px\",\n                  \"height\": \"30px\",\n                  \"margin-right\": \"5px\"\n                }\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, {\n                  style: {\n                    \"font-size\": \"18px\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"mdi-pencil\")]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n                icon: \"\",\n                small: \"\",\n                color: \"red darken-2\",\n                onClick: $event => _ctx.deleteUser(item._id, $event),\n                style: {\n                  \"width\": \"30px\",\n                  \"height\": \"30px\",\n                  \"margin-right\": \"5px\"\n                }\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, {\n                  style: {\n                    \"font-size\": \"18px\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])], 8 /* PROPS */, _hoisted_2)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"items\", \"search\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" Edit Dialog \"), _createVNode(_component_v_dialog, {\n        modelValue: _ctx.editDialog,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.editDialog = $event),\n        \"max-width\": \"500\",\n        ref: \"editDialogForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(\"Editar Alumno\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.nombre,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.student.nombre = $event),\n              label: \"Nombre\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.apellido,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.student.apellido = $event),\n              label: \"Apellido Paterno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Paterno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.apellidoM,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.student.apellidoM = $event),\n              label: \"Apellido Materno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Materno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.correo,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.student.correo = $event),\n              label: \"Correo electrÃ³nico\",\n              required: \"\",\n              rules: [v => !!v || 'Correo requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser vÃ¡lido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n              modelValue: _ctx.student.proyecto,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.student.proyecto = $event),\n              items: _ctx.projects.map(project => project.nombre),\n              label: \"Selecciona Proyecto\",\n              required: \"\",\n              rules: [v => !!v || 'Proyecto requerido'],\n              onChange: _cache[8] || (_cache[8] = $event => _ctx.updateEmpresaField($event))\n            }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.carrera,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.student.carrera = $event),\n              label: \"Carrera\",\n              required: \"\",\n              rules: [v => !!v || 'Carrera requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.numeroTelefonico,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.student.numeroTelefonico = $event),\n              label: \"NÃºmero telefÃ³nico \",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'NÃºmero telefÃ³nico requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.empresa,\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.student.empresa = $event),\n              label: \"Empresa\",\n              required: \"\",\n              rules: [v => !!v || 'Empresa requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.periodo,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.student.periodo = $event),\n              label: \"Periodo\",\n              required: \"\",\n              rules: [v => !!v || 'Periodo requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.nombre,\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.student.asesorExterno.nombre = $event),\n              label: \"Nombre Asesor externo\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre del Asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.correo,\n              \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.student.asesorExterno.correo = $event),\n              label: \"Correo Asesor externo\",\n              required: \"\",\n              rules: [v => !!v || 'Correo del asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.telefono,\n              \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.student.asesorExterno.telefono = $event),\n              label: \"NÃºmero telefÃ³nico asesor externo\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'NÃºmero telefÃ³nico del asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add more fields as needed \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              color: \"blue darken-2\",\n              onClick: _ctx.saveEditedStudent,\n              disabled: !_ctx.isEditFormValid\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Guardar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_v_btn, {\n              onClick: _ctx.cancelEdit\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Cancelar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" Create Dialog \"), _createVNode(_component_v_dialog, {\n        modelValue: _ctx.createDialog,\n        \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.createDialog = $event),\n        \"max-width\": \"500\",\n        ref: \"createDialogForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(\"Crear Nuevo Alumno\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createCommentVNode(\" <v-text-field v-model=\\\"newStudent._id\\\" label=\\\"ID\\\"></v-text-field> Remove this line \"), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student._id,\n              \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.student._id = $event),\n              label: \"ID\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => {\n                console.log('ID value:', v);\n                return !!v || 'ID requerido';\n              }, v => {\n                const isValid = /^[0-9]+$/.test(v);\n                console.log('Is ID valid?', isValid);\n                return isValid || 'ID debe contener solo nÃºmeros';\n              }]\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.nombre,\n              \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.student.nombre = $event),\n              label: \"Nombre\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.apellido,\n              \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.student.apellido = $event),\n              label: \"Apellido Paterno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Paterno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.apellidoM,\n              \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.student.apellidoM = $event),\n              label: \"Apellido Materno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Materno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.correo,\n              \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.student.correo = $event),\n              label: \"Correo ElectrÃ³nico\",\n              required: \"\",\n              rules: [v => !!v || 'Correo requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser vÃ¡lido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.contraseÃ±a,\n              \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.student.contraseÃ±a = $event),\n              label: \"ContraseÃ±a\",\n              type: \"password\",\n              required: \"\",\n              rules: [v => !!v || 'ContraseÃ±a requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add dropdown menu for projects \"), _createVNode(_component_v_select, {\n              modelValue: _ctx.student.proyecto,\n              \"onUpdate:modelValue\": [_cache[23] || (_cache[23] = $event => _ctx.student.proyecto = $event), _ctx.updateEmpresaField],\n              items: _ctx.projects.map(project => project.nombre),\n              label: \"Selecciona proyecto\",\n              required: \"\",\n              rules: [v => !!v || 'Proyecto requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.carrera,\n              \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.student.carrera = $event),\n              label: \"Carrera\",\n              required: \"\",\n              rules: [v => !!v || 'Carrera requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.numeroTelefonico,\n              \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.student.numeroTelefonico = $event),\n              label: \"NÃºmero telefÃ³nico\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'NÃºmero telefÃ³nico requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.empresa,\n              \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.student.empresa = $event),\n              label: \"Empresa\",\n              required: \"\",\n              rules: [v => !!v || 'Empresa requerida'],\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.periodo,\n              \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.student.periodo = $event),\n              label: \"Periodo\",\n              required: \"\",\n              rules: [v => !!v || 'Periodo requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.nombre,\n              \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.student.asesorExterno.nombre = $event),\n              label: \"Nombre Asesor externo\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre del Asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.correo,\n              \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.student.asesorExterno.correo = $event),\n              label: \"Correo Asesor externo\",\n              required: \"\",\n              rules: [v => !!v || 'Correo del asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: _ctx.student.asesorExterno.telefono,\n              \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.student.asesorExterno.telefono = $event),\n              label: \"NÃºmero telefÃ³nico de asesor externo\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'NÃºmero telefÃ³nico de asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add more fields as needed \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              color: \"blue darken-2\",\n              disabled: !_ctx.isCreateFormValid,\n              onClick: _ctx.saveNewStudent\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Guardar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n              onClick: _ctx.cancelCreate\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Cancelar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_FilesDialog, {\n        isOpen: _ctx.showFilesDialog,\n        student: _ctx.selectedStudent,\n        \"onUpdate:isOpen\": _cache[32] || (_cache[32] = $event => _ctx.showFilesDialog = $event)\n      }, null, 8 /* PROPS */, [\"isOpen\", \"student\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","_createCommentVNode","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","fluid","_component_v_app_bar","app","color","dark","_component_v_btn","icon","onClick","_cache","$event","_ctx","drawer","_component_v_icon","_createTextVNode","_","_component_v_toolbar_title","userName","_component_v_spacer","logout","_component_v_navigation_drawer","modelValue","_component_v_list","dense","_createElementBlock","_Fragment","_renderList","sidebarItems","item","index","_component_v_list_item","key","navigate","_component_v_list_item_action","_component_v_list_item_content","_component_v_list_item_title","title","_component_v_main","_component_v_col","cols","style","_component_v_card","class","text","_component_v_text_field","search","label","variant","_component_v_data_table","items","studentsTable","align","pageText","top","_component_v_toolbar","flat","_component_v_divider","inset","vertical","openCreateDialog","headers","_hoisted_1","handleRowClick","value","getProjectName","small","openFilesDialog","editUser","deleteUser","_id","_hoisted_2","_component_v_dialog","editDialog","ref","_component_v_card_title","_component_v_card_text","student","nombre","required","rules","v","apellido","apellidoM","correo","test","_component_v_select","proyecto","projects","map","project","onChange","updateEmpresaField","carrera","numeroTelefonico","type","empresa","periodo","asesorExterno","telefono","_component_v_card_actions","saveEditedStudent","disabled","isEditFormValid","cancelEdit","createDialog","console","log","isValid","contraseÃ±a","readonly","isCreateFormValid","saveNewStudent","cancelCreate","_component_FilesDialog","isOpen","showFilesDialog","selectedStudent"],"sources":["/Users/angel/school-project/my-app/src/components/StudentsPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n          <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n            <template v-slot:text>\n              <v-text-field\n                v-model=\"search\"\n                label=\"Buscar\"\n                prepend-inner-icon=\"mdi-magnify\"\n                variant=\"outlined\"\n                hide-details\n                single-line\n              ></v-text-field>\n            </template>\n            <!-- Students Data -->\n            <v-data-table\n              :items=\"studentsTable\"\n              align=\"center\"\n              :search=\"search\"\n              items-per-page-text=\"Elementos por pÃ¡gina\"\n              pageText=\"\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Alumnos</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:headers>\n                <tr>\n                  <th>{{ \"ID\" }}</th>\n                  <th>{{ \"Nombre\" }}</th>\n                  <th>{{ \"Apellido Paterno\" }}</th>\n                  <th>{{ \"Apellido Materno\" }}</th>\n                  <th>{{ \"Carrera\" }}</th>\n                  <th>{{ \"Proyecto\" }}</th>\n                  <!-- Exclude numeroTelefonico from the headers -->\n                </tr>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    <!-- Render project name instead of ID -->\n                    <template v-if=\"key === 'project'\">\n                      {{ getProjectName(item[key]) }}\n                    </template>\n                    <template v-else>\n                      {{ value }}\n                    </template>\n                  </td>\n                  <td>\n                    <v-btn\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"openFilesDialog(item, $event)\"\n                    >\n                      Documentos\n                    </v-btn>\n                  </td>\n                  <td>\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editUser(item, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteUser(item._id, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\" ref=\"editDialogForm\">\n        <v-card>\n          <v-card-title>Editar Alumno</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"student.nombre\"\n              label=\"Nombre\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellido\"\n              label=\"Apellido Paterno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Paterno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellidoM\"\n              label=\"Apellido Materno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Materno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.correo\"\n              label=\"Correo electrÃ³nico\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser vÃ¡lido',\n              ]\"\n            ></v-text-field>\n            <v-select\n              v-model=\"student.proyecto\"\n              :items=\"projects.map((project) => project.nombre)\"\n              label=\"Selecciona Proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Proyecto requerido']\"\n              @change=\"updateEmpresaField($event)\"\n            ></v-select>\n            <v-text-field\n              v-model=\"student.carrera\"\n              label=\"Carrera\"\n              required\n              :rules=\"[(v) => !!v || 'Carrera requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.numeroTelefonico\"\n              label=\"NÃºmero telefÃ³nico \"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'NÃºmero telefÃ³nico requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.empresa\"\n              label=\"Empresa\"\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.periodo\"\n              label=\"Periodo\"\n              required\n              :rules=\"[(v) => !!v || 'Periodo requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Correo del asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.telefono\"\n              label=\"NÃºmero telefÃ³nico asesor externo\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'NÃºmero telefÃ³nico del asesor requerido']\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              @click=\"saveEditedStudent\"\n              :disabled=\"!isEditFormValid\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelEdit\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\" ref=\"createDialogForm\">\n        <v-card>\n          <v-card-title>Crear Nuevo Alumno</v-card-title>\n          <v-card-text>\n            <!-- <v-text-field v-model=\"newStudent._id\" label=\"ID\"></v-text-field> Remove this line -->\n            <v-text-field\n              v-model=\"student._id\"\n              label=\"ID\"\n              type=\"number\"\n              required\n              :rules=\"[\n                (v) => {\n                  console.log('ID value:', v);\n                  return !!v || 'ID requerido';\n                },\n                (v) => {\n                  const isValid = /^[0-9]+$/.test(v);\n                  console.log('Is ID valid?', isValid);\n                  return isValid || 'ID debe contener solo nÃºmeros';\n                },\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.nombre\"\n              label=\"Nombre\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellido\"\n              label=\"Apellido Paterno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Paterno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellidoM\"\n              label=\"Apellido Materno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Materno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.correo\"\n              label=\"Correo ElectrÃ³nico\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser vÃ¡lido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.contraseÃ±a\"\n              label=\"ContraseÃ±a\"\n              type=\"password\"\n              required\n              :rules=\"[(v) => !!v || 'ContraseÃ±a requerida']\"\n            ></v-text-field>\n            <!-- Add dropdown menu for projects -->\n            <v-select\n              v-model=\"student.proyecto\"\n              :items=\"projects.map((project) => project.nombre)\"\n              label=\"Selecciona proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Proyecto requerido']\"\n              @update:modelValue=\"updateEmpresaField\"\n            ></v-select>\n            <v-text-field\n              v-model=\"student.carrera\"\n              label=\"Carrera\"\n              required\n              :rules=\"[(v) => !!v || 'Carrera requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.numeroTelefonico\"\n              label=\"NÃºmero telefÃ³nico\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'NÃºmero telefÃ³nico requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.empresa\"\n              label=\"Empresa\"\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n              readonly\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.periodo\"\n              label=\"Periodo\"\n              required\n              :rules=\"[(v) => !!v || 'Periodo requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Correo del asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.telefono\"\n              label=\"NÃºmero telefÃ³nico de asesor externo\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'NÃºmero telefÃ³nico de asesor requerido']\"\n            ></v-text-field>\n\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              :disabled=\"!isCreateFormValid\"\n              @click=\"saveNewStudent\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelCreate\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <FilesDialog\n        :isOpen=\"showFilesDialog\"\n        :student=\"selectedStudent\"\n        @update:isOpen=\"showFilesDialog = $event\"\n      />\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport FilesDialog from './FilesDialog.vue'\n\nexport default {\n  components: {\n    FilesDialog\n  },\n  data () {\n    return {\n      selectedStudent: null,\n      showFilesDialog: false,\n      studentsTable: [],\n      students: [],\n      projects: [],\n      projectMenu: false, // Control for project dropdown menu\n      sidebarItems: [\n        { title: 'Proyectos', icon: 'mdi-folder-outline' },\n        { title: 'Alumnos', icon: 'mdi-account-plus-outline' },\n        { title: 'Maestros', icon: 'mdi-account-tie' }\n      ],\n      userName: localStorage.getItem('userName'),\n      drawer: false,\n      editDialog: false,\n      student: {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        apellidoM: '',\n        correo: '',\n        project: '',\n        carrera: '',\n        numeroTelefonico: '',\n        empresa: '',\n        periodo: '',\n        asesorExterno: {\n          nombre: '',\n          telefono: '',\n          correo: ''\n        }\n        // Add more fields as needed\n      },\n      createDialog: false,\n      search: ''\n    }\n  },\n  computed: {\n    isCreateFormValid () {\n      // Check if the form reference exists\n      if (!this.$refs.createDialogForm) {\n        return false\n      }\n\n      // Manually validate each field\n      return (\n        this.student._id &&\n        this.student.nombre &&\n        this.student.apellido &&\n        this.student.apellidoM &&\n        this.student.correo &&\n        this.student.contraseÃ±a &&\n        this.student.proyecto &&\n        this.student.carrera &&\n        this.student.numeroTelefonico &&\n        this.student.empresa &&\n        this.student.periodo &&\n        this.student.asesorExterno.nombre &&\n        this.student.asesorExterno.correo &&\n        this.student.asesorExterno.telefono\n      )\n    },\n    isEditFormValid () {\n      // Check if the form reference exists\n      if (!this.$refs.editDialogForm) {\n        return false\n      }\n\n      // Manually validate each field\n      return (\n        this.student.nombre &&\n        this.student.apellido &&\n        this.student.apellidoM &&\n        this.student.proyecto &&\n        this.student.carrera &&\n        this.student.numeroTelefonico &&\n        this.student.empresa &&\n        this.student.periodo &&\n        this.student.asesorExterno.nombre &&\n        this.student.asesorExterno.correo &&\n        this.student.asesorExterno.telefono\n      )\n    }\n  },\n\n  methods: {\n    updateEmpresaField (selectedProjectName) {\n      const selectedProject = this.projects.find(\n        (project) => project.nombre === selectedProjectName\n      )\n      if (selectedProject) {\n        this.student.empresa = selectedProject.empresa || '' // Assuming the project object has an 'empresa' field\n      }\n    },\n    resetStudent () {\n      this.student = {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        apellidoM: '',\n        correo: '',\n        project: '',\n        carrera: '',\n        numeroTelefonico: '',\n        empresa: '',\n        periodo: '',\n        asesorExterno: {\n          nombre: '',\n          telefono: '',\n          correo: ''\n        }\n        // Add more fields as needed\n      }\n    },\n    openFilesDialog (student, event) {\n      event.stopPropagation()\n      this.selectedStudent = this.students.find((s) => s._id === student._id)\n      this.showFilesDialog = true // Open the dialog with the student's files\n    },\n    async fetchData () {\n      try {\n        const response = await axios.get('http://localhost:3000/students')\n        this.students = response.data\n        this.studentsTable = response.data.map((student) => ({\n          _id: student._id,\n          nombre: student.nombre,\n          apellido: student.apellido,\n          apellidoM: student.apellidoM,\n          carrera: student.carrera,\n          project: student.proyecto\n        }))\n      } catch (error) {\n        console.error('Error fetching students:', error)\n      }\n    },\n    async fetchProjects () {\n      try {\n        const response = await axios.get('http://localhost:3000/projects')\n        // Extract IDs and names from the projects data\n        this.projects = response.data.map((project) => ({\n          id: project._id,\n          nombre: project.nombre,\n          empresa: project.empresa\n        }))\n      } catch (error) {\n        console.error('Error fetching projects:', error)\n      }\n    },\n\n    async navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/admin')\n          break\n        case 1:\n          this.$router.push('/admin/students')\n          break\n        case 2:\n          this.$router.push('/admin/Teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token')\n\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    },\n    editUser (student, event) {\n      event.stopPropagation() // Stop event propagation\n      // Find the student with the matching _id\n      const foundStudent = this.students.find((s) => s._id === student._id)\n      if (foundStudent) {\n        // If the student is found, copy its data to editedStudent\n        this.student = { ...foundStudent }\n        this.editDialog = true\n      } else {\n        console.error(`Student with ID ${student._id} not found.`)\n      }\n    },\n\n    async saveEditedStudent () {\n      try {\n        const selectedProject = this.projects.find(\n          (project) => project.nombre === this.student.proyecto\n        )\n        if (selectedProject) {\n          // Save the project ID to the new student data\n          this.student.proyecto = selectedProject.id\n        }\n        const response = await axios.put(\n          `http://localhost:3000/users/${this.student._id}`,\n          this.student\n        )\n        console.log('User updated successfully:', response.data)\n        this.fetchData()\n      } catch (error) {\n        console.error('Error updating user:', error)\n      }\n      this.editDialog = false\n    },\n    cancelEdit () {\n      this.editDialog = false\n    },\n    openCreateDialog () {\n      this.resetStudent()\n      this.createDialog = true\n      // Fetch projects data when opening create dialog\n      this.fetchProjects()\n    },\n    async saveNewStudent () {\n      try {\n        // Validate the form\n        if (!this.isCreateFormValid) {\n          return // Exit if the form is not valid\n        }\n        // Find the selected project object based on its name\n        const selectedProject = this.projects.find(\n          (project) => project.nombre === this.student.proyecto\n        )\n        if (selectedProject) {\n          // Save the project ID to the new student data\n          this.student.proyecto = selectedProject.id\n        }\n\n        const response = await axios.post(\n          'http://localhost:3000/register',\n          this.student\n        )\n        if (response.status === 201) {\n          console.log('Student created successfully:', response.data)\n          this.fetchData()\n        } else {\n          console.error('Failed to create student:', response.data)\n        }\n      } catch (error) {\n        if (\n          error.response &&\n        ) {\n          // Display an error message to the user if the email already exists\n          alert(error.response.data.error)\n        } \n      }\n      this.createDialog = false\n    },\n\n    cancelCreate () {\n      this.createDialog = false\n    },\n    async deleteUser (userId, event) {\n      event.stopPropagation() // Stop event propagation\n      try {\n        const response = await axios.delete(\n          `http://localhost:3000/users/${userId}`\n        )\n        console.log('User deleted successfully:', response.data)\n        this.fetchData() // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error('Error deleting user:', error)\n      }\n    },\n\n    selectProject (project) {\n      this.student.proyecto = project.nombre // Set the selected project name\n      this.projectMenu = false // Close the dropdown menu\n    },\n    handleRowClick (item) {\n      // Handle row click event here\n      console.log('Row clicked:', item)\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: 'UserDetails',\n        params: { userId: item._id }\n      })\n    },\n    getProjectName (projectId) {\n      const project = this.projects.find((project) => project.id === projectId)\n      return project ? project.nombre : ''\n    }\n  },\n  mounted () {\n    this.fetchData()\n    this.fetchProjects()\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}