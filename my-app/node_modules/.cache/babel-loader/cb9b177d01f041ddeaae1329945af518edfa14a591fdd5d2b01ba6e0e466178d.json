{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      projects: [],\n      tableHeaders: [],\n      sidebarItems: [{\n        title: \"Projects\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Create Student\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Create Teacher\",\n        icon: \"mdi-teacher\"\n      }],\n      userName: \"John Doe\",\n      drawer: false\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        this.projects = response.data;\n\n        // Generate table headers based on the keys of the first project\n        if (this.projects.length > 0) {\n          // Access the first project from the reactive proxy object\n          const firstProject = this.projects[0];\n\n          // Extract keys from the first project and capitalize them\n          const keys = Object.keys(firstProject).map(key => ({\n            text: key.charAt(0).toUpperCase() + key.slice(1),\n            // Capitalize first letter\n            value: key\n          }));\n\n          // Set the tableHeaders property with the generated headers\n          this.tableHeaders = keys;\n          const plainTableHeaders = [...this.tableHeaders];\n          console.log(plainTableHeaders);\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/create-student\");\n          break;\n        case 2:\n          this.$router.push(\"/create-teacher\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","data","projects","tableHeaders","sidebarItems","title","icon","userName","drawer","methods","fetchData","response","get","length","firstProject","keys","Object","map","key","text","charAt","toUpperCase","slice","value","plainTableHeaders","console","log","error","navigate","index","$router","push","logout","mounted"],"sources":["/Users/angel/project-system/my-app/src/components/AdminPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"10\">\n          <v-card>\n            <v-card-text>\n              <!-- Projects Data -->\n              <v-data-table v-if=\"projects.length > 0\" :items=\"projects\">\n                <template v-slot:items=\"props\">\n                  <tr v-if=\"props.index > 0\">\n                    <!-- Exclude the first row -->\n                    <td\n                      v-for=\"(value, key) in props.item\"\n                      :key=\"key\"\n                      class=\"text-center\"\n                    >\n                      {{ value }}\n                    </td>\n                  </tr>\n                </template>\n              </v-data-table>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      projects: [],\n      tableHeaders: [],\n      sidebarItems: [\n        { title: \"Projects\", icon: \"mdi-folder-outline\" },\n        { title: \"Create Student\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Create Teacher\", icon: \"mdi-teacher\" },\n      ],\n      userName: \"John Doe\",\n      drawer: false,\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        this.projects = response.data;\n\n        // Generate table headers based on the keys of the first project\n        if (this.projects.length > 0) {\n          // Access the first project from the reactive proxy object\n          const firstProject = this.projects[0];\n\n          // Extract keys from the first project and capitalize them\n          const keys = Object.keys(firstProject).map((key) => ({\n            text: key.charAt(0).toUpperCase() + key.slice(1), // Capitalize first letter\n            value: key,\n          }));\n\n          // Set the tableHeaders property with the generated headers\n          this.tableHeaders = keys;\n          const plainTableHeaders = [...this.tableHeaders];\n          console.log(plainTableHeaders);\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/create-student\");\n          break;\n        case 2:\n          this.$router.push(\"/create-teacher\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n    },\n  },\n  mounted() {\n    this.fetchData();\n  },\n};\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n\n/* Optional: Styling for table headers */\n.v-data-table-header th {\n  background-color: blue darken-2;\n  color: white;\n}\n\n.text-center {\n  text-align: center;\n}\n</style>\n"],"mappings":";AAiEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,CACZ;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,EACjD;QAAED,KAAK,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAA2B,CAAC,EAC7D;QAAED,KAAK,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAAc,CAAC,CACjD;MACDC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;QAClE,IAAI,CAACV,QAAO,GAAIS,QAAQ,CAACV,IAAI;;QAE7B;QACA,IAAI,IAAI,CAACC,QAAQ,CAACW,MAAK,GAAI,CAAC,EAAE;UAC5B;UACA,MAAMC,YAAW,GAAI,IAAI,CAACZ,QAAQ,CAAC,CAAC,CAAC;;UAErC;UACA,MAAMa,IAAG,GAAIC,MAAM,CAACD,IAAI,CAACD,YAAY,CAAC,CAACG,GAAG,CAAEC,GAAG,KAAM;YACnDC,IAAI,EAAED,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIH,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC;YAAE;YAClDC,KAAK,EAAEL;UACT,CAAC,CAAC,CAAC;;UAEH;UACA,IAAI,CAACf,YAAW,GAAIY,IAAI;UACxB,MAAMS,iBAAgB,GAAI,CAAC,GAAG,IAAI,CAACrB,YAAY,CAAC;UAChDsB,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;QAChC;MACF,EAAE,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDC,QAAQA,CAACC,KAAK,EAAE;MACd,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC3B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;UACpC;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;UACpC;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP;IAAA;EAEJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACvB,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}