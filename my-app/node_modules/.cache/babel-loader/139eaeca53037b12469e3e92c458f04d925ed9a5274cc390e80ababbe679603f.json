{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport ProjectCard from '@/components/ProjectCard.vue';\nexport default {\n  components: {\n    ProjectCard\n  },\n  data() {\n    return {\n      id: localStorage.getItem('id'),\n      editDialog: false,\n      editedProjectName: '',\n      editedProjectId: '',\n      newProject: {\n        name: '',\n        company: '',\n        _id: ''\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      sidebarItems: [{\n        title: 'Projects',\n        icon: 'mdi-folder-outline'\n      }],\n      userName: 'John Doe',\n      drawer: false,\n      selectedProject: {},\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const teacherResponse = await axios.get(`http://localhost:3000/users/${this.id}`);\n        const teacher = teacherResponse.data;\n        const studentsResponse = await axios.get('http://localhost:3000/students');\n        const allStudents = studentsResponse.data;\n        const teacherStudents = allStudents.filter(student => teacher.alumnos.includes(student._id));\n        const projectIds = teacherStudents.map(student => student.project);\n        const projectsResponse = await axios.get('http://localhost:3000/projects');\n        const projects = projectsResponse.data;\n        const filteredProjects = projects.filter(project => projectIds.includes(project._id));\n        this.projects = filteredProjects;\n        this.students = teacherStudents;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    openGradeDialog(user) {\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = {\n          grade1: null,\n          grade2: null,\n          grade3: null\n        };\n      }\n      this.editDialog = true;\n    },\n    saveGrades() {\n      axios.put(`http://localhost:3000/users/${this.selectedUser._id}`, this.selectedUser).then(response => {\n        console.log('User updated successfully:', response.data);\n        this.editDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error('Error updating user:', error);\n      });\n    },\n    openConsultanciesDialog(student) {\n      this.selectedStudent = student;\n      this.enableConsultanciesDialog = true;\n    },\n    enableConsultancies() {\n      const numberOfConsultancies = parseInt(this.selectedStudent.consultancies);\n      console.log('Number of Consultancies to Enable:', numberOfConsultancies);\n      this.updateConsultancies(numberOfConsultancies);\n    },\n    updateConsultancies(numberOfConsultancies) {\n      axios.put(`http://localhost:3000/users/${this.selectedStudent._id}`, {\n        consultancies: numberOfConsultancies\n      }).then(response => {\n        console.log('User consultancies updated successfully:', response.data);\n        this.enableConsultanciesDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error('Error updating user consultancies:', error);\n      });\n    },\n    onClick(project) {\n      this.selectedProject = project;\n      this.showProjects = false;\n    },\n    navigate(index) {\n      this.showProjects = true;\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects');\n          break;\n        case 1:\n          this.$router.push('/Students');\n          break;\n        case 2:\n          this.$router.push('/Teachers');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","ProjectCard","components","data","id","localStorage","getItem","editDialog","editedProjectName","editedProjectId","newProject","name","company","_id","showProjects","projects","students","sidebarItems","title","icon","userName","drawer","selectedProject","selectedUser","gradeOptions","enableConsultanciesDialog","numberOfConsultancies","methods","fetchData","teacherResponse","get","teacher","studentsResponse","allStudents","teacherStudents","filter","student","alumnos","includes","projectIds","map","project","projectsResponse","filteredProjects","error","console","openGradeDialog","user","grades","grade1","grade2","grade3","saveGrades","put","then","response","log","catch","openConsultanciesDialog","selectedStudent","enableConsultancies","parseInt","consultancies","updateConsultancies","onClick","navigate","index","$router","push","logout","removeItem","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/TeacherPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main v-if=\"showProjects\">\n        <!-- Main content -->\n        <v-row>\n          <v-col\n            v-for=\"project in projects\"\n            :key=\"project.id\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n            lg=\"3\"\n            xl=\"2\"\n          >\n            <ProjectCard\n              :projectName=\"project.name\"\n              @click=\"onClick(project)\"\n            />\n          </v-col>\n        </v-row>\n      </v-main>\n\n      <template v-else>\n        <v-main>\n          <!-- Main content -->\n          <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n            <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n              <!-- Students Data -->\n              <v-data-table\n                v-if=\"students.length > 0\"\n                :items=\"students\"\n                align=\"center\"\n              >\n                <template v-slot:top>\n                  <v-toolbar flat color=\"blue darken-2\">\n                    <v-toolbar-title>{{\n                      selectedProject.name\n                    }}</v-toolbar-title>\n                    <v-divider class=\"mx-4\" inset vertical></v-divider>\n                    <v-spacer></v-spacer>\n                    <!-- Removed the button for creating a new project -->\n                  </v-toolbar>\n                </template>\n                <template v-slot:item=\"{ item }\">\n                  <tr>\n                    <td v-for=\"(value, key) in item\" :key=\"key\">\n                      {{ value }}\n                    </td>\n                    <td>\n                      <!-- Use small prop to make the buttons smaller -->\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on }\">\n                          <v-btn\n                            icon\n                            small\n                            color=\"blue darken-2\"\n                            @click=\"openGradeDialog(item)\"\n                            style=\"width: 30px; height: 30px; margin-right: 5px\"\n                            v-on=\"on\"\n                          >\n                            <v-icon style=\"font-size: 18px\">mdi-clipboard-check-outline</v-icon>\n                          </v-btn>\n                        </template>\n                        <span>Assign Grades</span>\n                      </v-tooltip>\n\n                      <v-btn\n                        icon\n                        small\n                        color=\"green darken-2\"\n                        @click=\"openConsultanciesDialog(item)\"\n                        style=\"width: 30px; height: 30px; margin-right: 5px\"\n                      >\n                        <v-icon style=\"font-size: 18px\">mdi-check</v-icon>\n                      </v-btn>\n                    </td>\n                  </tr>\n                </template>\n              </v-data-table>\n            </v-card>\n          </v-col>\n        </v-main>\n      </template>\n\n      <!-- Dialog for assigning grades -->\n      <v-dialog v-model=\"editDialog\" max-width=\"800\">\n        <v-card>\n          <v-card-title class=\"headline\">\n            Assign Grades to {{ selectedUser.nombre }}\n            {{ selectedUser.apellido }}\n          </v-card-title>\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"4\">\n                <v-select\n                  v-model=\"selectedUser.grades.grade1\"\n                  :items=\"gradeOptions\"\n                  label=\"Grade 1\"\n                ></v-select>\n              </v-col>\n              <v-col cols=\"4\">\n                <v-select\n                  v-model=\"selectedUser.grades.grade2\"\n                  :items=\"gradeOptions\"\n                  label=\"Grade 2\"\n                ></v-select>\n              </v-col>\n              <v-col cols=\"4\">\n                <v-select\n                  v-model=\"selectedUser.grades.grade3\"\n                  :items=\"gradeOptions\"\n                  label=\"Grade 3\"\n                ></v-select>\n              </v-col>\n            </v-row>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-1\" text @click=\"editDialog = false\"\n              >Cancel</v-btn\n            >\n            <v-btn color=\"blue darken-1\" text @click=\"saveGrades\">Save</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Dialog for enabling consultancies -->\n      <v-dialog v-model=\"enableConsultanciesDialog\" max-width=\"800\">\n        <v-card>\n          <v-card-title class=\"headline\">\n            Enable Consultancies for {{ selectedStudent.nombre }}\n            {{ selectedStudent.apellido }}\n          </v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"selectedStudent.consultancies\"\n              label=\"Number of Consultancies (Max: 16)\"\n              type=\"number\"\n              max=\"16\"\n            ></v-text-field>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-1\"\n              text\n              @click=\"enableConsultanciesDialog = false\"\n              >Cancel</v-btn\n            >\n            <v-btn color=\"blue darken-1\" text @click=\"enableConsultancies\"\n              >Enable</v-btn\n            >\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ProjectCard from '@/components/ProjectCard.vue'\n\nexport default {\n  components: {\n    ProjectCard\n  },\n  data () {\n    return {\n      id: localStorage.getItem('id'),\n      editDialog: false,\n      editedProjectName: '',\n      editedProjectId: '',\n      newProject: {\n        name: '',\n        company: '',\n        _id: ''\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      sidebarItems: [{ title: 'Projects', icon: 'mdi-folder-outline' }],\n      userName: 'John Doe',\n      drawer: false,\n      selectedProject: {},\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1\n    }\n  },\n  methods: {\n    async fetchData () {\n      try {\n        const teacherResponse = await axios.get(\n          `http://localhost:3000/users/${this.id}`\n        )\n        const teacher = teacherResponse.data\n\n        const studentsResponse = await axios.get(\n          'http://localhost:3000/students'\n        )\n        const allStudents = studentsResponse.data\n\n        const teacherStudents = allStudents.filter((student) =>\n          teacher.alumnos.includes(student._id)\n        )\n\n        const projectIds = teacherStudents.map((student) => student.project)\n\n        const projectsResponse = await axios.get(\n          'http://localhost:3000/projects'\n        )\n        const projects = projectsResponse.data\n\n        const filteredProjects = projects.filter((project) =>\n          projectIds.includes(project._id)\n        )\n\n        this.projects = filteredProjects\n        this.students = teacherStudents\n      } catch (error) {\n        console.error('Error fetching data:', error)\n      }\n    },\n    openGradeDialog (user) {\n      this.selectedUser = user\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = { grade1: null, grade2: null, grade3: null }\n      }\n      this.editDialog = true\n    },\n    saveGrades () {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedUser._id}`,\n          this.selectedUser\n        )\n        .then((response) => {\n          console.log('User updated successfully:', response.data)\n          this.editDialog = false\n          this.fetchData()\n        })\n        .catch((error) => {\n          console.error('Error updating user:', error)\n        })\n    },\n    openConsultanciesDialog (student) {\n      this.selectedStudent = student\n      this.enableConsultanciesDialog = true\n    },\n    enableConsultancies () {\n      const numberOfConsultancies = parseInt(this.selectedStudent.consultancies)\n      console.log('Number of Consultancies to Enable:', numberOfConsultancies)\n      this.updateConsultancies(numberOfConsultancies)\n    },\n    updateConsultancies (numberOfConsultancies) {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedStudent._id}`,\n          { consultancies: numberOfConsultancies }\n        )\n        .then((response) => {\n          console.log('User consultancies updated successfully:', response.data)\n          this.enableConsultanciesDialog = false\n          this.fetchData()\n        })\n        .catch((error) => {\n          console.error('Error updating user consultancies:', error)\n        })\n    },\n    onClick (project) {\n      this.selectedProject = project\n      this.showProjects = false\n    },\n    navigate (index) {\n      this.showProjects = true\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects')\n          break\n        case 1:\n          this.$router.push('/Students')\n          break\n        case 2:\n          this.$router.push('/Teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      localStorage.removeItem('token')\n      this.$router.push('/login')\n    }\n  },\n  mounted () {\n    this.fetchData()\n  }\n}\n</script>\n\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}