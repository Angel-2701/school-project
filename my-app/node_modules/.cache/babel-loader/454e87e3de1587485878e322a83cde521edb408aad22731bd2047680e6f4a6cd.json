{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    users: Array,\n    selectedProject: Object\n  },\n  methods: {\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: {\n          userId: item._id\n        }\n      });\n    },\n    openGradeDialog(user) {\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = {\n          grade1: null,\n          grade2: null,\n          grade3: null\n        };\n      }\n      this.editDialog = true;\n    }\n\n    // Add other methods as needed\n  }\n};","map":{"version":3,"names":["props","users","Array","selectedProject","Object","methods","handleRowClick","item","console","log","$router","push","name","params","userId","_id","openGradeDialog","user","selectedUser","grades","grade1","grade2","grade3","editDialog"],"sources":["/Users/angel/school-project/my-app/src/components/ProjectTable.vue"],"sourcesContent":["<template>\n  <v-main>\n    <!-- Main content -->\n    <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n      <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n        <!-- Students Data -->\n        <v-data-table v-if=\"users.length > 0\" :items=\"users\" align=\"center\">\n          <template v-slot:top>\n            <v-toolbar flat color=\"blue darken-2\">\n              <v-toolbar-title>{{ selectedProject.name }}</v-toolbar-title>\n              <v-divider class=\"mx-4\" inset vertical></v-divider>\n              <v-spacer></v-spacer>\n              <!-- Removed the button for creating a new project -->\n            </v-toolbar>\n          </template>\n          <template v-slot:item=\"{ item }\">\n            <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n              <td v-for=\"(value, key) in item\" :key=\"key\">\n                {{ value }}\n              </td>\n              <td>\n                <!-- Use small prop to make the buttons smaller -->\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"openGradeDialog(item)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                      v-on=\"on\"\n                    >\n                      <v-icon style=\"font-size: 18px\"\n                        >mdi-clipboard-check-outline</v-icon\n                      >\n                    </v-btn>\n                  </template>\n                  <span>Assign Grades</span>\n                </v-tooltip>\n\n                <v-btn\n                  icon\n                  small\n                  color=\"green darken-2\"\n                  @click=\"openConsultanciesDialog(item)\"\n                  style=\"width: 30px; height: 30px; margin-right: 5px\"\n                >\n                  <v-icon style=\"font-size: 18px\">mdi-check</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-col>\n  </v-main>\n</template>\n\n<script>\nexport default {\n  props: {\n    users: Array,\n    selectedProject: Object,\n  },\n  methods: {\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: \"UserDetails\",\n        params: { userId: item._id },\n      });\n    },\n    openGradeDialog(user) {\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = { grade1: null, grade2: null, grade3: null };\n      }\n      this.editDialog = true;\n    },\n\n    // Add other methods as needed\n  },\n};\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":";AA2DA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAEC,KAAK;IACZC,eAAe,EAAEC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,IAAI,EAAE;MACnB;MACAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;MACjC;MACA,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,aAAa;QACnBC,MAAM,EAAE;UAAEC,MAAM,EAAEP,IAAI,CAACQ;QAAI;MAC7B,CAAC,CAAC;IACJ,CAAC;IACDC,eAAeA,CAACC,IAAI,EAAE;MACpB,IAAI,CAACC,YAAW,GAAID,IAAI;MACxB,IAAI,CAAC,IAAI,CAACC,YAAY,CAACC,MAAM,EAAE;QAC7B,IAAI,CAACD,YAAY,CAACC,MAAK,GAAI;UAAEC,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAK,CAAC;MACzE;MACA,IAAI,CAACC,UAAS,GAAI,IAAI;IACxB;;IAEA;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}