{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      userName: localStorage.getItem('userName'),\n      pdfFiles: {\n        'Solicitud de residencias profesionales': null,\n        'Carta de presentación': null,\n        'Carta de aceptación': null,\n        'Cartilla IMSS': null,\n        'Oficio de Asignación de asesor interno': null,\n        Anteproyecto: null,\n        'Liberación de los 5 créditos': null,\n        'Liberación servicio social': null\n      },\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }, {\n        title: 'Archivos',\n        icon: 'mdi-file-document-outline'\n      }],\n      userId: localStorage.getItem('id') // Retrieve the user's name from localStorage\n    };\n  },\n  computed: {\n    isFormValid() {\n      // Check if all file inputs have a PDF selected\n      for (const key in this.pdfFiles) {\n        if (!this.pdfFiles[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        case 2:\n          this.$router.push('/student/archivos');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      // Redirect the user to the login page\n      this.$router.push('/login');\n    },\n    methods: {\n      async submitForm() {\n        try {\n          const formData = new FormData();\n          for (const key in this.pdfFiles) {\n            if (this.pdfFiles[key]) {\n              formData.append(key, this.pdfFiles[key]);\n            }\n          }\n          const response = await axios.post('/upload-archivo', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          console.log('Files uploaded successfully:', response.data);\n          // Optionally, you can clear the uploaded files from the form\n          this.clearForm();\n        } catch (error) {\n          console.error('Error uploading files:', error);\n        }\n      },\n      clearForm() {\n        for (const key in this.pdfFiles) {\n          this.pdfFiles[key] = null;\n        }\n      }\n    },\n    downloadAllFiles() {\n      // Download all files logic\n      // You can generate a download link or use Axios to download files from the server\n    }\n  }\n};","map":{"version":3,"names":["data","userName","localStorage","getItem","pdfFiles","Anteproyecto","drawer","sidebarItems","title","icon","userId","computed","isFormValid","key","methods","navigate","index","$router","push","logout","removeItem","submitForm","formData","FormData","append","response","axios","post","headers","console","log","clearForm","error","downloadAllFiles"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Upload PDF Files\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"\n                        pdfFiles['Solicitud de residencias profesionales']\n                      \"\n                      label=\"Solicitud de residencias profesionales\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Carta de presentación']\"\n                      label=\"Carta de presentación\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Carta de aceptación']\"\n                      label=\"Carta de aceptación\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Cartilla IMSS']\"\n                      label=\"Cartilla IMSS\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"\n                        pdfFiles['Oficio de Asignación de asesor interno']\n                      \"\n                      label=\"Oficio de Asignación de asesor interno\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Anteproyecto']\"\n                      label=\"Anteproyecto\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Liberación de los 5 créditos']\"\n                      label=\"Liberación de los 5 créditos\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n                <v-col cols=\"12\" md=\"6\">\n                  <v-card>\n                    <v-file-input\n                      v-model=\"pdfFiles['Liberación servicio social']\"\n                      label=\"Liberación servicio social\"\n                      accept=\".pdf\"\n                    ></v-file-input>\n                  </v-card>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-divider class=\"my-4\"></v-divider>\n            <v-card-actions>\n              <v-btn\n                color=\"blue darken-2\"\n                @click=\"submitForm\"\n                :disabled=\"!isFormValid\"\n              >\n                Submit\n              </v-btn>\n              <v-btn color=\"primary\" @click=\"downloadAllFiles\"\n                >Download All Files</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\n// import axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      userName: localStorage.getItem('userName'),\n      pdfFiles: {\n        'Solicitud de residencias profesionales': null,\n        'Carta de presentación': null,\n        'Carta de aceptación': null,\n        'Cartilla IMSS': null,\n        'Oficio de Asignación de asesor interno': null,\n        Anteproyecto: null,\n        'Liberación de los 5 créditos': null,\n        'Liberación servicio social': null\n      },\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' },\n        { title: 'Archivos', icon: 'mdi-file-document-outline' }\n      ],\n      userId: localStorage.getItem('id') // Retrieve the user's name from localStorage\n    }\n  },\n  computed: {\n    isFormValid () {\n      // Check if all file inputs have a PDF selected\n      for (const key in this.pdfFiles) {\n        if (!this.pdfFiles[key]) {\n          return false\n        }\n      }\n      return true\n    }\n  },\n  methods: {\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student')\n          break\n        case 1:\n          this.$router.push('/student/asesorias')\n          break\n        case 2:\n          this.$router.push('/student/archivos')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    },\n    methods: {\n  async submitForm() {\n    try {\n      const formData = new FormData();\n      for (const key in this.pdfFiles) {\n        if (this.pdfFiles[key]) {\n          formData.append(key, this.pdfFiles[key]);\n        }\n      }\n      const response = await axios.post('/upload-archivo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Files uploaded successfully:', response.data);\n      // Optionally, you can clear the uploaded files from the form\n      this.clearForm();\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  },\n  clearForm() {\n    for (const key in this.pdfFiles) {\n      this.pdfFiles[key] = null;\n    }\n  }\n},\n\n    downloadAllFiles () {\n      // Download all files logic\n      // You can generate a download link or use Axios to download files from the server\n    }\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":";AA+IA;;AAEA,eAAe;EACbA,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1CC,QAAQ,EAAE;QACR,wCAAwC,EAAE,IAAI;QAC9C,uBAAuB,EAAE,IAAI;QAC7B,qBAAqB,EAAE,IAAI;QAC3B,eAAe,EAAE,IAAI;QACrB,wCAAwC,EAAE,IAAI;QAC9CC,YAAY,EAAE,IAAI;QAClB,8BAA8B,EAAE,IAAI;QACpC,4BAA4B,EAAE;MAChC,CAAC;MACDC,MAAM,EAAE,KAAK;MACbC,YAAY,EAAE,CACZ;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,EACjD;QAAED,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAA2B,CAAC,EACxD;QAAED,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAA4B,EACxD;MACDC,MAAM,EAAER,YAAY,CAACC,OAAO,CAAC,IAAI,EAAE;IACrC;EACF,CAAC;EACDQ,QAAQ,EAAE;IACRC,WAAUA,CAAA,EAAK;MACb;MACA,KAAK,MAAMC,GAAE,IAAK,IAAI,CAACT,QAAQ,EAAE;QAC/B,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACS,GAAG,CAAC,EAAE;UACvB,OAAO,KAAI;QACb;MACF;MACA,OAAO,IAAG;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAOA,CAAGC,KAAK,EAAE;MACf,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU;UAC5B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,oBAAoB;UACtC;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,mBAAmB;UACrC;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAKA,CAAA,EAAK;MACR;MACA;MACAjB,YAAY,CAACkB,UAAU,CAAC,OAAO;MAC/BlB,YAAY,CAACkB,UAAU,CAAC,MAAM;MAC9B;MACA,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC5B,CAAC;IACDJ,OAAO,EAAE;MACX,MAAMO,UAAUA,CAAA,EAAG;QACjB,IAAI;UACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;UAC/B,KAAK,MAAMV,GAAE,IAAK,IAAI,CAACT,QAAQ,EAAE;YAC/B,IAAI,IAAI,CAACA,QAAQ,CAACS,GAAG,CAAC,EAAE;cACtBS,QAAQ,CAACE,MAAM,CAACX,GAAG,EAAE,IAAI,CAACT,QAAQ,CAACS,GAAG,CAAC,CAAC;YAC1C;UACF;UACA,MAAMY,QAAO,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAC,iBAAiB,EAAEL,QAAQ,EAAE;YAC7DM,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UACFC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEL,QAAQ,CAACzB,IAAI,CAAC;UAC1D;UACA,IAAI,CAAC+B,SAAS,CAAC,CAAC;QAClB,EAAE,OAAOC,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC;MACDD,SAASA,CAAA,EAAG;QACV,KAAK,MAAMlB,GAAE,IAAK,IAAI,CAACT,QAAQ,EAAE;UAC/B,IAAI,CAACA,QAAQ,CAACS,GAAG,IAAI,IAAI;QAC3B;MACF;IACF,CAAC;IAEGoB,gBAAeA,CAAA,EAAK;MAClB;MACA;IAAA;EAEJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}