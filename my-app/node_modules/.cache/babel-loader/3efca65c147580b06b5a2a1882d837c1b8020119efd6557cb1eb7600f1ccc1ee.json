{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from 'axios';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }],\n      userName: localStorage.getItem('userName'),\n      numberOfAsesorias: 1,\n      maxAsesoriasAllowed: 5,\n      // Adjust this number based on your requirements\n      asesorias: JSON.parse(localStorage.getItem('asesorias')) || [],\n      userId: localStorage.getItem('id')\n    };\n  },\n  computed: {\n    allFilesUploaded() {\n      return this.asesorias.length === this.numberOfAsesorias && this.asesorias.every(asesoria => asesoria.file || asesoria.submitted);\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    },\n    initializeAsesorias() {\n      this.asesorias = Array.from({\n        length: this.numberOfAsesorias\n      }, (v, i) => ({\n        id: i + 1,\n        file: null,\n        submitted: this.asesorias[i]?.submitted || false // Set submitted status based on existing data\n      }));\n    },\n    async submitFiles() {\n      const formData = new FormData();\n      const submittedIndexes = []; // Store the indexes of submitted files\n\n      // Collect submitted files and their indexes\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && !asesoria.submitted) {\n          formData.append('files', asesoria.file);\n          submittedIndexes.push(index); // Store the index of submitted file\n        }\n      });\n      try {\n        const response = await axios.post('http://localhost:3000/upload/multiple', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 201) {\n          response.data.files.forEach((file, fileIndex) => {\n            const index = submittedIndexes[fileIndex];\n            if (index !== undefined) {\n              // Store the filename along with the file\n              this.asesorias[index].submitted = true;\n              this.asesorias[index].file = {\n                id: file.id,\n                filename: file.filename\n              };\n            }\n          });\n\n          // Save the updated asesorias data in localStorage\n          localStorage.setItem('asesorias', JSON.stringify(this.asesorias));\n          window.alert('Files uploaded successfully!'); // Display alert\n          console.log('Files uploaded successfully!');\n        } else {\n          console.error('Failed to upload files.');\n        }\n      } catch (error) {\n        console.error('Error uploading files:', error);\n      }\n    },\n    deleteFile(index) {\n      const fileId = this.asesorias[index].file.id;\n      axios.delete(`http://localhost:3000/files/${fileId}`).then(response => {\n        if (response.status === 200) {\n          // Reset submitted status and file data\n          this.asesorias[index].submitted = false;\n          this.asesorias[index].file = null;\n          // Enable the file input field\n          const fileInput = document.getElementById(`file-input-${index}`);\n          if (fileInput) {\n            fileInput.disabled = false;\n          }\n          localStorage.setItem('asesorias', JSON.stringify(this.asesorias));\n          window.alert('File deleted successfully!');\n        } else {\n          console.error('Failed to delete file.');\n        }\n      }).catch(error => {\n        console.error('Error deleting file:', error);\n      });\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userData = response.data;\n        this.maxAsesoriasAllowed = userData.asesorias;\n        this.initializeAsesorias(); // Initialize asesorias based on fetched number\n      } catch (error) {\n        console.error('Error fetching asesorías:', error);\n      }\n    },\n    async fetchFileData() {\n      try {\n        const response = await axios.get('http://localhost:3000/files');\n        const files = response.data;\n        // Update file objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.asesorias[index]) {\n            this.asesorias[index].file = file;\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching file data:', error);\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchFileData();\n      const zip = new JSZip();\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && asesoria.file.data) {\n          const byteString = atob(asesoria.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          zip.file(`filename_${index + 1}.pdf`, ab);\n        }\n      });\n      zip.generateAsync({\n        type: 'blob'\n      }).then(content => {\n        saveAs(content, 'asesorias.zip');\n      });\n    }\n  },\n  mounted() {\n    this.fetchAsesorias();\n    this.fetchFileData();\n  }\n};","map":{"version":3,"names":["axios","JSZip","saveAs","data","drawer","sidebarItems","title","icon","userName","localStorage","getItem","numberOfAsesorias","maxAsesoriasAllowed","asesorias","JSON","parse","userId","computed","allFilesUploaded","length","every","asesoria","file","submitted","methods","navigate","index","$router","push","logout","removeItem","initializeAsesorias","Array","from","v","i","id","submitFiles","formData","FormData","submittedIndexes","forEach","append","response","post","headers","status","files","fileIndex","undefined","filename","setItem","stringify","window","alert","console","log","error","deleteFile","fileId","delete","then","fileInput","document","getElementById","disabled","catch","fetchAsesorias","get","userData","fetchFileData","downloadAllFiles","zip","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","generateAsync","type","content","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/AsesoriasAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 800px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\"\n              >Asesorías</v-card-title\n            >\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model.number=\"numberOfAsesorias\"\n                    label=\"Number of Asesorías\"\n                    type=\"number\"\n                    :min=\"1\"\n                    :max=\"maxAsesoriasAllowed\"\n                    @change=\"initializeAsesorias\"\n                  ></v-text-field>\n                </v-col>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-col\n                  v-for=\"(asesoria, index) in asesorias\"\n                  :key=\"asesoria.id\"\n                  cols=\"6\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <v-file-input\n                        v-model=\"asesoria.file\"\n                        :id=\"'file-input-' + index\"\n                        :label=\"'Upload File for Asesoría ' + (index + 1)\"\n                        prepend-icon=\"mdi-upload\"\n                        :disabled=\"asesoria.submitted\"\n                        accept=\"application/pdf\"\n                      ></v-file-input>\n                    </v-col>\n                    <!-- Delete button -->\n                    <v-col v-if=\"asesoria.submitted\" cols=\"12\">\n                      <v-btn color=\"red\" fab small @click=\"deleteFile(index)\">\n                        <v-icon>mdi-delete</v-icon>\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn\n                color=\"blue darken-2\"\n                @click=\"submitFiles\"\n                :disabled=\"!allFilesUploaded\"\n              >\n                Submit All\n              </v-btn>\n              <v-btn color=\"green darken-2\" @click=\"downloadAllFiles\">\n                Download All Files\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport JSZip from 'jszip'\nimport { saveAs } from 'file-saver'\n\nexport default {\n  data () {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' }\n      ],\n      userName: localStorage.getItem('userName'),\n      numberOfAsesorias: 1,\n      maxAsesoriasAllowed: 5, // Adjust this number based on your requirements\n      asesorias: JSON.parse(localStorage.getItem('asesorias')) || [],\n      userId: localStorage.getItem('id')\n    }\n  },\n  computed: {\n    allFilesUploaded () {\n      return (\n        this.asesorias.length === this.numberOfAsesorias &&\n        this.asesorias.every((asesoria) => asesoria.file || asesoria.submitted)\n      )\n    }\n  },\n  methods: {\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student')\n          break\n        case 1:\n          this.$router.push('/student/asesorias')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      localStorage.removeItem('token')\n      this.$router.push('/login')\n    },\n    initializeAsesorias () {\n      this.asesorias = Array.from(\n        { length: this.numberOfAsesorias },\n        (v, i) => ({\n          id: i + 1,\n          file: null,\n          submitted: this.asesorias[i]?.submitted || false // Set submitted status based on existing data\n        })\n      )\n    },\n    async submitFiles () {\n      const formData = new FormData()\n      const submittedIndexes = [] // Store the indexes of submitted files\n\n      // Collect submitted files and their indexes\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && !asesoria.submitted) {\n          formData.append('files', asesoria.file)\n          submittedIndexes.push(index) // Store the index of submitted file\n        }\n      })\n\n      try {\n        const response = await axios.post(\n          'http://localhost:3000/upload/multiple',\n          formData,\n          {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }\n        )\n\n        if (response.status === 201) {\n          response.data.files.forEach((file, fileIndex) => {\n            const index = submittedIndexes[fileIndex]\n            if (index !== undefined) {\n              // Store the filename along with the file\n              this.asesorias[index].submitted = true\n              this.asesorias[index].file = {\n                id: file.id,\n                filename: file.filename\n              }\n            }\n          })\n\n          // Save the updated asesorias data in localStorage\n          localStorage.setItem('asesorias', JSON.stringify(this.asesorias))\n\n          window.alert('Files uploaded successfully!') // Display alert\n          console.log('Files uploaded successfully!')\n        } else {\n          console.error('Failed to upload files.')\n        }\n      } catch (error) {\n        console.error('Error uploading files:', error)\n      }\n    },\n\n    deleteFile (index) {\n      const fileId = this.asesorias[index].file.id\n      axios\n        .delete(`http://localhost:3000/files/${fileId}`)\n        .then((response) => {\n          if (response.status === 200) {\n            // Reset submitted status and file data\n            this.asesorias[index].submitted = false\n            this.asesorias[index].file = null\n            // Enable the file input field\n            const fileInput = document.getElementById(`file-input-${index}`)\n            if (fileInput) {\n              fileInput.disabled = false\n            }\n            localStorage.setItem('asesorias', JSON.stringify(this.asesorias))\n            window.alert('File deleted successfully!')\n          } else {\n            console.error('Failed to delete file.')\n          }\n        })\n        .catch((error) => {\n          console.error('Error deleting file:', error)\n        })\n    },\n\n    async fetchAsesorias () {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/users/${this.userId}`\n        )\n        const userData = response.data\n        this.maxAsesoriasAllowed = userData.asesorias\n        this.initializeAsesorias() // Initialize asesorias based on fetched number\n      } catch (error) {\n        console.error('Error fetching asesorías:', error)\n      }\n    },\n    async fetchFileData () {\n      try {\n        const response = await axios.get('http://localhost:3000/files')\n        const files = response.data\n        // Update file objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.asesorias[index]) {\n            this.asesorias[index].file = file\n          }\n        })\n      } catch (error) {\n        console.error('Error fetching file data:', error)\n      }\n    },\n    async downloadAllFiles () {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchFileData()\n\n      const zip = new JSZip()\n      this.asesorias.forEach((asesoria, index) => {\n        if (asesoria.file && asesoria.file.data) {\n          const byteString = atob(asesoria.file.data)\n          const ab = new ArrayBuffer(byteString.length)\n          const ia = new Uint8Array(ab)\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i)\n          }\n          zip.file(`filename_${index + 1}.pdf`, ab)\n        }\n      })\n\n      zip.generateAsync({ type: 'blob' }).then((content) => {\n        saveAs(content, 'asesorias.zip')\n      })\n    }\n  },\n\n  mounted () {\n    this.fetchAsesorias()\n    this.fetchFileData()\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":";;;;;;;;AAsGA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,MAAK,QAAS,YAAW;AAElC,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,YAAY,EAAE,CACZ;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,EACjD;QAAED,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAA2B,EACxD;MACDC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1CC,iBAAiB,EAAE,CAAC;MACpBC,mBAAmB,EAAE,CAAC;MAAE;MACxBC,SAAS,EAAEC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE;MAC9DM,MAAM,EAAEP,YAAY,CAACC,OAAO,CAAC,IAAI;IACnC;EACF,CAAC;EACDO,QAAQ,EAAE;IACRC,gBAAeA,CAAA,EAAK;MAClB,OACE,IAAI,CAACL,SAAS,CAACM,MAAK,KAAM,IAAI,CAACR,iBAAgB,IAC/C,IAAI,CAACE,SAAS,CAACO,KAAK,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAG,IAAKD,QAAQ,CAACE,SAAS;IAE1E;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAOA,CAAGC,KAAK,EAAE;MACf,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU;UAC5B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,oBAAoB;UACtC;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAKA,CAAA,EAAK;MACRpB,YAAY,CAACqB,UAAU,CAAC,OAAO;MAC/B,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC5B,CAAC;IACDG,mBAAkBA,CAAA,EAAK;MACrB,IAAI,CAAClB,SAAQ,GAAImB,KAAK,CAACC,IAAI,CACzB;QAAEd,MAAM,EAAE,IAAI,CAACR;MAAkB,CAAC,EAClC,CAACuB,CAAC,EAAEC,CAAC,MAAM;QACTC,EAAE,EAAED,CAAA,GAAI,CAAC;QACTb,IAAI,EAAE,IAAI;QACVC,SAAS,EAAE,IAAI,CAACV,SAAS,CAACsB,CAAC,CAAC,EAAEZ,SAAQ,IAAK,KAAI,CAAE;MACnD,CAAC,CACH;IACF,CAAC;IACD,MAAMc,WAAUA,CAAA,EAAK;MACnB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC;MAC9B,MAAMC,gBAAe,GAAI,EAAC,EAAE;;MAE5B;MACA,IAAI,CAAC3B,SAAS,CAAC4B,OAAO,CAAC,CAACpB,QAAQ,EAAEK,KAAK,KAAK;QAC1C,IAAIL,QAAQ,CAACC,IAAG,IAAK,CAACD,QAAQ,CAACE,SAAS,EAAE;UACxCe,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAErB,QAAQ,CAACC,IAAI;UACtCkB,gBAAgB,CAACZ,IAAI,CAACF,KAAK,GAAE;QAC/B;MACF,CAAC;MAED,IAAI;QACF,MAAMiB,QAAO,GAAI,MAAM3C,KAAK,CAAC4C,IAAI,CAC/B,uCAAuC,EACvCN,QAAQ,EACR;UACEO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF;QAEA,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BH,QAAQ,CAACxC,IAAI,CAAC4C,KAAK,CAACN,OAAO,CAAC,CAACnB,IAAI,EAAE0B,SAAS,KAAK;YAC/C,MAAMtB,KAAI,GAAIc,gBAAgB,CAACQ,SAAS;YACxC,IAAItB,KAAI,KAAMuB,SAAS,EAAE;cACvB;cACA,IAAI,CAACpC,SAAS,CAACa,KAAK,CAAC,CAACH,SAAQ,GAAI,IAAG;cACrC,IAAI,CAACV,SAAS,CAACa,KAAK,CAAC,CAACJ,IAAG,GAAI;gBAC3Bc,EAAE,EAAEd,IAAI,CAACc,EAAE;gBACXc,QAAQ,EAAE5B,IAAI,CAAC4B;cACjB;YACF;UACF,CAAC;;UAED;UACAzC,YAAY,CAAC0C,OAAO,CAAC,WAAW,EAAErC,IAAI,CAACsC,SAAS,CAAC,IAAI,CAACvC,SAAS,CAAC;UAEhEwC,MAAM,CAACC,KAAK,CAAC,8BAA8B,GAAE;UAC7CC,OAAO,CAACC,GAAG,CAAC,8BAA8B;QAC5C,OAAO;UACLD,OAAO,CAACE,KAAK,CAAC,yBAAyB;QACzC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK;MAC/C;IACF,CAAC;IAEDC,UAASA,CAAGhC,KAAK,EAAE;MACjB,MAAMiC,MAAK,GAAI,IAAI,CAAC9C,SAAS,CAACa,KAAK,CAAC,CAACJ,IAAI,CAACc,EAAC;MAC3CpC,KAAI,CACD4D,MAAM,CAAE,+BAA8BD,MAAO,EAAC,EAC9CE,IAAI,CAAElB,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B;UACA,IAAI,CAACjC,SAAS,CAACa,KAAK,CAAC,CAACH,SAAQ,GAAI,KAAI;UACtC,IAAI,CAACV,SAAS,CAACa,KAAK,CAAC,CAACJ,IAAG,GAAI,IAAG;UAChC;UACA,MAAMwC,SAAQ,GAAIC,QAAQ,CAACC,cAAc,CAAE,cAAatC,KAAM,EAAC;UAC/D,IAAIoC,SAAS,EAAE;YACbA,SAAS,CAACG,QAAO,GAAI,KAAI;UAC3B;UACAxD,YAAY,CAAC0C,OAAO,CAAC,WAAW,EAAErC,IAAI,CAACsC,SAAS,CAAC,IAAI,CAACvC,SAAS,CAAC;UAChEwC,MAAM,CAACC,KAAK,CAAC,4BAA4B;QAC3C,OAAO;UACLC,OAAO,CAACE,KAAK,CAAC,wBAAwB;QACxC;MACF,CAAC,EACAS,KAAK,CAAET,KAAK,IAAK;QAChBF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK;MAC7C,CAAC;IACL,CAAC;IAED,MAAMU,cAAaA,CAAA,EAAK;MACtB,IAAI;QACF,MAAMxB,QAAO,GAAI,MAAM3C,KAAK,CAACoE,GAAG,CAC7B,+BAA8B,IAAI,CAACpD,MAAO,EAC7C;QACA,MAAMqD,QAAO,GAAI1B,QAAQ,CAACxC,IAAG;QAC7B,IAAI,CAACS,mBAAkB,GAAIyD,QAAQ,CAACxD,SAAQ;QAC5C,IAAI,CAACkB,mBAAmB,CAAC,GAAE;MAC7B,EAAE,OAAO0B,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF,CAAC;IACD,MAAMa,aAAYA,CAAA,EAAK;MACrB,IAAI;QACF,MAAM3B,QAAO,GAAI,MAAM3C,KAAK,CAACoE,GAAG,CAAC,6BAA6B;QAC9D,MAAMrB,KAAI,GAAIJ,QAAQ,CAACxC,IAAG;QAC1B;QACA4C,KAAK,CAACN,OAAO,CAAC,CAACnB,IAAI,EAAEI,KAAK,KAAK;UAC7B,IAAI,IAAI,CAACb,SAAS,CAACa,KAAK,CAAC,EAAE;YACzB,IAAI,CAACb,SAAS,CAACa,KAAK,CAAC,CAACJ,IAAG,GAAIA,IAAG;UAClC;QACF,CAAC;MACH,EAAE,OAAOmC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF,CAAC;IACD,MAAMc,gBAAeA,CAAA,EAAK;MACxB;MACA,MAAM,IAAI,CAACD,aAAa,CAAC;MAEzB,MAAME,GAAE,GAAI,IAAIvE,KAAK,CAAC;MACtB,IAAI,CAACY,SAAS,CAAC4B,OAAO,CAAC,CAACpB,QAAQ,EAAEK,KAAK,KAAK;QAC1C,IAAIL,QAAQ,CAACC,IAAG,IAAKD,QAAQ,CAACC,IAAI,CAACnB,IAAI,EAAE;UACvC,MAAMsE,UAAS,GAAIC,IAAI,CAACrD,QAAQ,CAACC,IAAI,CAACnB,IAAI;UAC1C,MAAMwE,EAAC,GAAI,IAAIC,WAAW,CAACH,UAAU,CAACtD,MAAM;UAC5C,MAAM0D,EAAC,GAAI,IAAIC,UAAU,CAACH,EAAE;UAC5B,KAAK,IAAIxC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIsC,UAAU,CAACtD,MAAM,EAAEgB,CAAC,EAAE,EAAE;YAC1C0C,EAAE,CAAC1C,CAAC,IAAIsC,UAAU,CAACM,UAAU,CAAC5C,CAAC;UACjC;UACAqC,GAAG,CAAClD,IAAI,CAAE,YAAWI,KAAI,GAAI,CAAE,MAAK,EAAEiD,EAAE;QAC1C;MACF,CAAC;MAEDH,GAAG,CAACQ,aAAa,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC,CAACpB,IAAI,CAAEqB,OAAO,IAAK;QACpDhF,MAAM,CAACgF,OAAO,EAAE,eAAe;MACjC,CAAC;IACH;EACF,CAAC;EAEDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAAChB,cAAc,CAAC;IACpB,IAAI,CAACG,aAAa,CAAC;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}