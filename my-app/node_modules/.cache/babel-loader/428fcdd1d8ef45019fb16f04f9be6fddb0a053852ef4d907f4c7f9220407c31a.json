{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport ProjectCard from '@/components/ProjectCard.vue';\nimport ProjectTable from '@/components/ProjectTable.vue';\nexport default {\n  components: {\n    ProjectCard,\n    ProjectTable\n  },\n  data() {\n    return {\n      showProjects: true,\n      projects: [],\n      sidebarItems: [{\n        title: 'Projects',\n        icon: 'mdi-folder-outline'\n      }],\n      userName: 'John Doe',\n      drawer: false\n    };\n  },\n  methods: {\n    onClick() {\n      // Emit a click event when the card is clicked\n      this.showProjects = false;\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get('http://localhost:3000/projects');\n        this.projects = response.data;\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects');\n          break;\n        case 1:\n          this.$router.push('/Students');\n          break;\n        case 2:\n          this.$router.push('/Teachers');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token');\n\n      // Redirect the user to the login page\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","ProjectCard","ProjectTable","components","data","showProjects","projects","sidebarItems","title","icon","userName","drawer","methods","onClick","fetchData","response","get","error","console","navigate","index","$router","push","logout","localStorage","removeItem","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/TeacherPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main v-if=\"showProjects\">\n        <!-- Main content -->\n        <v-row>\n          <v-col\n            v-for=\"project in projects\"\n            :key=\"project.id\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n            lg=\"3\"\n            xl=\"2\"\n          >\n            <ProjectCard :projectName=\"project.name\" @click=\"onClick\" />\n          </v-col>\n        </v-row>\n      </v-main>\n\n      <template>\n  <v-main>\n    <!-- Main content -->\n    <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n      <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n        <!-- Projects Data -->\n        <v-data-table\n          v-if=\"projects.length > 0\"\n          :items=\"projects\"\n          align=\"center\"\n        >\n          <template v-slot:top>\n            <v-toolbar flat color=\"blue darken-2\">\n              <v-toolbar-title>Projects</v-toolbar-title>\n              <v-divider class=\"mx-4\" inset vertical></v-divider>\n              <v-spacer></v-spacer>\n              <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                <v-icon>mdi-plus</v-icon>\n              </v-btn>\n            </v-toolbar>\n          </template>\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td v-for=\"(value, key) in item\" :key=\"key\">\n                {{ value }}\n              </td>\n              <td>\n                <!-- Use small prop to make the buttons smaller -->\n                <v-btn\n                  icon\n                  small\n                  color=\"blue darken-2\"\n                  @click=\"editProject(item)\"\n                  style=\"width: 30px; height: 30px; margin-right: 5px\"\n                >\n                  <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                </v-btn>\n                <v-btn\n                  icon\n                  small\n                  color=\"red darken-2\"\n                  @click=\"deleteProject(item)\"\n                  style=\"width: 30px; height: 30px; margin-right: 5px\"\n                >\n                  <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-col>\n  </v-main>\n\n  <!-- Edit Dialog -->\n  <v-dialog v-model=\"editDialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Edit Project Name</v-card-title>\n      <v-card-text>\n        <v-text-field\n          v-model=\"editedProjectName\"\n          label=\"Project Name\"\n        ></v-text-field>\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"blue darken-2\" @click=\"saveEditedProject\">Save</v-btn>\n        <v-btn @click=\"cancelEdit\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n\n  <!-- Create Dialog -->\n  <v-dialog v-model=\"createDialog\" max-width=\"500\">\n    <v-card>\n      <v-card-title>Create New Project</v-card-title>\n      <v-card-text>\n        <v-text-field v-model=\"newProject._id\" label=\"ID\"></v-text-field>\n        <v-text-field\n          v-model=\"newProject.name\"\n          label=\"Project Name\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"newProject.company\"\n          label=\"Company\"\n        ></v-text-field>\n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"blue darken-2\" @click=\"saveNewProject\">Save</v-btn>\n        <v-btn @click=\"cancelCreate\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport ProjectCard from '@/components/ProjectCard.vue'\nimport ProjectTable from '@/components/ProjectTable.vue'\n\nexport default {\n  components: {\n    ProjectCard,\n    ProjectTable\n  },\n  data () {\n    return {\n      showProjects: true,\n      projects: [],\n      sidebarItems: [{ title: 'Projects', icon: 'mdi-folder-outline' }],\n      userName: 'John Doe',\n      drawer: false\n    }\n  },\n  methods: {\n    onClick () {\n      // Emit a click event when the card is clicked\n      this.showProjects = false\n    },\n    async fetchData () {\n      try {\n        const response = await axios.get('http://localhost:3000/projects')\n        this.projects = response.data\n      } catch (error) {\n        console.error('Error fetching projects:', error)\n      }\n    },\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects')\n          break\n        case 1:\n          this.$router.push('/Students')\n          break\n        case 2:\n          this.$router.push('/Teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token')\n\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    }\n  },\n  mounted () {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":";AAuJA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,YAAW,MAAO,+BAA8B;AAEvD,eAAe;EACbC,UAAU,EAAE;IACVF,WAAW;IACXC;EACF,CAAC;EACDE,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,CAAC;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,CAAC;MACjEC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,OAAMA,CAAA,EAAK;MACT;MACA,IAAI,CAACR,YAAW,GAAI,KAAI;IAC1B,CAAC;IACD,MAAMS,SAAQA,CAAA,EAAK;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,gCAAgC;QACjE,IAAI,CAACV,QAAO,GAAIS,QAAQ,CAACX,IAAG;MAC9B,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK;MACjD;IACF,CAAC;IACDE,QAAOA,CAAGC,KAAK,EAAE;MACf,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,mBAAmB;UACrC;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,WAAW;UAC7B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,WAAW;UAC7B;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAKA,CAAA,EAAK;MACR;MACA;MACAC,YAAY,CAACC,UAAU,CAAC,OAAO;;MAE/B;MACA,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC5B;EACF,CAAC;EACDI,OAAMA,CAAA,EAAK;IACT,IAAI,CAACZ,SAAS,CAAC;EACjB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}