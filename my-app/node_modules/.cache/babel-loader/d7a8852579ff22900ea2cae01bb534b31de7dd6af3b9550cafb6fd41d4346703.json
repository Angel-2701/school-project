{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }],\n      userName: localStorage.getItem('userName'),\n      // Retrieve the user's name from localStorage\n      numberOfAsesorias: 1,\n      // Default to 1 asesoria\n      asesorias: [{\n        file: null\n      }],\n      // Initialize with one asesoria\n      userId: localStorage.getItem('id')\n    };\n  },\n  computed: {\n    leftAsesorias() {\n      const half = Math.ceil(this.asesorias.length / 2);\n      return this.asesorias.slice(0, half);\n    },\n    rightAsesorias() {\n      const half = Math.ceil(this.asesorias.length / 2);\n      return this.asesorias.slice(half);\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token');\n\n      // Redirect the user to the login page\n      this.$router.push('/login');\n    },\n    initializeAsesorias() {\n      // Initialize the asesorias array based on the number of asesorias\n      this.asesorias = Array.from({\n        length: this.numberOfAsesorias\n      }, () => ({\n        file: null\n      }));\n    },\n    submitFile(index) {\n      // Handle individual file submission logic\n      const asesoria = this.asesorias[index];\n      console.log(`File for Asesoría ${index + 1}:`, asesoria.file);\n      // You can implement file upload functionality here\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userData = response.data;\n        const numberOfAsesorias = userData.asesorias; // Assuming `asesorias` is the number of asesorías\n        this.asesorias = [];\n        for (let i = 0; i < numberOfAsesorias; i++) {\n          this.asesorias.push({\n            file: null\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching asesorías:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","drawer","sidebarItems","title","icon","userName","localStorage","getItem","numberOfAsesorias","asesorias","file","userId","computed","leftAsesorias","half","Math","ceil","length","slice","rightAsesorias","methods","navigate","index","$router","push","logout","removeItem","initializeAsesorias","Array","from","submitFile","asesoria","console","log","fetchAsesorias","response","get","userData","i","error"],"sources":["/Users/angel/school-project/my-app/src/components/AsesoriasAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 800px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\"\n              >Asesorías</v-card-title\n            >\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"numberOfAsesorias\"\n                    label=\"Number of Asesorías\"\n                    type=\"number\"\n                    min=\"1\"\n                    @change=\"fetchAsesorias\"\n                  ></v-text-field>\n                </v-col>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-col\n                  v-for=\"(asesoria, index) in asesorias\"\n                  :key=\"index\"\n                  cols=\"6\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <v-file-input\n                        v-model=\"asesoria.file\"\n                        :label=\"'Upload File for Asesoría ' + (index + 1)\"\n                        prepend-icon=\"mdi-upload\"\n                      ></v-file-input>\n                      <v-btn color=\"blue darken-2\" @click=\"submitFile(index)\"\n                        >Submit</v-btn\n                      >\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  data () {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' }\n      ],\n      userName: localStorage.getItem('userName'), // Retrieve the user's name from localStorage\n      numberOfAsesorias: 1, // Default to 1 asesoria\n      asesorias: [{ file: null }], // Initialize with one asesoria\n      userId: localStorage.getItem('id')\n    }\n  },\n  computed: {\n    leftAsesorias () {\n      const half = Math.ceil(this.asesorias.length / 2)\n      return this.asesorias.slice(0, half)\n    },\n    rightAsesorias () {\n      const half = Math.ceil(this.asesorias.length / 2)\n      return this.asesorias.slice(half)\n    }\n  },\n  methods: {\n    navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student')\n          break\n        case 1:\n          this.$router.push('/student/asesorias')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token')\n\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    },\n    initializeAsesorias () {\n      // Initialize the asesorias array based on the number of asesorias\n      this.asesorias = Array.from({ length: this.numberOfAsesorias }, () => ({\n        file: null\n      }))\n    },\n    submitFile (index) {\n      // Handle individual file submission logic\n      const asesoria = this.asesorias[index]\n      console.log(`File for Asesoría ${index + 1}:`, asesoria.file)\n      // You can implement file upload functionality here\n    },\n    async fetchAsesorias () {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${this.userId}`)\n        const userData = response.data\n        const numberOfAsesorias = userData.asesorias; // Assuming `asesorias` is the number of asesorías\nthis.asesorias = [];\nfor (let i = 0; i < numberOfAsesorias; i++) {\n  this.asesorias.push({ file: null });\n}\n      } catch (error) {\n        console.error('Error fetching asesorías:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":";AAmFA,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACbC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,YAAY,EAAE,CACZ;QAAEC,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAqB,CAAC,EACjD;QAAED,KAAK,EAAE,WAAW;QAAEC,IAAI,EAAE;MAA2B,EACxD;MACDC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAAE;MAC5CC,iBAAiB,EAAE,CAAC;MAAE;MACtBC,SAAS,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;MAAE;MAC7BC,MAAM,EAAEL,YAAY,CAACC,OAAO,CAAC,IAAI;IACnC;EACF,CAAC;EACDK,QAAQ,EAAE;IACRC,aAAYA,CAAA,EAAK;MACf,MAAMC,IAAG,GAAIC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACP,SAAS,CAACQ,MAAK,GAAI,CAAC;MAChD,OAAO,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC,CAAC,EAAEJ,IAAI;IACrC,CAAC;IACDK,cAAaA,CAAA,EAAK;MAChB,MAAML,IAAG,GAAIC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACP,SAAS,CAACQ,MAAK,GAAI,CAAC;MAChD,OAAO,IAAI,CAACR,SAAS,CAACS,KAAK,CAACJ,IAAI;IAClC;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,QAAOA,CAAGC,KAAK,EAAE;MACf,QAAQA,KAAK;QACX,KAAK,CAAC;UACJ,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU;UAC5B;QACF,KAAK,CAAC;UACJ,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,oBAAoB;UACtC;QACF;UACE;MACJ;IACF,CAAC;IACDC,MAAKA,CAAA,EAAK;MACR;MACA;MACAnB,YAAY,CAACoB,UAAU,CAAC,OAAO;;MAE/B;MACA,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC5B,CAAC;IACDG,mBAAkBA,CAAA,EAAK;MACrB;MACA,IAAI,CAAClB,SAAQ,GAAImB,KAAK,CAACC,IAAI,CAAC;QAAEZ,MAAM,EAAE,IAAI,CAACT;MAAkB,CAAC,EAAE,OAAO;QACrEE,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC;IACDoB,UAASA,CAAGR,KAAK,EAAE;MACjB;MACA,MAAMS,QAAO,GAAI,IAAI,CAACtB,SAAS,CAACa,KAAK;MACrCU,OAAO,CAACC,GAAG,CAAE,qBAAoBX,KAAI,GAAI,CAAE,GAAE,EAAES,QAAQ,CAACrB,IAAI;MAC5D;IACF,CAAC;IACD,MAAMwB,cAAaA,CAAA,EAAK;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMpC,KAAK,CAACqC,GAAG,CAAE,+BAA8B,IAAI,CAACzB,MAAO,EAAC;QAC7E,MAAM0B,QAAO,GAAIF,QAAQ,CAACnC,IAAG;QAC7B,MAAMQ,iBAAgB,GAAI6B,QAAQ,CAAC5B,SAAS,EAAE;QACtD,IAAI,CAACA,SAAQ,GAAI,EAAE;QACnB,KAAK,IAAI6B,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI9B,iBAAiB,EAAE8B,CAAC,EAAE,EAAE;UAC1C,IAAI,CAAC7B,SAAS,CAACe,IAAI,CAAC;YAAEd,IAAI,EAAE;UAAK,CAAC,CAAC;QACrC;MACM,EAAE,OAAO6B,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}