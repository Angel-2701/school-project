{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }],\n      userId: localStorage.getItem(\"id\"),\n      project: {\n        name: \"\",\n        company: \"\"\n      },\n      file1: null,\n      file2: null,\n      file3: null,\n      uploadedPDFs: []\n    };\n  },\n  mounted() {\n    this.fetchProject();\n    this.fetchUploadedPDFs();\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    fetchProject() {\n      if (!this.userId) {\n        console.error(\"No user ID found.\");\n        return;\n      }\n      axios.get(`http://localhost:3000/users/${this.userId}`).then(response => {\n        const user = response.data;\n        const projectId = user.project;\n        if (!projectId) {\n          console.error(\"No project ID found for the user.\");\n          return;\n        }\n        return axios.get(`http://localhost:3000/projects/${projectId}`);\n      }).then(response => {\n        if (response) {\n          this.project = response.data;\n        }\n      }).catch(error => {\n        console.error(\"Error fetching project data:\", error);\n      });\n    },\n    fetchUploadedPDFs() {\n      axios.get(`http://localhost:3000/projects/${this.project._id}/pdfs`).then(response => {\n        this.uploadedPDFs = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching PDFs:\", error);\n      });\n    },\n    submitFiles() {\n      const formData = new FormData();\n      if (this.file1) formData.append(\"files\", this.file1);\n      if (this.file2) formData.append(\"files\", this.file2);\n      if (this.file3) formData.append(\"files\", this.file3);\n      axios.post(`http://localhost:3000/projects/${this.project._id}/upload`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        console.log(\"Files uploaded:\", response.data);\n        this.fetchUploadedPDFs(); // Refresh the list of uploaded PDFs\n      }).catch(error => {\n        console.error(\"Error uploading files:\", error);\n      });\n    },\n    viewPDF(pdf) {\n      // Logic to view the PDF\n      // For simplicity, we can open the PDF in a new tab\n      window.open(`http://localhost:3000/pdfs/${pdf._id}`, \"_blank\");\n    }\n  }\n};","map":{"version":3,"names":["axios","data","drawer","sidebarItems","title","icon","userId","localStorage","getItem","project","name","company","file1","file2","file3","uploadedPDFs","mounted","fetchProject","fetchUploadedPDFs","methods","navigate","index","$router","push","logout","removeItem","console","error","get","then","response","user","projectId","catch","_id","submitFiles","formData","FormData","append","post","headers","log","viewPDF","pdf","window","open"],"sources":["/Users/angel/school-project/my-app/src/components/StudentPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 800px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\"\n              >Project Information</v-card-title\n            >\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.name\"\n                    label=\"Project Name\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"project.company\"\n                    label=\"Company\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-4\"></v-divider>\n              <v-row>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file1\"\n                    label=\"Upload File 1\"\n                    prepend-icon=\"mdi-upload\"\n                    accept=\".pdf\"\n                  ></v-file-input>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file2\"\n                    label=\"Upload File 2\"\n                    prepend-icon=\"mdi-upload\"\n                    accept=\".pdf\"\n                  ></v-file-input>\n                </v-col>\n                <v-col cols=\"12\" md=\"4\">\n                  <v-file-input\n                    v-model=\"file3\"\n                    label=\"Upload File 3\"\n                    prepend-icon=\"mdi-upload\"\n                    accept=\".pdf\"\n                  ></v-file-input>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"blue darken-2\" @click=\"submitFiles\"\n                >Submit Files</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n\n          <v-card class=\"mx-auto mt-5\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Uploaded PDFs\n            </v-card-title>\n            <v-card-text>\n              <v-list dense>\n                <v-list-item\n                  v-for=\"(pdf, index) in uploadedPDFs\"\n                  :key=\"index\"\n                  @click=\"viewPDF(pdf)\"\n                >\n                  <v-list-item-content>\n                    <v-list-item-title>{{ pdf.name }}</v-list-item-title>\n                  </v-list-item-content>\n                </v-list-item>\n              </v-list>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n      ],\n      userId: localStorage.getItem(\"id\"),\n      project: {\n        name: \"\",\n        company: \"\",\n      },\n      file1: null,\n      file2: null,\n      file3: null,\n      uploadedPDFs: [],\n    };\n  },\n  mounted() {\n    this.fetchProject();\n    this.fetchUploadedPDFs();\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    fetchProject() {\n      if (!this.userId) {\n        console.error(\"No user ID found.\");\n        return;\n      }\n\n      axios\n        .get(`http://localhost:3000/users/${this.userId}`)\n        .then((response) => {\n          const user = response.data;\n          const projectId = user.project;\n\n          if (!projectId) {\n            console.error(\"No project ID found for the user.\");\n            return;\n          }\n\n          return axios.get(`http://localhost:3000/projects/${projectId}`);\n        })\n        .then((response) => {\n          if (response) {\n            this.project = response.data;\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching project data:\", error);\n        });\n    },\n    fetchUploadedPDFs() {\n      axios\n        .get(`http://localhost:3000/projects/${this.project._id}/pdfs`)\n        .then((response) => {\n          this.uploadedPDFs = response.data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching PDFs:\", error);\n        });\n    },\n    submitFiles() {\n      const formData = new FormData();\n      if (this.file1) formData.append(\"files\", this.file1);\n      if (this.file2) formData.append(\"files\", this.file2);\n      if (this.file3) formData.append(\"files\", this.file3);\n\n      axios\n        .post(\n          `http://localhost:3000/projects/${this.project._id}/upload`,\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        )\n        .then((response) => {\n          console.log(\"Files uploaded:\", response.data);\n          this.fetchUploadedPDFs(); // Refresh the list of uploaded PDFs\n        })\n        .catch((error) => {\n          console.error(\"Error uploading files:\", error);\n        });\n    },\n    viewPDF(pdf) {\n      // Logic to view the PDF\n      // For simplicity, we can open the PDF in a new tab\n      window.open(`http://localhost:3000/pdfs/${pdf._id}`, \"_blank\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}