{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [{\n        title: 'Proyecto',\n        icon: 'mdi-folder-outline'\n      }, {\n        title: 'Asesorias',\n        icon: 'mdi-account-plus-outline'\n      }],\n      userName: localStorage.getItem('userName'),\n      // Retrieve the user's name from localStorage\n      numberOfAsesorias: 1,\n      // Default to 1 asesoria\n      asesorias: [{\n        files: [null],\n        submitted: false\n      }],\n      // Initialize with one asesoria\n      userId: localStorage.getItem('id')\n    };\n  },\n  computed: {\n    allFilesSubmitted() {\n      return this.asesorias.every(asesoria => asesoria.submitted);\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    },\n    async submitFiles() {\n      for (let i = 0; i < this.asesorias.length; i++) {\n        if (!this.asesorias[i].submitted) {\n          for (let j = 0; j < this.asesorias[i].files.length; j++) {\n            if (this.asesorias[i].files[j]) {\n              await this.submitFile(i, j);\n            }\n          }\n        }\n      }\n    },\n    async submitFile(index, fileIndex) {\n      const asesoria = this.asesorias[index];\n      const file = asesoria.files[fileIndex];\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n        try {\n          const response = await axios.post('http://localhost:3000/upload', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          if (response.status === 201) {\n            this.$set(this.asesorias[index].files, fileIndex, {\n              ...file,\n              submitted: true\n            });\n            console.log(`File for Asesoría ${index + 1}, File ${fileIndex + 1} uploaded successfully!`);\n          } else {\n            console.error(`Failed to upload file for Asesoría ${index + 1}, File ${fileIndex + 1}.`);\n          }\n        } catch (error) {\n          console.error(`Error uploading file for Asesoría ${index + 1}, File ${fileIndex + 1}:`, error);\n        }\n      }\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userData = response.data;\n        this.numberOfAsesorias = userData.asesorias; // Set numberOfAsesorias to the value fetched from the backend\n        this.asesorias = []; // Clear the asesorías array\n        for (let i = 0; i < this.numberOfAsesorias; i++) {\n          const asesoria = {\n            files: Array.from({\n              length: userData.asesorias[i]?.files?.length || 1\n            }, () => null),\n            submitted: userData.asesorias[i]?.submitted || false\n          };\n          this.asesorias.push(asesoria); // Initialize the asesorías array based on the fetched value\n        }\n      } catch (error) {\n        console.error('Error fetching asesorías:', error);\n      }\n    },\n    addFileInput(index) {\n      if (this.asesorias[index].files.length < this.numberOfAsesorias) {\n        this.asesorias[index].files.push(null);\n      }\n    },\n    validateFile(index, fileIndex) {\n      const file = this.asesorias[index].files[fileIndex];\n      if (file && file.type !== 'application/pdf') {\n        this.$set(this.asesorias[index].files, fileIndex, null);\n        alert('Only PDF files are allowed!');\n      }\n    }\n  },\n  mounted() {\n    this.fetchAsesorias();\n  }\n};","map":{"version":3,"names":["axios","data","drawer","sidebarItems","title","icon","userName","localStorage","getItem","numberOfAsesorias","asesorias","files","submitted","userId","computed","allFilesSubmitted","every","asesoria","methods","navigate","index","$router","push","logout","removeItem","submitFiles","i","length","j","submitFile","fileIndex","file","formData","FormData","append","response","post","headers","status","$set","console","log","error","fetchAsesorias","get","userData","Array","from","addFileInput","validateFile","type","alert","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/AsesoriasAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 800px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"600\">\n            <v-card-title class=\"blue darken-2 white--text\">Asesorías</v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"numberOfAsesorias\"\n                    label=\"Number of Asesorías\"\n                    type=\"number\"\n                    min=\"1\"\n                    readonly\n                  ></v-text-field>\n                </v-col>\n                <v-divider class=\"my-4\"></v-divider>\n                <v-col\n                  v-for=\"(asesoria, index) in asesorias\"\n                  :key=\"index\"\n                  cols=\"12\"\n                >\n                  <v-row>\n                    <v-col cols=\"12\">\n                      <v-file-input\n                        v-for=\"(file, fileIndex) in asesoria.files\"\n                        :key=\"fileIndex\"\n                        v-model=\"asesoria.files[fileIndex]\"\n                        :label=\"'Upload PDF for Asesoría ' + (index + 1)\"\n                        prepend-icon=\"mdi-upload\"\n                        accept=\"application/pdf\"\n                        :disabled=\"asesoria.submitted\"\n                        @change=\"validateFile(index, fileIndex)\"\n                      ></v-file-input>\n                      <v-btn \n                        v-if=\"asesoria.files.length < numberOfAsesorias && !asesoria.submitted\"\n                        @click=\"addFileInput(index)\"\n                      >Add another file</v-btn>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"blue darken-2\" @click=\"submitFiles\" :disabled=\"allFilesSubmitted\">Submit All</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      drawer: false,\n      sidebarItems: [\n        { title: 'Proyecto', icon: 'mdi-folder-outline' },\n        { title: 'Asesorias', icon: 'mdi-account-plus-outline' }\n      ],\n      userName: localStorage.getItem('userName'), // Retrieve the user's name from localStorage\n      numberOfAsesorias: 1, // Default to 1 asesoria\n      asesorias: [{ files: [null], submitted: false }], // Initialize with one asesoria\n      userId: localStorage.getItem('id')\n    };\n  },\n  computed: {\n    allFilesSubmitted() {\n      return this.asesorias.every(asesoria => asesoria.submitted);\n    }\n  },\n  methods: {\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/student');\n          break;\n        case 1:\n          this.$router.push('/student/asesorias');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    },\n    async submitFiles() {\n      for (let i = 0; i < this.asesorias.length; i++) {\n        if (!this.asesorias[i].submitted) {\n          for (let j = 0; j < this.asesorias[i].files.length; j++) {\n            if (this.asesorias[i].files[j]) {\n              await this.submitFile(i, j);\n            }\n          }\n        }\n      }\n    },\n    async submitFile(index, fileIndex) {\n      const asesoria = this.asesorias[index];\n      const file = asesoria.files[fileIndex];\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n          const response = await axios.post(\n            'http://localhost:3000/upload',\n            formData,\n            {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }\n          );\n\n          if (response.status === 201) {\n            this.$set(this.asesorias[index].files, fileIndex, { ...file, submitted: true });\n            console.log(`File for Asesoría ${index + 1}, File ${fileIndex + 1} uploaded successfully!`);\n          } else {\n            console.error(`Failed to upload file for Asesoría ${index + 1}, File ${fileIndex + 1}.`);\n          }\n        } catch (error) {\n          console.error(`Error uploading file for Asesoría ${index + 1}, File ${fileIndex + 1}:`, error);\n        }\n      }\n    },\n    async fetchAsesorias() {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/users/${this.userId}`\n        );\n        const userData = response.data;\n        this.numberOfAsesorias = userData.asesorias; // Set numberOfAsesorias to the value fetched from the backend\n        this.asesorias = []; // Clear the asesorías array\n        for (let i = 0; i < this.numberOfAsesorias; i++) {\n          const asesoria = {\n            files: Array.from({ length: userData.asesorias[i]?.files?.length || 1 }, () => null),\n            submitted: userData.asesorias[i]?.submitted || false\n          };\n          this.asesorias.push(asesoria); // Initialize the asesorías array based on the fetched value\n        }\n      } catch (error) {\n        console.error('Error fetching asesorías:', error);\n      }\n    },\n    addFileInput(index) {\n      if (this.asesorias[index].files.length < this.numberOfAsesorias) {\n        this.asesorias[index].files.push(null);\n      }\n    },\n    validateFile(index, fileIndex) {\n      const file = this.asesorias[index].files[fileIndex];\n      if (file && file.type !== 'application/pdf') {\n        this.$set(this.asesorias[index].files, fileIndex, null);\n        alert('Only PDF files are allowed!');\n      }\n    }\n  },\n  mounted() {\n    this.fetchAsesorias();\n  }\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}