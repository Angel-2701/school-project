{"ast":null,"code":"export default {\n  name: 'FilesDialog',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      default: 'Documentos'\n    }\n  },\n  data() {\n    return {\n      seguimientoLabels: {\n        seguimiento1: 'Seguimiento 1',\n        seguimiento2: 'Seguimiento 2',\n        seguimiento3: 'Seguimiento 3'\n        // Add more seguimiento keys and their labels as needed\n      },\n      seguimientos: [],\n      asesorias: [],\n      archivos: {},\n      archivosDetails: {}\n    };\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.isOpen;\n      },\n      set(value) {\n        this.$emit('update:isOpen', value);\n      }\n    }\n  },\n  watch: {\n    dialogVisible(newVal) {\n      if (newVal) {\n        this.loadFiles();\n      }\n    }\n  },\n  methods: {\n    async loadFiles() {\n      await this.loadSeguimientos();\n      await this.loadAsesorias();\n      await this.loadArchivos();\n    },\n    async loadSeguimientos() {\n      const seguimientoIds = [this.student.seguimiento1, this.student.seguimiento2, this.student.seguimiento3].filter(Boolean);\n      this.seguimientos = await this.fetchFiles('uploads', seguimientoIds);\n    },\n    async loadAsesorias() {\n      const asesoriaIds = this.student.archivosAsesorias || [];\n      this.asesorias = asesoriaIds.length > 0 ? await this.fetchFiles('asesoria', asesoriaIds) : [];\n    },\n    async loadArchivos() {\n      const archivos = this.student.archivos || {};\n      const archivoIds = Object.values(archivos);\n      this.archivos = archivos;\n      const fetchedFiles = await this.fetchFiles('archivo', archivoIds);\n      const archivosDetails = {};\n      fetchedFiles.forEach(file => {\n        archivosDetails[file._id] = file;\n      });\n      this.archivosDetails = archivosDetails;\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    },\n    async fetchFiles(collection, fileIds) {\n      try {\n        const files = await Promise.all(fileIds.map(async fileId => {\n          const response = await fetch(`http://localhost:3000/files/${collection}/${fileId}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch file with ID ${fileId}`);\n          }\n          const fileData = await response.json();\n          return {\n            _id: fileId,\n            filename: fileData.filename,\n            data: fileData.data\n          };\n        }));\n        return files;\n      } catch (error) {\n        console.error('Error fetching files:', error);\n        return [];\n      }\n    },\n    getArchivoData(fileId) {\n      const file = this.archivosDetails[fileId];\n      return file ? file.data : '';\n    }\n  }\n};","map":{"version":3,"names":["name","props","isOpen","type","Boolean","required","student","Object","title","String","default","data","seguimientoLabels","seguimiento1","seguimiento2","seguimiento3","seguimientos","asesorias","archivos","archivosDetails","computed","dialogVisible","get","set","value","$emit","watch","newVal","loadFiles","methods","loadSeguimientos","loadAsesorias","loadArchivos","seguimientoIds","filter","fetchFiles","asesoriaIds","archivosAsesorias","length","archivoIds","values","fetchedFiles","forEach","file","_id","closeDialog","collection","fileIds","files","Promise","all","map","fileId","response","fetch","ok","Error","fileData","json","filename","error","console","getArchivoData"],"sources":["/Users/angel/school-project/my-app/src/components/FilesDialog.vue"],"sourcesContent":["<template>\n  <v-dialog v-model=\"dialogVisible\" max-width=\"600\">\n    <v-card>\n      <v-card-title>\n        <span class=\"headline\">{{ title }}</span>\n        <v-spacer></v-spacer>\n      </v-card-title>\n      <v-card-text>\n        <div class=\"grid-container\">\n          <div class=\"grid-item\">\n            <div v-if=\"seguimientos.length > 0\">\n              <h3>Seguimientos</h3>\n              <v-list>\n                <v-list-item\n                  v-for=\"(seguimiento, key) in seguimientos\"\n                  :key=\"seguimiento._id\"\n                >\n                  <v-list-item-icon>\n                    <v-icon>mdi-file-pdf</v-icon>\n                  </v-list-item-icon>\n                  <v-list-item-content>\n                    <v-list-item-title>\n                      <!-- Display the corresponding label for seguimiento -->\n                      {{\n                        seguimientoLabels[key] || `Seguimiento ${key.slice(-1)}`\n                      }}\n                    </v-list-item-title>\n                    <v-list-item-title>{{\n                      seguimiento.filename\n                    }}</v-list-item-title>\n                  </v-list-item-content>\n                  <v-list-item-action>\n                    <v-btn\n                      :href=\"\n                        'data:application/octet-stream;base64,' +\n                        seguimiento.data\n                      \"\n                      :download=\"seguimiento.filename\"\n                      color=\"blue darken-2\"\n                      block\n                      small\n                    >\n                      Descargar\n                    </v-btn>\n                  </v-list-item-action>\n                </v-list-item>\n              </v-list>\n            </div>\n            <div v-else>\n              <h3>No hay seguimientos</h3>\n            </div>\n          </div>\n\n          <div class=\"grid-item\">\n            <div v-if=\"asesorias.length > 0\">\n              <h3>Asesorias</h3>\n              <v-list>\n                <v-list-item v-for=\"asesoria in asesorias\" :key=\"asesoria._id\">\n                  <v-list-item-icon>\n                    <v-icon>mdi-file-pdf</v-icon>\n                  </v-list-item-icon>\n                  <v-list-item-content>\n                    <v-list-item-title>{{\n                      asesoria.filename\n                    }}</v-list-item-title>\n                  </v-list-item-content>\n                  <v-list-item-action>\n                    <v-btn\n                      :href=\"\n                        'data:application/octet-stream;base64,' + asesoria.data\n                      \"\n                      :download=\"asesoria.filename\"\n                      color=\"blue darken-2\"\n                      block\n                      small\n                    >\n                      Descargar\n                    </v-btn>\n                  </v-list-item-action>\n                </v-list-item>\n              </v-list>\n            </div>\n            <div v-else>\n              <h3>No hay asesor√≠as</h3>\n            </div>\n          </div>\n\n          <div class=\"grid-item\">\n            <div v-if=\"Object.keys(archivos).length > 0\">\n              <h3>Archivos</h3>\n              <v-list>\n                <v-list-item\n                  v-for=\"(fileId, fileName) in archivos\"\n                  :key=\"fileId\"\n                >\n                  <v-list-item-icon>\n                    <v-icon>mdi-file-pdf</v-icon>\n                  </v-list-item-icon>\n                  <v-list-item-content>\n                    <v-list-item-title>{{ fileName }}</v-list-item-title>\n                    <v-list-item-title v-if=\"archivosDetails[fileId]\">{{\n                      archivosDetails[fileId].filename\n                    }}</v-list-item-title>\n                  </v-list-item-content>\n                  <v-list-item-action>\n                    <v-btn\n                      :href=\"\n                        'data:application/octet-stream;base64,' +\n                        getArchivoData(fileId)\n                      \"\n                      :download=\"\n                        archivosDetails[fileId]\n                          ? archivosDetails[fileId].filename\n                          : ''\n                      \"\n                      color=\"blue darken-2\"\n                      block\n                      small\n                    >\n                      Descargar\n                    </v-btn>\n                  </v-list-item-action>\n                </v-list-item>\n              </v-list>\n            </div>\n            <div v-else>\n              <h3>No hay archivos</h3>\n            </div>\n          </div>\n        </div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"blue darken-2\" text @click=\"closeDialog\">Cerrar</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: 'FilesDialog',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      default: 'Documentos'\n    }\n  },\n  data () {\n    return {\n      seguimientoLabels: {\n        seguimiento1: 'Seguimiento 1',\n        seguimiento2: 'Seguimiento 2',\n        seguimiento3: 'Seguimiento 3'\n        // Add more seguimiento keys and their labels as needed\n      },\n      seguimientos: [],\n      asesorias: [],\n      archivos: {},\n      archivosDetails: {}\n    }\n  },\n  computed: {\n    dialogVisible: {\n      get () {\n        return this.isOpen\n      },\n      set (value) {\n        this.$emit('update:isOpen', value)\n      }\n    }\n  },\n  watch: {\n    dialogVisible (newVal) {\n      if (newVal) {\n        this.loadFiles()\n      }\n    }\n  },\n  methods: {\n    async loadFiles () {\n      await this.loadSeguimientos()\n      await this.loadAsesorias()\n      await this.loadArchivos()\n    },\n    async loadSeguimientos () {\n      const seguimientoIds = [\n        this.student.seguimiento1,\n        this.student.seguimiento2,\n        this.student.seguimiento3\n      ].filter(Boolean)\n      this.seguimientos = await this.fetchFiles('uploads', seguimientoIds)\n    },\n    async loadAsesorias () {\n      const asesoriaIds = this.student.archivosAsesorias || []\n      this.asesorias =\n        asesoriaIds.length > 0\n          ? await this.fetchFiles('asesoria', asesoriaIds)\n          : []\n    },\n    async loadArchivos () {\n      const archivos = this.student.archivos || {}\n      const archivoIds = Object.values(archivos)\n      this.archivos = archivos\n      const fetchedFiles = await this.fetchFiles('archivo', archivoIds)\n      const archivosDetails = {}\n      fetchedFiles.forEach((file) => {\n        archivosDetails[file._id] = file\n      })\n      this.archivosDetails = archivosDetails\n    },\n\n    closeDialog () {\n      this.dialogVisible = false\n    },\n    async fetchFiles (collection, fileIds) {\n      try {\n        const files = await Promise.all(\n          fileIds.map(async (fileId) => {\n            const response = await fetch(\n              `http://localhost:3000/files/${collection}/${fileId}`\n            )\n            if (!response.ok) {\n              throw new Error(`Failed to fetch file with ID ${fileId}`)\n            }\n            const fileData = await response.json()\n            return {\n              _id: fileId,\n              filename: fileData.filename,\n              data: fileData.data\n            }\n          })\n        )\n        return files\n      } catch (error) {\n        console.error('Error fetching files:', error)\n        return []\n      }\n    },\n    getArchivoData (fileId) {\n      const file = this.archivosDetails[fileId]\n      return file ? file.data : ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.headline {\n  font-weight: bold;\n}\n.v-list-item-title {\n  cursor: pointer;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n}\n\n.grid-item {\n  /* Optional: Adjust styling for each grid item */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}