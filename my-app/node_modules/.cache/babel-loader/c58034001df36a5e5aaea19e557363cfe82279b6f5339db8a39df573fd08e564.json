{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4fa328f7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"ID\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Nombre\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Apellido Paterno\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Apellido Materno\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Carrera\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Proyecto\")), /*#__PURE__*/_createElementVNode(\"th\", null, /*#__PURE__*/_toDisplayString(\"Calificación Final\")), /*#__PURE__*/_createCommentVNode(\" Exclude numeroTelefonico from the headers \")], -1 /* HOISTED */));\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  const _component_v_list_item_action = _resolveComponent(\"v-list-item-action\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item_content = _resolveComponent(\"v-list-item-content\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_FilesDialog = _resolveComponent(\"FilesDialog\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_container, {\n      fluid: \"\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" Top Bar \"), _createVNode(_component_v_app_bar, {\n        app: \"\",\n        color: \"blue darken-2\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" Burger menu icon \"), _createVNode(_component_v_btn, {\n          icon: \"\",\n          onClick: _cache[0] || (_cache[0] = $event => $data.drawer = !$data.drawer)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-menu\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" Title \"), _createVNode(_component_v_toolbar_title, null, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.userName), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_spacer), _createCommentVNode(\" Logout button \"), _createVNode(_component_v_btn, {\n          icon: \"\",\n          onClick: $options.logout\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n            default: _withCtx(() => [_createTextVNode(\"mdi-logout\")]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" Sidebar \"), _createVNode(_component_v_navigation_drawer, {\n        app: \"\",\n        modelValue: $data.drawer,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.drawer = $event),\n        color: \"blue darken-2\",\n        dark: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_list, {\n          dense: \"\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sidebarItems, (item, index) => {\n            return _openBlock(), _createBlock(_component_v_list_item, {\n              key: index,\n              onClick: $event => $options.navigate(index)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_list_item_action, null, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.icon), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_list_item_content, null, {\n                default: _withCtx(() => [_createVNode(_component_v_list_item_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_main, null, {\n        default: _withCtx(() => [_createCommentVNode(\" Main content \"), _createVNode(_component_v_col, {\n          cols: \"12\",\n          style: {\n            \"max-width\": \"1500px\",\n            \"margin\": \"0px auto\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            class: \"text-center\",\n            style: {\n              \"width\": \"100%\",\n              \"margin\": \"0px auto\"\n            }\n          }, {\n            text: _withCtx(() => [_createVNode(_component_v_text_field, {\n              modelValue: $data.search,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.search = $event),\n              label: \"Buscar\",\n              \"prepend-inner-icon\": \"mdi-magnify\",\n              variant: \"outlined\",\n              \"hide-details\": \"\",\n              \"single-line\": \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            default: _withCtx(() => [_createVNode(_component_v_data_table, {\n              items: $data.studentsTable,\n              align: \"center\",\n              search: $data.search,\n              \"items-per-page-text\": \"Elementos por página\",\n              pageText: \"\"\n            }, {\n              top: _withCtx(() => [_createVNode(_component_v_toolbar, {\n                flat: \"\",\n                color: \"blue darken-2\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\"Alumnos\")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_divider, {\n                  class: \"mx-4\",\n                  inset: \"\",\n                  vertical: \"\"\n                }), _createVNode(_component_v_spacer), _createCommentVNode(\" Button to download data as Excel \"), _createVNode(_component_v_btn, {\n                  onClick: $options.downloadAsExcel\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"Download as Excel\")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n                  icon: \"\",\n                  color: \"blue darken-2\",\n                  onClick: $options.openCreateDialog\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n                    default: _withCtx(() => [_createTextVNode(\"mdi-plus\")]),\n                    _: 1 /* STABLE */\n                  })]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              })]),\n              headers: _withCtx(() => [_hoisted_1]),\n              item: _withCtx(({\n                item\n              }) => [_createElementVNode(\"tr\", {\n                onClick: $event => $options.handleRowClick(item),\n                class: \"clickable-row\"\n              }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item, (value, key) => {\n                return _openBlock(), _createElementBlock(\"td\", {\n                  key: key\n                }, [_createCommentVNode(\" Render project name instead of ID \"), key === 'project' ? (_openBlock(), _createElementBlock(_Fragment, {\n                  key: 0\n                }, [_createTextVNode(_toDisplayString($options.getProjectName(item[key])), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n                  key: 1\n                }, [_createTextVNode(_toDisplayString(value), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))]);\n              }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                small: \"\",\n                color: \"blue darken-2\",\n                onClick: $event => $options.openFilesDialog(item, $event)\n              }, {\n                default: _withCtx(() => [_createTextVNode(\" Documentos \")]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]), _createElementVNode(\"td\", null, [_createVNode(_component_v_btn, {\n                icon: \"\",\n                small: \"\",\n                color: \"blue darken-2\",\n                onClick: $event => $options.editUser(item, $event),\n                style: {\n                  \"width\": \"30px\",\n                  \"height\": \"30px\",\n                  \"margin-right\": \"5px\"\n                }\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, {\n                  style: {\n                    \"font-size\": \"18px\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"mdi-pencil\")]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n                icon: \"\",\n                small: \"\",\n                color: \"red darken-2\",\n                onClick: $event => $options.deleteUser(item._id, $event),\n                style: {\n                  \"width\": \"30px\",\n                  \"height\": \"30px\",\n                  \"margin-right\": \"5px\"\n                }\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_icon, {\n                  style: {\n                    \"font-size\": \"18px\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"mdi-delete\")]),\n                  _: 1 /* STABLE */\n                })]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])], 8 /* PROPS */, _hoisted_2)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"items\", \"search\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" Edit Dialog \"), _createVNode(_component_v_dialog, {\n        modelValue: $data.editDialog,\n        \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.editDialog = $event),\n        \"max-width\": \"500\",\n        ref: \"editDialogForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(\"Editar Alumno\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_text_field, {\n              modelValue: $data.student.nombre,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.student.nombre = $event),\n              label: \"Nombre\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.apellido,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.student.apellido = $event),\n              label: \"Apellido Paterno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Paterno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.apellidoM,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.student.apellidoM = $event),\n              label: \"Apellido Materno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Materno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.correo,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.student.correo = $event),\n              label: \"Correo electrónico\",\n              required: \"\",\n              rules: [v => !!v || 'Correo requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser válido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n              modelValue: $data.student.proyecto,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.student.proyecto = $event),\n              items: $data.projects.map(project => project.nombre),\n              label: \"Selecciona Proyecto\",\n              required: \"\",\n              rules: [v => !!v || 'Proyecto requerido'],\n              onChange: _cache[8] || (_cache[8] = $event => $options.updateEmpresaField($event))\n            }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.carrera,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.student.carrera = $event),\n              label: \"Carrera\",\n              required: \"\",\n              rules: [v => !!v || 'Carrera requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.numeroTelefonico,\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.student.numeroTelefonico = $event),\n              label: \"Número telefónico \",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'Número telefónico requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.empresa,\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.student.empresa = $event),\n              label: \"Empresa\",\n              readonly: \"\",\n              required: \"\",\n              rules: [v => !!v || 'Empresa requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.periodo,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.student.periodo = $event),\n              label: \"Periodo\",\n              required: \"\",\n              rules: [v => !!v || 'Periodo requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.nombre,\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.student.asesorExterno.nombre = $event),\n              label: \"Nombre Asesor externo\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Nombre del Asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.correo,\n              \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.student.asesorExterno.correo = $event),\n              label: \"Correo Asesor externo\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Correo del asesor requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser válido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.telefono,\n              \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.student.asesorExterno.telefono = $event),\n              label: \"Número telefónico asesor externo\",\n              type: \"number\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Número telefónico del asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add more fields as needed \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              color: \"blue darken-2\",\n              onClick: $options.saveEditedStudent,\n              disabled: !$options.isEditFormValid\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Guardar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_v_btn, {\n              onClick: $options.cancelEdit\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Cancelar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" Create Dialog \"), _createVNode(_component_v_dialog, {\n        modelValue: $data.createDialog,\n        \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => $data.createDialog = $event),\n        \"max-width\": \"500\",\n        ref: \"createDialogForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, null, {\n          default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(\"Crear Nuevo Alumno\")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createCommentVNode(\" <v-text-field v-model=\\\"newStudent._id\\\" label=\\\"ID\\\"></v-text-field> Remove this line \"), _createVNode(_component_v_text_field, {\n              modelValue: $data.student._id,\n              \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.student._id = $event),\n              label: \"ID\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => {\n                console.log('ID value:', v);\n                return !!v || 'ID requerido';\n              }, v => {\n                const isValid = /^[0-9]+$/.test(v);\n                console.log('Is ID valid?', isValid);\n                return isValid || 'ID debe contener solo números';\n              }]\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.nombre,\n              \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.student.nombre = $event),\n              label: \"Nombre\",\n              required: \"\",\n              rules: [v => !!v || 'Nombre requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.apellido,\n              \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $data.student.apellido = $event),\n              label: \"Apellido Paterno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Paterno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.apellidoM,\n              \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.student.apellidoM = $event),\n              label: \"Apellido Materno\",\n              required: \"\",\n              rules: [v => !!v || 'Apellido Materno requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.correo,\n              \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.student.correo = $event),\n              label: \"Correo Electrónico\",\n              required: \"\",\n              rules: [v => !!v || 'Correo requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser válido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.contraseña,\n              \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $data.student.contraseña = $event),\n              label: \"Contraseña\",\n              type: \"password\",\n              required: \"\",\n              rules: [v => !!v || 'Contraseña requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add dropdown menu for projects \"), _createVNode(_component_v_select, {\n              modelValue: $data.student.proyecto,\n              \"onUpdate:modelValue\": [_cache[23] || (_cache[23] = $event => $data.student.proyecto = $event), $options.updateEmpresaField],\n              items: $data.projects.map(project => project.nombre),\n              label: \"Selecciona proyecto\",\n              required: \"\",\n              rules: [v => !!v || 'Proyecto requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.carrera,\n              \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.student.carrera = $event),\n              label: \"Carrera\",\n              required: \"\",\n              rules: [v => !!v || 'Carrera requerida']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.numeroTelefonico,\n              \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => $data.student.numeroTelefonico = $event),\n              label: \"Número telefónico\",\n              type: \"number\",\n              required: \"\",\n              rules: [v => !!v || 'Número telefónico requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.empresa,\n              \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => $data.student.empresa = $event),\n              label: \"Empresa\",\n              required: \"\",\n              rules: [v => !!v || 'Empresa requerida'],\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.periodo,\n              \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => $data.student.periodo = $event),\n              label: \"Periodo\",\n              required: \"\",\n              rules: [v => !!v || 'Periodo requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.nombre,\n              \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => $data.student.asesorExterno.nombre = $event),\n              label: \"Nombre Asesor externo\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Nombre del Asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.correo,\n              \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => $data.student.asesorExterno.correo = $event),\n              label: \"Correo Asesor externo\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Correo del asesor requerido', v => /.+@.+\\..+/.test(v) || 'Correo debe ser válido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n              modelValue: $data.student.asesorExterno.telefono,\n              \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => $data.student.asesorExterno.telefono = $event),\n              label: \"Número telefónico de asesor externo\",\n              type: \"number\",\n              required: \"\",\n              readonly: \"\",\n              rules: [v => !!v || 'Número telefónico de asesor requerido']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createCommentVNode(\" Add more fields as needed \")]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              color: \"blue darken-2\",\n              disabled: !$options.isCreateFormValid,\n              onClick: $options.saveNewStudent\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Guardar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n              onClick: $options.cancelCreate\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Cancelar\")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_FilesDialog, {\n        isOpen: $data.showFilesDialog,\n        student: $data.selectedStudent,\n        \"onUpdate:isOpen\": _cache[32] || (_cache[32] = $event => $data.showFilesDialog = $event)\n      }, null, 8 /* PROPS */, [\"isOpen\", \"student\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","_createCommentVNode","_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_container","fluid","_component_v_app_bar","app","color","dark","_component_v_btn","icon","onClick","_cache","$event","$data","drawer","_component_v_icon","_createTextVNode","_","_component_v_toolbar_title","userName","_component_v_spacer","$options","logout","_component_v_navigation_drawer","modelValue","_component_v_list","dense","_createElementBlock","_Fragment","_renderList","sidebarItems","item","index","_component_v_list_item","key","navigate","_component_v_list_item_action","_component_v_list_item_content","_component_v_list_item_title","title","_component_v_main","_component_v_col","cols","style","_component_v_card","class","text","_component_v_text_field","search","label","variant","_component_v_data_table","items","studentsTable","align","pageText","top","_component_v_toolbar","flat","_component_v_divider","inset","vertical","downloadAsExcel","openCreateDialog","headers","_hoisted_1","handleRowClick","value","getProjectName","small","openFilesDialog","editUser","deleteUser","_id","_hoisted_2","_component_v_dialog","editDialog","ref","_component_v_card_title","_component_v_card_text","student","nombre","required","rules","v","apellido","apellidoM","correo","test","_component_v_select","proyecto","projects","map","project","onChange","updateEmpresaField","carrera","numeroTelefonico","type","empresa","readonly","periodo","asesorExterno","telefono","_component_v_card_actions","saveEditedStudent","disabled","isEditFormValid","cancelEdit","createDialog","console","log","isValid","contraseña","isCreateFormValid","saveNewStudent","cancelCreate","_component_FilesDialog","isOpen","showFilesDialog","selectedStudent"],"sources":["/Users/angel/school-project/my-app/src/components/StudentsPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n          <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n            <template v-slot:text>\n              <v-text-field\n                v-model=\"search\"\n                label=\"Buscar\"\n                prepend-inner-icon=\"mdi-magnify\"\n                variant=\"outlined\"\n                hide-details\n                single-line\n              ></v-text-field>\n            </template>\n            <!-- Students Data -->\n            <v-data-table\n              :items=\"studentsTable\"\n              align=\"center\"\n              :search=\"search\"\n              items-per-page-text=\"Elementos por página\"\n              pageText=\"\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Alumnos</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <!-- Button to download data as Excel -->\n                  <v-btn @click=\"downloadAsExcel\">Download as Excel</v-btn>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:headers>\n                <tr>\n                  <th>{{ \"ID\" }}</th>\n                  <th>{{ \"Nombre\" }}</th>\n                  <th>{{ \"Apellido Paterno\" }}</th>\n                  <th>{{ \"Apellido Materno\" }}</th>\n                  <th>{{ \"Carrera\" }}</th>\n                  <th>{{ \"Proyecto\" }}</th>\n                  <th>{{ \"Calificación Final\" }}</th>\n                  <!-- Exclude numeroTelefonico from the headers -->\n                </tr>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    <!-- Render project name instead of ID -->\n                    <template v-if=\"key === 'project'\">\n                      {{ getProjectName(item[key]) }}\n                    </template>\n                    <template v-else>\n                      {{ value }}\n                    </template>\n                  </td>\n                  <td>\n                    <v-btn\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"openFilesDialog(item, $event)\"\n                    >\n                      Documentos\n                    </v-btn>\n                  </td>\n                  <td>\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editUser(item, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteUser(item._id, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\" ref=\"editDialogForm\">\n        <v-card>\n          <v-card-title>Editar Alumno</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"student.nombre\"\n              label=\"Nombre\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellido\"\n              label=\"Apellido Paterno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Paterno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellidoM\"\n              label=\"Apellido Materno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Materno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.correo\"\n              label=\"Correo electrónico\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-select\n              v-model=\"student.proyecto\"\n              :items=\"projects.map((project) => project.nombre)\"\n              label=\"Selecciona Proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Proyecto requerido']\"\n              @change=\"updateEmpresaField($event)\"\n            ></v-select>\n            <v-text-field\n              v-model=\"student.carrera\"\n              label=\"Carrera\"\n              required\n              :rules=\"[(v) => !!v || 'Carrera requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.numeroTelefonico\"\n              label=\"Número telefónico \"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'Número telefónico requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.empresa\"\n              label=\"Empresa\"\n              readonly\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.periodo\"\n              label=\"Periodo\"\n              required\n              :rules=\"[(v) => !!v || 'Periodo requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              readonly\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              readonly\n              :rules=\"[\n                (v) => !!v || 'Correo del asesor requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.telefono\"\n              label=\"Número telefónico asesor externo\"\n              type=\"number\"\n              required\n              readonly\n              :rules=\"[(v) => !!v || 'Número telefónico del asesor requerido']\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              @click=\"saveEditedStudent\"\n              :disabled=\"!isEditFormValid\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelEdit\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\" ref=\"createDialogForm\">\n        <v-card>\n          <v-card-title>Crear Nuevo Alumno</v-card-title>\n          <v-card-text>\n            <!-- <v-text-field v-model=\"newStudent._id\" label=\"ID\"></v-text-field> Remove this line -->\n            <v-text-field\n              v-model=\"student._id\"\n              label=\"ID\"\n              type=\"number\"\n              required\n              :rules=\"[\n                (v) => {\n                  console.log('ID value:', v);\n                  return !!v || 'ID requerido';\n                },\n                (v) => {\n                  const isValid = /^[0-9]+$/.test(v);\n                  console.log('Is ID valid?', isValid);\n                  return isValid || 'ID debe contener solo números';\n                },\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.nombre\"\n              label=\"Nombre\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellido\"\n              label=\"Apellido Paterno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Paterno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.apellidoM\"\n              label=\"Apellido Materno\"\n              required\n              :rules=\"[(v) => !!v || 'Apellido Materno requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.correo\"\n              label=\"Correo Electrónico\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.contraseña\"\n              label=\"Contraseña\"\n              type=\"password\"\n              required\n              :rules=\"[(v) => !!v || 'Contraseña requerida']\"\n            ></v-text-field>\n            <!-- Add dropdown menu for projects -->\n            <v-select\n              v-model=\"student.proyecto\"\n              :items=\"projects.map((project) => project.nombre)\"\n              label=\"Selecciona proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Proyecto requerido']\"\n              @update:modelValue=\"updateEmpresaField\"\n            ></v-select>\n            <v-text-field\n              v-model=\"student.carrera\"\n              label=\"Carrera\"\n              required\n              :rules=\"[(v) => !!v || 'Carrera requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.numeroTelefonico\"\n              label=\"Número telefónico\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'Número telefónico requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.empresa\"\n              label=\"Empresa\"\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n              readonly\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.periodo\"\n              label=\"Periodo\"\n              required\n              :rules=\"[(v) => !!v || 'Periodo requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              readonly\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              readonly\n              :rules=\"[\n                (v) => !!v || 'Correo del asesor requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"student.asesorExterno.telefono\"\n              label=\"Número telefónico de asesor externo\"\n              type=\"number\"\n              required\n              readonly\n              :rules=\"[(v) => !!v || 'Número telefónico de asesor requerido']\"\n            ></v-text-field>\n\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              :disabled=\"!isCreateFormValid\"\n              @click=\"saveNewStudent\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelCreate\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <FilesDialog\n        :isOpen=\"showFilesDialog\"\n        :student=\"selectedStudent\"\n        @update:isOpen=\"showFilesDialog = $event\"\n      />\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport FilesDialog from './FilesDialog.vue'\nimport * as XLSX from 'xlsx' // Import XLSX library\n\nexport default {\n  components: {\n    FilesDialog\n  },\n  data () {\n    return {\n      excelFileName: 'alumnos.xlsx',\n      selectedStudent: null,\n      showFilesDialog: false,\n      studentsTable: [],\n      students: [],\n      projects: [],\n      projectMenu: false, // Control for project dropdown menu\n      sidebarItems: [\n        { title: 'Proyectos', icon: 'mdi-folder-outline' },\n        { title: 'Alumnos', icon: 'mdi-account-plus-outline' },\n        { title: 'Maestros', icon: 'mdi-account-tie' }\n      ],\n      userName: localStorage.getItem('userName'),\n      drawer: false,\n      editDialog: false,\n      student: {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        apellidoM: '',\n        correo: '',\n        project: '',\n        carrera: '',\n        numeroTelefonico: '',\n        empresa: '',\n        periodo: '',\n        asesorExterno: {\n          nombre: '',\n          telefono: '',\n          correo: ''\n        }\n        // Add more fields as needed\n      },\n      createDialog: false,\n      search: ''\n    }\n  },\n  computed: {\n    isCreateFormValid () {\n      // Check if the form reference exists\n      if (!this.$refs.createDialogForm) {\n        return false\n      }\n\n      // Manually validate each field\n      return (\n        this.student._id &&\n        this.student.nombre &&\n        this.student.apellido &&\n        this.student.apellidoM &&\n        this.student.correo &&\n        this.student.contraseña &&\n        this.student.proyecto &&\n        this.student.carrera &&\n        this.student.numeroTelefonico &&\n        this.student.empresa &&\n        this.student.periodo &&\n        this.student.asesorExterno.nombre &&\n        this.student.asesorExterno.correo &&\n        this.student.asesorExterno.telefono\n      )\n    },\n    isEditFormValid () {\n      // Check if the form reference exists\n      if (!this.$refs.editDialogForm) {\n        return false\n      }\n\n      // Manually validate each field\n      return (\n        this.student.nombre &&\n        this.student.apellido &&\n        this.student.apellidoM &&\n        this.student.proyecto &&\n        this.student.carrera &&\n        this.student.numeroTelefonico &&\n        this.student.empresa &&\n        this.student.periodo &&\n        this.student.asesorExterno.nombre &&\n        this.student.asesorExterno.correo &&\n        this.student.asesorExterno.telefono\n      )\n    }\n  },\n\n  methods: {\n    downloadAsExcel () {\n      // Filter the students data based on the search term\n      const filteredStudents = this.studentsTable.filter((student) =>\n        Object.values(student).some((value) =>\n          String(value).toLowerCase().includes(this.search.toLowerCase())\n        )\n      )\n      const excelData = filteredStudents.map(\n        ({ carrera, promedio, ...rest }) => ({\n          ...rest,\n          calificacion1: rest.calificacion1 || '',\n          calificacion2: rest.calificacion2 || '',\n          calificacion3: rest.calificacion3 || '',\n          promedio\n        })\n      )\n\n      const ws = XLSX.utils.json_to_sheet(excelData) // Convert data to worksheet\n      const wb = XLSX.utils.book_new() // Create a new workbook\n      XLSX.utils.book_append_sheet(wb, ws, 'Alumnos') // Add the worksheet to the workbook\n      XLSX.writeFile(wb, this.excelFileName) // Save the workbook as Excel file with the specified name\n    },\n    updateEmpresaField (selectedProjectName) {\n      const selectedProject = this.projects.find(\n        (project) => project.nombre === selectedProjectName\n      )\n      if (selectedProject) {\n        this.student.empresa = selectedProject.empresa || '' // Assuming the project object has an 'empresa' field\n\n        const { nombre = '', correo, telefono } = selectedProject.asesorExterno\n        this.student.asesorExterno = { nombre, correo, telefono }\n      }\n    },\n    resetStudent () {\n      this.student = {\n        _id: '',\n        nombre: '',\n        apellido: '',\n        apellidoM: '',\n        correo: '',\n        project: '',\n        carrera: '',\n        numeroTelefonico: '',\n        empresa: '',\n        periodo: '',\n        asesorExterno: {\n          nombre: '',\n          telefono: '',\n          correo: ''\n        }\n        // Add more fields as needed\n      }\n    },\n    openFilesDialog (student, event) {\n      event.stopPropagation()\n      this.selectedStudent = this.students.find((s) => s._id === student._id)\n      this.showFilesDialog = true // Open the dialog with the student's files\n    },\n    async fetchData () {\n      try {\n        const response = await axios.get('http://localhost:3000/students')\n        this.students = response.data\n        this.studentsTable = response.data\n          .map((student) => ({\n            _id: student._id,\n            nombre: student.nombre,\n            apellidoP: student.apellido,\n            apellidoM: student.apellidoM,\n            carrera: student.carrera,\n            proyecto: student.proyecto,\n            promedio: student.promedio,\n            calificacion1: student.calificacion.calificacion1 ?? 0\n          }))\n          .reverse()\n      } catch (error) {\n        console.error('Error fetching students:', error)\n      }\n    },\n    async fetchProjects () {\n      try {\n        const response = await axios.get('http://localhost:3000/projects')\n        // Extract IDs and names from the projects data\n        this.projects = response.data.map((project) => ({\n          id: project._id,\n          nombre: project.nombre,\n          empresa: project.empresa,\n          asesorExterno: project.asesorExterno\n        }))\n      } catch (error) {\n        console.error('Error fetching projects:', error)\n      }\n    },\n\n    async navigate (index) {\n      switch (index) {\n        case 0:\n          this.$router.push('/admin')\n          break\n        case 1:\n          this.$router.push('/admin/students')\n          break\n        case 2:\n          this.$router.push('/admin/Teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem('token')\n\n      // Redirect the user to the login page\n      this.$router.push('/login')\n    },\n    editUser (student, event) {\n      event.stopPropagation() // Stop event propagation\n      // Find the student with the matching _id\n      const foundStudent = this.students.find((s) => s._id === student._id)\n      if (foundStudent) {\n        // If the student is found, copy its data to editedStudent\n        this.student = { ...foundStudent }\n        this.editDialog = true\n      } else {\n        console.error(`Student with ID ${student._id} not found.`)\n      }\n    },\n\n    async saveEditedStudent () {\n      try {\n        const selectedProject = this.projects.find(\n          (project) => project.nombre === this.student.proyecto\n        )\n        if (selectedProject) {\n          // Save the project ID to the new student data\n          this.student.proyecto = selectedProject.id\n        }\n        const response = await axios.put(\n          `http://localhost:3000/users/${this.student._id}`,\n          this.student\n        )\n        console.log('User updated successfully:', response.data)\n        this.fetchData()\n      } catch (error) {\n        console.error('Error updating user:', error)\n      }\n      this.editDialog = false\n    },\n    cancelEdit () {\n      this.editDialog = false\n    },\n    openCreateDialog () {\n      this.resetStudent()\n      this.createDialog = true\n      // Fetch projects data when opening create dialog\n      this.fetchProjects()\n    },\n    async saveNewStudent () {\n      try {\n        // Validate the form\n        if (!this.isCreateFormValid) {\n          return // Exit if the form is not valid\n        }\n        // Find the selected project object based on its name\n        const selectedProject = this.projects.find(\n          (project) => project.nombre === this.student.proyecto\n        )\n        if (selectedProject) {\n          // Save the project ID to the new student data\n          this.student.proyecto = selectedProject.id\n        }\n\n        const response = await axios.post(\n          'http://localhost:3000/register',\n          this.student\n        )\n        if (response.status === 201) {\n          console.log('Student created successfully:', response.data)\n          this.fetchData()\n        } else {\n          console.error('Failed to create student:', response.data)\n        }\n      } catch (error) {\n        if (error.response) {\n          // Display an error message to the user if the email already exists\n          alert(error.response.data.error)\n        }\n      }\n      this.createDialog = false\n    },\n\n    cancelCreate () {\n      this.createDialog = false\n    },\n    async deleteUser (userId, event) {\n      event.stopPropagation() // Stop event propagation\n      if (confirm('¿Estás seguro que deseas borrar este alumno?')) {\n        try {\n          const response = await axios.delete(\n            `http://localhost:3000/users/${userId}`\n          )\n          console.log('User deleted successfully:', response.data)\n          this.fetchData() // Call a method to update the UI or fetch updated data\n        } catch (error) {\n          console.error('Error deleting user:', error)\n        }\n      }\n    },\n\n    selectProject (project) {\n      this.student.proyecto = project.nombre // Set the selected project name\n      this.projectMenu = false // Close the dropdown menu\n    },\n    handleRowClick (item) {\n      // Handle row click event here\n      console.log('Row clicked:', item)\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: 'UserDetails',\n        params: { userId: item._id }\n      })\n    },\n    getProjectName (projectId) {\n      const project = this.projects.find((project) => project.id === projectId)\n      return project ? project.nombre : ''\n    }\n  },\n  mounted () {\n    this.fetchData()\n    this.fetchProjects()\n  }\n}\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":";;gEAuEgBA,mBAAA,CASK,a,aARHA,mBAAA,CAAmB,yBAAAC,gBAAA,CAAZ,IAAI,I,aACXD,mBAAA,CAAuB,yBAAAC,gBAAA,CAAhB,QAAQ,I,aACfD,mBAAA,CAAiC,yBAAAC,gBAAA,CAA1B,kBAAkB,I,aACzBD,mBAAA,CAAiC,yBAAAC,gBAAA,CAA1B,kBAAkB,I,aACzBD,mBAAA,CAAwB,yBAAAC,gBAAA,CAAjB,SAAS,I,aAChBD,mBAAA,CAAyB,yBAAAC,gBAAA,CAAlB,UAAU,I,aACjBD,mBAAA,CAAmC,yBAAAC,gBAAA,CAA5B,oBAAoB,I,aAC3BC,mBAAA,+CAAkD,C;mBA/EpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBACEC,YAAA,CAmXQC,gBAAA;IApXVC,OAAA,EAAAC,QAAA,CAEI,MAiXc,CAjXdC,YAAA,CAiXcC,sBAAA;MAjXDC,KAAK,EAAL;IAAK;MAFtBJ,OAAA,EAAAC,QAAA,CAGM,MAAgB,CAAhBJ,mBAAA,aAAgB,EAChBK,YAAA,CAYYG,oBAAA;QAZDC,GAAG,EAAH,EAAG;QAACC,KAAK,EAAC,eAAe;QAACC,IAAI,EAAJ;;QAJ3CR,OAAA,EAAAC,QAAA,CAKQ,MAAyB,CAAzBJ,mBAAA,sBAAyB,EACzBK,YAAA,CAEQO,gBAAA;UAFDC,IAAI,EAAJ,EAAI;UAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,MAAM,IAAID,KAAA,CAAAC,MAAM;;UAN5Cf,OAAA,EAAAC,QAAA,CAOU,MAAyB,CAAzBC,YAAA,CAAyBc,iBAAA;YAPnChB,OAAA,EAAAC,QAAA,CAOkB,MAAQ,CAP1BgB,gBAAA,CAOkB,UAAQ,E;YAP1BC,CAAA;;UAAAA,CAAA;YASQrB,mBAAA,WAAc,EACdK,YAAA,CAAiDiB,0BAAA;UAVzDnB,OAAA,EAAAC,QAAA,CAUyB,MAAc,CAVvCgB,gBAAA,CAAArB,gBAAA,CAU4BkB,KAAA,CAAAM,QAAQ,iB;UAVpCF,CAAA;YAWQhB,YAAA,CAAqBmB,mBAAA,GACrBxB,mBAAA,mBAAsB,EACtBK,YAAA,CAEQO,gBAAA;UAFDC,IAAI,EAAJ,EAAI;UAAEC,OAAK,EAAEW,QAAA,CAAAC;;UAb5BvB,OAAA,EAAAC,QAAA,CAcU,MAA2B,CAA3BC,YAAA,CAA2Bc,iBAAA;YAdrChB,OAAA,EAAAC,QAAA,CAckB,MAAU,CAd5BgB,gBAAA,CAckB,YAAU,E;YAd5BC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;UAkBMrB,mBAAA,aAAgB,EAChBK,YAAA,CAesBsB,8BAAA;QAfDlB,GAAG,EAAH,EAAG;QAnB9BmB,UAAA,EAmBwCX,KAAA,CAAAC,MAAM;QAnB9C,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBwCC,KAAA,CAAAC,MAAM,GAAAF,MAAA;QAAEN,KAAK,EAAC,eAAe;QAACC,IAAI,EAAJ;;QAnBtER,OAAA,EAAAC,QAAA,CAoBQ,MAaS,CAbTC,YAAA,CAaSwB,iBAAA;UAbDC,KAAK,EAAL;QAAK;UApBrB3B,OAAA,EAAAC,QAAA,CAsBY,MAAqC,E,kBADvC2B,mBAAA,CAWcC,SAAA,QAhCxBC,WAAA,CAsBoChB,KAAA,CAAAiB,YAAY,EAtBhD,CAsBoBC,IAAI,EAAEC,KAAK;iCADrBnC,YAAA,CAWcoC,sBAAA;cATXC,GAAG,EAAEF,KAAK;cACVtB,OAAK,EAAAE,MAAA,IAAES,QAAA,CAAAc,QAAQ,CAACH,KAAK;;cAxBlCjC,OAAA,EAAAC,QAAA,CA0BY,MAEqB,CAFrBC,YAAA,CAEqBmC,6BAAA;gBA5BjCrC,OAAA,EAAAC,QAAA,CA2Bc,MAAgC,CAAhCC,YAAA,CAAgCc,iBAAA;kBA3B9ChB,OAAA,EAAAC,QAAA,CA2BsB,MAAe,CA3BrCgB,gBAAA,CAAArB,gBAAA,CA2ByBoC,IAAI,CAACtB,IAAI,iB;kBA3BlCQ,CAAA;;gBAAAA,CAAA;4CA6BYhB,YAAA,CAEsBoC,8BAAA;gBA/BlCtC,OAAA,EAAAC,QAAA,CA8Bc,MAAuD,CAAvDC,YAAA,CAAuDqC,4BAAA;kBA9BrEvC,OAAA,EAAAC,QAAA,CA8BiC,MAAgB,CA9BjDgB,gBAAA,CAAArB,gBAAA,CA8BoCoC,IAAI,CAACQ,KAAK,iB;kBA9B9CtB,CAAA;;gBAAAA,CAAA;;cAAAA,CAAA;;;UAAAA,CAAA;;QAAAA,CAAA;yCAoCMhB,YAAA,CA4FSuC,iBAAA;QAhIfzC,OAAA,EAAAC,QAAA,CAqCQ,MAAqB,CAArBJ,mBAAA,kBAAqB,EACrBK,YAAA,CAyFQwC,gBAAA;UAzFDC,IAAI,EAAC,IAAI;UAACC,KAA2C,EAA3C;YAAA;YAAA;UAAA;;UAtCzB5C,OAAA,EAAAC,QAAA,CAuCU,MAuFS,CAvFTC,YAAA,CAuFS2C,iBAAA;YAvFDC,KAAK,EAAC,aAAa;YAACF,KAAqC,EAArC;cAAA;cAAA;YAAA;;YACTG,IAAI,EAAA9C,QAAA,CACnB,MAOgB,CAPhBC,YAAA,CAOgB8C,uBAAA;cAhD9BvB,UAAA,EA0CyBX,KAAA,CAAAmC,MAAM;cA1C/B,uBAAArC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0CyBC,KAAA,CAAAmC,MAAM,GAAApC,MAAA;cACfqC,KAAK,EAAC,QAAQ;cACd,oBAAkB,EAAC,aAAa;cAChCC,OAAO,EAAC,UAAU;cAClB,cAAY,EAAZ,EAAY;cACZ,aAAW,EAAX;;YA/ChBnD,OAAA,EAAAC,QAAA,CAmDY,MA0Ee,CA1EfC,YAAA,CA0EekD,uBAAA;cAzEZC,KAAK,EAAEvC,KAAA,CAAAwC,aAAa;cACrBC,KAAK,EAAC,QAAQ;cACbN,MAAM,EAAEnC,KAAA,CAAAmC,MAAM;cACf,qBAAmB,EAAC,sBAAsB;cAC1CO,QAAQ,EAAC;;cAEQC,GAAG,EAAAxD,QAAA,CAClB,MASY,CATZC,YAAA,CASYwD,oBAAA;gBATDC,IAAI,EAAJ,EAAI;gBAACpD,KAAK,EAAC;;gBA3DtCP,OAAA,EAAAC,QAAA,CA4DkB,MAA0C,CAA1CC,YAAA,CAA0CiB,0BAAA;kBA5D5DnB,OAAA,EAAAC,QAAA,CA4DmC,MAAO,CA5D1CgB,gBAAA,CA4DmC,SAAO,E;kBA5D1CC,CAAA;oBA6DkBhB,YAAA,CAAmD0D,oBAAA;kBAAxCd,KAAK,EAAC,MAAM;kBAACe,KAAK,EAAL,EAAK;kBAACC,QAAQ,EAAR;oBAC9B5D,YAAA,CAAqBmB,mBAAA,GACrBxB,mBAAA,sCAAyC,EACzCK,YAAA,CAAyDO,gBAAA;kBAAjDE,OAAK,EAAEW,QAAA,CAAAyC;gBAAe;kBAhEhD/D,OAAA,EAAAC,QAAA,CAgEkD,MAAiB,CAhEnEgB,gBAAA,CAgEkD,mBAAiB,E;kBAhEnEC,CAAA;gDAiEkBhB,YAAA,CAEQO,gBAAA;kBAFDC,IAAI,EAAJ,EAAI;kBAACH,KAAK,EAAC,eAAe;kBAAEI,OAAK,EAAEW,QAAA,CAAA0C;;kBAjE5DhE,OAAA,EAAAC,QAAA,CAkEoB,MAAyB,CAAzBC,YAAA,CAAyBc,iBAAA;oBAlE7ChB,OAAA,EAAAC,QAAA,CAkE4B,MAAQ,CAlEpCgB,gBAAA,CAkE4B,UAAQ,E;oBAlEpCC,CAAA;;kBAAAA,CAAA;;gBAAAA,CAAA;;cAsE+B+C,OAAO,EAAAhE,QAAA,CACtB,MASK,CATLiE,UASK,C;cAEUlC,IAAI,EAAA/B,QAAA,CACnB,CAwCK;gBAzCkB+B;cAAI,OAC3BrC,mBAAA,CAwCK;gBAxCAgB,OAAK,EAAAE,MAAA,IAAES,QAAA,CAAA6C,cAAc,CAACnC,IAAI;gBAAGc,KAAK,EAAC;qCACtClB,mBAAA,CAQKC,SAAA,QA5FvBC,WAAA,CAoF6CE,IAAI,EApFjD,CAoF8BoC,KAAK,EAAEjC,GAAG;qCAAtBP,mBAAA,CAQK;kBAR6BO,GAAG,EAAEA;gBAAG,IACxCtC,mBAAA,uCAA0C,EAC1BsC,GAAG,kB,cAAnBP,mBAAA,CAEWC,SAAA;kBAxF/BM,GAAA;gBAAA,IAAAlB,gBAAA,CAAArB,gBAAA,CAuFyB0B,QAAA,CAAA+C,cAAc,CAACrC,IAAI,CAACG,GAAG,mB,8CAE5BP,mBAAA,CAEWC,SAAA;kBA3F/BM,GAAA;gBAAA,IAAAlB,gBAAA,CAAArB,gBAAA,CA0FyBwE,KAAK,iB;8CAGZzE,mBAAA,CAQK,aAPHO,YAAA,CAMQO,gBAAA;gBALN6D,KAAK,EAAL,EAAK;gBACL/D,KAAK,EAAC,eAAe;gBACpBI,OAAK,EAAAE,MAAA,IAAES,QAAA,CAAAiD,eAAe,CAACvC,IAAI,EAAEnB,MAAM;;gBAjG1Db,OAAA,EAAAC,QAAA,CAkGqB,MAED,CApGpBgB,gBAAA,CAkGqB,cAED,E;gBApGpBC,CAAA;kEAsGkBvB,mBAAA,CAoBK,aAnBHO,YAAA,CAQQO,gBAAA;gBAPNC,IAAI,EAAJ,EAAI;gBACJ4D,KAAK,EAAL,EAAK;gBACL/D,KAAK,EAAC,eAAe;gBACpBI,OAAK,EAAAE,MAAA,IAAES,QAAA,CAAAkD,QAAQ,CAACxC,IAAI,EAAEnB,MAAM;gBAC7B+B,KAAoD,EAApD;kBAAA;kBAAA;kBAAA;gBAAA;;gBA5GtB5C,OAAA,EAAAC,QAAA,CA8GsB,MAAmD,CAAnDC,YAAA,CAAmDc,iBAAA;kBAA3C4B,KAAuB,EAAvB;oBAAA;kBAAA;gBAAuB;kBA9GrD5C,OAAA,EAAAC,QAAA,CA8GsD,MAAU,CA9GhEgB,gBAAA,CA8GsD,YAAU,E;kBA9GhEC,CAAA;;gBAAAA,CAAA;gEAiHoBhB,YAAA,CAQQO,gBAAA;gBAPNC,IAAI,EAAJ,EAAI;gBACJ4D,KAAK,EAAL,EAAK;gBACL/D,KAAK,EAAC,cAAc;gBACnBI,OAAK,EAAAE,MAAA,IAAES,QAAA,CAAAmD,UAAU,CAACzC,IAAI,CAAC0C,GAAG,EAAE7D,MAAM;gBACnC+B,KAAoD,EAApD;kBAAA;kBAAA;kBAAA;gBAAA;;gBAtHtB5C,OAAA,EAAAC,QAAA,CAwHsB,MAAmD,CAAnDC,YAAA,CAAmDc,iBAAA;kBAA3C4B,KAAuB,EAAvB;oBAAA;kBAAA;gBAAuB;kBAxHrD5C,OAAA,EAAAC,QAAA,CAwHsD,MAAU,CAxHhEgB,gBAAA,CAwHsD,YAAU,E;kBAxHhEC,CAAA;;gBAAAA,CAAA;kFAAAyD,UAAA,E;cAAAzD,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;UAkIMrB,mBAAA,iBAAoB,EACpBK,YAAA,CAsGW0E,mBAAA;QAzOjBnD,UAAA,EAmIyBX,KAAA,CAAA+D,UAAU;QAnInC,uBAAAjE,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmIyBC,KAAA,CAAA+D,UAAU,GAAAhE,MAAA;QAAE,WAAS,EAAC,KAAK;QAACiE,GAAG,EAAC;;QAnIzD9E,OAAA,EAAAC,QAAA,CAoIQ,MAoGS,CApGTC,YAAA,CAoGS2C,iBAAA;UAxOjB7C,OAAA,EAAAC,QAAA,CAqIU,MAA0C,CAA1CC,YAAA,CAA0C6E,uBAAA;YArIpD/E,OAAA,EAAAC,QAAA,CAqIwB,MAAa,CArIrCgB,gBAAA,CAqIwB,eAAa,E;YArIrCC,CAAA;cAsIUhB,YAAA,CAwFc8E,sBAAA;YA9NxBhF,OAAA,EAAAC,QAAA,CAuIY,MAKgB,CALhBC,YAAA,CAKgB8C,uBAAA;cA5I5BvB,UAAA,EAwIuBX,KAAA,CAAAmE,OAAO,CAACC,MAAM;cAxIrC,uBAAAtE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAwIuBC,KAAA,CAAAmE,OAAO,CAACC,MAAM,GAAArE,MAAA;cACvBqC,KAAK,EAAC,QAAQ;cACdiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAKgB8C,uBAAA;cAlJ5BvB,UAAA,EA8IuBX,KAAA,CAAAmE,OAAO,CAACK,QAAQ;cA9IvC,uBAAA1E,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA8IuBC,KAAA,CAAAmE,OAAO,CAACK,QAAQ,GAAAzE,MAAA;cACzBqC,KAAK,EAAC,kBAAkB;cACxBiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAKgB8C,uBAAA;cAxJ5BvB,UAAA,EAoJuBX,KAAA,CAAAmE,OAAO,CAACM,SAAS;cApJxC,uBAAA3E,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoJuBC,KAAA,CAAAmE,OAAO,CAACM,SAAS,GAAA1E,MAAA;cAC1BqC,KAAK,EAAC,kBAAkB;cACxBiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAQgB8C,uBAAA;cAjK5BvB,UAAA,EA0JuBX,KAAA,CAAAmE,OAAO,CAACO,MAAM;cA1JrC,uBAAA5E,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0JuBC,KAAA,CAAAmE,OAAO,CAACO,MAAM,GAAA3E,MAAA;cACvBqC,KAAK,EAAC,oBAAoB;cAC1BiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAqBC,CAAC,MAAOA,CAAC,wBAAyCA,CAAC,gBAAiBI,IAAI,CAACJ,CAAC;8DAKvGnF,YAAA,CAOYwF,mBAAA;cAzKxBjE,UAAA,EAmKuBX,KAAA,CAAAmE,OAAO,CAACU,QAAQ;cAnKvC,uBAAA/E,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmKuBC,KAAA,CAAAmE,OAAO,CAACU,QAAQ,GAAA9E,MAAA;cACxBwC,KAAK,EAAEvC,KAAA,CAAA8E,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACZ,MAAM;cAChDhC,KAAK,EAAC,qBAAqB;cAC3BiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;cAClBU,QAAM,EAAAnF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAA0E,kBAAkB,CAACnF,MAAM;uEAEpCX,YAAA,CAKgB8C,uBAAA;cA/K5BvB,UAAA,EA2KuBX,KAAA,CAAAmE,OAAO,CAACgB,OAAO;cA3KtC,uBAAArF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA2KuBC,KAAA,CAAAmE,OAAO,CAACgB,OAAO,GAAApF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cAtL5BvB,UAAA,EAiLuBX,KAAA,CAAAmE,OAAO,CAACiB,gBAAgB;cAjL/C,uBAAAtF,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAiLuBC,KAAA,CAAAmE,OAAO,CAACiB,gBAAgB,GAAArF,MAAA;cACjCqC,KAAK,EAAC,oBAAoB;cAC1BiD,IAAI,EAAC,QAAQ;cACbhB,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cA7L5BvB,UAAA,EAwLuBX,KAAA,CAAAmE,OAAO,CAACmB,OAAO;cAxLtC,uBAAAxF,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAwLuBC,KAAA,CAAAmE,OAAO,CAACmB,OAAO,GAAAvF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfmD,QAAQ,EAAR,EAAQ;cACRlB,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAKgB8C,uBAAA;cAnM5BvB,UAAA,EA+LuBX,KAAA,CAAAmE,OAAO,CAACqB,OAAO;cA/LtC,uBAAA1F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+LuBC,KAAA,CAAAmE,OAAO,CAACqB,OAAO,GAAAzF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cA1M5BvB,UAAA,EAqMuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACrB,MAAM;cArMnD,uBAAAtE,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqMuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACrB,MAAM,GAAArE,MAAA;cACrCqC,KAAK,EAAC,uBAAuB;cAC7BiC,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CASgB8C,uBAAA;cApN5BvB,UAAA,EA4MuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACf,MAAM;cA5MnD,uBAAA5E,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA4MuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACf,MAAM,GAAA3E,MAAA;cACrCqC,KAAK,EAAC,uBAAuB;cAC7BiC,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAqBC,CAAC,MAAOA,CAAC,mCAAoDA,CAAC,gBAAiBI,IAAI,CAACJ,CAAC;8DAKlHnF,YAAA,CAOgB8C,uBAAA;cA5N5BvB,UAAA,EAsNuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACC,QAAQ;cAtNrD,uBAAA5F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAsNuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACC,QAAQ,GAAA3F,MAAA;cACvCqC,KAAK,EAAC,kCAAkC;cACxCiD,IAAI,EAAC,QAAQ;cACbhB,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBxF,mBAAA,+BAAkC,C;YA7N9CqB,CAAA;cA+NUhB,YAAA,CAQiBuG,yBAAA;YAvO3BzG,OAAA,EAAAC,QAAA,CAgOY,MAKC,CALDC,YAAA,CAKCO,gBAAA;cAJCF,KAAK,EAAC,eAAe;cACpBI,OAAK,EAAEW,QAAA,CAAAoF,iBAAiB;cACxBC,QAAQ,GAAGrF,QAAA,CAAAsF;;cAnO1B5G,OAAA,EAAAC,QAAA,CAoOe,MAAO,CApOtBgB,gBAAA,CAoOe,SAAO,E;cApOtBC,CAAA;wDAsOYhB,YAAA,CAA2CO,gBAAA;cAAnCE,OAAK,EAAEW,QAAA,CAAAuF;YAAU;cAtOrC7G,OAAA,EAAAC,QAAA,CAsOuC,MAAQ,CAtO/CgB,gBAAA,CAsOuC,UAAQ,E;cAtO/CC,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;yCA2OMrB,mBAAA,mBAAsB,EACtBK,YAAA,CAiIW0E,mBAAA;QA7WjBnD,UAAA,EA4OyBX,KAAA,CAAAgG,YAAY;QA5OrC,uBAAAlG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA4OyBC,KAAA,CAAAgG,YAAY,GAAAjG,MAAA;QAAE,WAAS,EAAC,KAAK;QAACiE,GAAG,EAAC;;QA5O3D9E,OAAA,EAAAC,QAAA,CA6OQ,MA+HS,CA/HTC,YAAA,CA+HS2C,iBAAA;UA5WjB7C,OAAA,EAAAC,QAAA,CA8OU,MAA+C,CAA/CC,YAAA,CAA+C6E,uBAAA;YA9OzD/E,OAAA,EAAAC,QAAA,CA8OwB,MAAkB,CA9O1CgB,gBAAA,CA8OwB,oBAAkB,E;YA9O1CC,CAAA;cA+OUhB,YAAA,CAmHc8E,sBAAA;YAlWxBhF,OAAA,EAAAC,QAAA,CAgPY,MAA2F,CAA3FJ,mBAAA,4FAA2F,EAC3FK,YAAA,CAgBgB8C,uBAAA;cAjQ5BvB,UAAA,EAkPuBX,KAAA,CAAAmE,OAAO,CAACP,GAAG;cAlPlC,uBAAA9D,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkPuBC,KAAA,CAAAmE,OAAO,CAACP,GAAG,GAAA7D,MAAA;cACpBqC,KAAK,EAAC,IAAI;cACViD,IAAI,EAAC,QAAQ;cACbhB,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAqBC,CAAC;gBAAyB0B,OAAO,CAACC,GAAG,cAAc3B,CAAC;yBAA8BA,CAAC;iBAAwDA,CAAC;sBAA+B4B,OAAO,cAAcxB,IAAI,CAACJ,CAAC;gBAAqB0B,OAAO,CAACC,GAAG,iBAAiBC,OAAO;uBAA4BA,OAAO;;8DAY9T/G,YAAA,CAKgB8C,uBAAA;cAvQ5BvB,UAAA,EAmQuBX,KAAA,CAAAmE,OAAO,CAACC,MAAM;cAnQrC,uBAAAtE,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAmQuBC,KAAA,CAAAmE,OAAO,CAACC,MAAM,GAAArE,MAAA;cACvBqC,KAAK,EAAC,QAAQ;cACdiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAKgB8C,uBAAA;cA7Q5BvB,UAAA,EAyQuBX,KAAA,CAAAmE,OAAO,CAACK,QAAQ;cAzQvC,uBAAA1E,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAyQuBC,KAAA,CAAAmE,OAAO,CAACK,QAAQ,GAAAzE,MAAA;cACzBqC,KAAK,EAAC,kBAAkB;cACxBiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAKgB8C,uBAAA;cAnR5BvB,UAAA,EA+QuBX,KAAA,CAAAmE,OAAO,CAACM,SAAS;cA/QxC,uBAAA3E,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+QuBC,KAAA,CAAAmE,OAAO,CAACM,SAAS,GAAA1E,MAAA;cAC1BqC,KAAK,EAAC,kBAAkB;cACxBiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAQgB8C,uBAAA;cA5R5BvB,UAAA,EAqRuBX,KAAA,CAAAmE,OAAO,CAACO,MAAM;cArRrC,uBAAA5E,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAqRuBC,KAAA,CAAAmE,OAAO,CAACO,MAAM,GAAA3E,MAAA;cACvBqC,KAAK,EAAC,oBAAoB;cAC1BiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAqBC,CAAC,MAAOA,CAAC,wBAAyCA,CAAC,gBAAiBI,IAAI,CAACJ,CAAC;8DAKvGnF,YAAA,CAMgB8C,uBAAA;cAnS5BvB,UAAA,EA8RuBX,KAAA,CAAAmE,OAAO,CAACiC,UAAU;cA9RzC,uBAAAtG,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8RuBC,KAAA,CAAAmE,OAAO,CAACiC,UAAU,GAAArG,MAAA;cAC3BqC,KAAK,EAAC,YAAY;cAClBiD,IAAI,EAAC,UAAU;cACfhB,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBxF,mBAAA,oCAAuC,EACvCK,YAAA,CAOYwF,mBAAA;cA5SxBjE,UAAA,EAsSuBX,KAAA,CAAAmE,OAAO,CAACU,QAAQ;cAtSvC,wB,sCAsSuB7E,KAAA,CAAAmE,OAAO,CAACU,QAAQ,GAAA9E,MAAA,GAKLS,QAAA,CAAA0E,kBAAkB,C;cAJrC3C,KAAK,EAAEvC,KAAA,CAAA8E,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACZ,MAAM;cAChDhC,KAAK,EAAC,qBAAqB;cAC3BiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8FAGrBnF,YAAA,CAKgB8C,uBAAA;cAlT5BvB,UAAA,EA8SuBX,KAAA,CAAAmE,OAAO,CAACgB,OAAO;cA9StC,uBAAArF,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA8SuBC,KAAA,CAAAmE,OAAO,CAACgB,OAAO,GAAApF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cAzT5BvB,UAAA,EAoTuBX,KAAA,CAAAmE,OAAO,CAACiB,gBAAgB;cApT/C,uBAAAtF,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAoTuBC,KAAA,CAAAmE,OAAO,CAACiB,gBAAgB,GAAArF,MAAA;cACjCqC,KAAK,EAAC,mBAAmB;cACzBiD,IAAI,EAAC,QAAQ;cACbhB,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cAhU5BvB,UAAA,EA2TuBX,KAAA,CAAAmE,OAAO,CAACmB,OAAO;cA3TtC,uBAAAxF,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA2TuBC,KAAA,CAAAmE,OAAO,CAACmB,OAAO,GAAAvF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;cACnBgB,QAAQ,EAAR;8DAEFnG,YAAA,CAKgB8C,uBAAA;cAtU5BvB,UAAA,EAkUuBX,KAAA,CAAAmE,OAAO,CAACqB,OAAO;cAlUtC,uBAAA1F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAkUuBC,KAAA,CAAAmE,OAAO,CAACqB,OAAO,GAAAzF,MAAA;cACxBqC,KAAK,EAAC,SAAS;cACfiC,QAAQ,EAAR,EAAQ;cACPC,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CAMgB8C,uBAAA;cA7U5BvB,UAAA,EAwUuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACrB,MAAM;cAxUnD,uBAAAtE,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAwUuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACrB,MAAM,GAAArE,MAAA;cACrCqC,KAAK,EAAC,uBAAuB;cAC7BiC,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAErBnF,YAAA,CASgB8C,uBAAA;cAvV5BvB,UAAA,EA+UuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACf,MAAM;cA/UnD,uBAAA5E,MAAA,SAAAA,MAAA,OAAAC,MAAA,IA+UuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACf,MAAM,GAAA3E,MAAA;cACrCqC,KAAK,EAAC,uBAAuB;cAC7BiC,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAqBC,CAAC,MAAOA,CAAC,mCAAoDA,CAAC,gBAAiBI,IAAI,CAACJ,CAAC;8DAKlHnF,YAAA,CAOgB8C,uBAAA;cA/V5BvB,UAAA,EAyVuBX,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACC,QAAQ;cAzVrD,uBAAA5F,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAyVuBC,KAAA,CAAAmE,OAAO,CAACsB,aAAa,CAACC,QAAQ,GAAA3F,MAAA;cACvCqC,KAAK,EAAC,qCAAqC;cAC3CiD,IAAI,EAAC,QAAQ;cACbhB,QAAQ,EAAR,EAAQ;cACRkB,QAAQ,EAAR,EAAQ;cACPjB,KAAK,GAAIC,CAAC,MAAOA,CAAC;8DAGrBxF,mBAAA,+BAAkC,C;YAjW9CqB,CAAA;cAmWUhB,YAAA,CAQiBuG,yBAAA;YA3W3BzG,OAAA,EAAAC,QAAA,CAoWY,MAKC,CALDC,YAAA,CAKCO,gBAAA;cAJCF,KAAK,EAAC,eAAe;cACpBoG,QAAQ,GAAGrF,QAAA,CAAA6F,iBAAiB;cAC5BxG,OAAK,EAAEW,QAAA,CAAA8F;;cAvWtBpH,OAAA,EAAAC,QAAA,CAwWe,MAAO,CAxWtBgB,gBAAA,CAwWe,SAAO,E;cAxWtBC,CAAA;wDA0WYhB,YAAA,CAA6CO,gBAAA;cAArCE,OAAK,EAAEW,QAAA,CAAA+F;YAAY;cA1WvCrH,OAAA,EAAAC,QAAA,CA0WyC,MAAQ,CA1WjDgB,gBAAA,CA0WyC,UAAQ,E;cA1WjDC,CAAA;;YAAAA,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;yCA8WMhB,YAAA,CAIEoH,sBAAA;QAHCC,MAAM,EAAEzG,KAAA,CAAA0G,eAAe;QACvBvC,OAAO,EAAEnE,KAAA,CAAA2G,eAAe;QACxB,iBAAa,EAAA7G,MAAA,SAAAA,MAAA,OAAAC,MAAA,IAAEC,KAAA,CAAA0G,eAAe,GAAG3G,MAAM;;MAjXhDK,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}