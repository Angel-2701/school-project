{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: 'FilesDialog',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      default: 'Dialog'\n    }\n  },\n  data() {\n    return {\n      files: []\n    };\n  },\n  computed: {\n    dialogVisible: {\n      get() {\n        return this.isOpen;\n      },\n      set(value) {\n        this.$emit('update:isOpen', value);\n      }\n    }\n  },\n  watch: {\n    dialogVisible(newVal) {\n      if (newVal) {\n        this.loadFiles();\n      }\n    }\n  },\n  methods: {\n    loadFiles() {\n      if (this.student && this.student.seguimiento1 && this.student.seguimiento2 && this.student.seguimiento3) {\n        this.fetchFiles([this.student.seguimiento1, this.student.seguimiento2, this.student.seguimiento3]);\n      }\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n    },\n    async fetchFiles(fileIds) {\n      try {\n        const files = await Promise.all(fileIds.map(async fileId => {\n          const response = await fetch(`http://localhost:3000/files/${fileId}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch file with ID ${fileId}`);\n          }\n          const blob = await response.blob();\n          const contentDisposition = response.headers.get('Content-Disposition');\n          let filename = 'unknown';\n          if (contentDisposition) {\n            const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/);\n            if (filenameMatch.length > 1) {\n              filename = filenameMatch[1];\n            }\n          }\n          return {\n            _id: fileId,\n            filename: filename,\n            data: URL.createObjectURL(blob)\n          };\n        }));\n        this.files = files;\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    },\n    downloadFile(fileId) {\n      const file = this.files.find(f => f._id === fileId);\n      if (file) {\n        const link = document.createElement('a');\n        link.href = file.data;\n        link.download = file.filename;\n        link.click();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","isOpen","type","Boolean","required","student","Object","title","String","default","data","files","computed","dialogVisible","get","set","value","$emit","watch","newVal","loadFiles","methods","seguimiento1","seguimiento2","seguimiento3","fetchFiles","closeDialog","fileIds","Promise","all","map","fileId","response","fetch","ok","Error","blob","contentDisposition","headers","filename","filenameMatch","match","length","_id","URL","createObjectURL","error","console","downloadFile","file","find","f","link","document","createElement","href","download","click"],"sources":["/Users/angel/school-project/my-app/src/components/FilesDialog.vue"],"sourcesContent":["<template>\n    <v-dialog v-model=\"dialogVisible\" max-width=\"500\">\n      <v-card>\n        <v-card-title>\n          <span class=\"headline\">{{ title }}</span>\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text v-if=\"files.length > 0\">\n          <v-list>\n            <v-list-item v-for=\"file in files\" :key=\"file._id\">\n              <v-list-item-icon>\n                <v-icon>mdi-file-pdf</v-icon>\n              </v-list-item-icon>\n              <v-list-item-content>\n                <v-list-item-title>{{ file.filename }}</v-list-item-title>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn text @click=\"downloadFile(file._id)\">Download</v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-2\" text @click=\"closeDialog\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </template>\n\n<script>\nexport default {\n  name: 'FilesDialog',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    },\n    student: {\n      type: Object,\n      required: true\n    },\n    title: {\n      type: String,\n      default: 'Dialog'\n    }\n  },\n  data () {\n    return {\n      files: []\n    }\n  },\n  computed: {\n    dialogVisible: {\n      get () {\n        return this.isOpen\n      },\n      set (value) {\n        this.$emit('update:isOpen', value)\n      }\n    }\n  },\n  watch: {\n    dialogVisible (newVal) {\n      if (newVal) {\n        this.loadFiles()\n      }\n    }\n  },\n  methods: {\n    loadFiles () {\n      if (this.student && this.student.seguimiento1 && this.student.seguimiento2 && this.student.seguimiento3) {\n        this.fetchFiles([this.student.seguimiento1, this.student.seguimiento2, this.student.seguimiento3])\n      }\n    },\n    closeDialog () {\n      this.dialogVisible = false\n    },\n    async fetchFiles(fileIds) {\n  try {\n    const files = await Promise.all(\n      fileIds.map(async (fileId) => {\n        const response = await fetch(`http://localhost:3000/files/${fileId}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch file with ID ${fileId}`);\n        }\n        const blob = await response.blob();\n        const contentDisposition = response.headers.get('Content-Disposition');\n        \n        let filename = 'unknown';\n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"?(.+)\"?/);\n          if (filenameMatch.length > 1) {\n            filename = filenameMatch[1];\n          }\n        }\n\n        return {\n          _id: fileId,\n          filename: filename,\n          data: URL.createObjectURL(blob)\n        }\n      })\n    );\n    this.files = files;\n  } catch (error) {\n    console.error('Error fetching files:', error);\n  }\n},\n\n    downloadFile (fileId) {\n      const file = this.files.find((f) => f._id === fileId)\n      if (file) {\n        const link = document.createElement('a')\n        link.href = file.data\n        link.download = file.filename\n        link.click()\n      }\n    }\n  }\n}\n</script>\n\n  <style scoped>\n  .headline {\n    font-weight: bold;\n  }\n  </style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}