{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nexport default {\n  data() {\n    return {\n      archivos: [{\n        id: 1,\n        fieldName: \"Solicitud de residencias profesionales\",\n        file: null,\n        submitted: false\n      }, {\n        id: 2,\n        fieldName: \"Carta de presentación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 3,\n        fieldName: \"Carta de aceptación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 4,\n        fieldName: \"Cartilla IMSS\",\n        file: null,\n        submitted: false\n      }, {\n        id: 5,\n        fieldName: \"Oficio de Asignación de asesor interno\",\n        file: null,\n        submitted: false\n      }, {\n        id: 6,\n        fieldName: \"Anteproyecto\",\n        file: null,\n        submitted: false\n      }, {\n        id: 7,\n        fieldName: \"Liberación de los 5 créditos\",\n        file: null,\n        submitted: false\n      }, {\n        id: 8,\n        fieldName: \"Liberación servicio social\",\n        file: null,\n        submitted: false\n      }],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Archivos\",\n        icon: \"mdi-file-document-outline\"\n      }],\n      userId: localStorage.getItem(\"id\")\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some(archivo => !archivo.file);\n    }\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n        // Update archivo objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.archivos[index]) {\n            this.archivos[index].file = {\n              id: file._id,\n              filename: file.filename,\n              data: file.data // assuming 'data' contains the base64 string\n            };\n            this.archivos[index].submitted = true;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists\n          if (archivo.file) {\n            // Append each file to the FormData object\n            formData.append(\"files\", archivo.file);\n          }\n        }\n\n        // Perform an HTTP POST request to submit the files\n        const response = await axios.post(\"http://localhost:3000/upload-archivo\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n\n        // Check if the request was successful\n        if (response.status === 201) {\n          // Iterate through each archivo and update the submitted status and file data\n          for (let i = 0; i < this.archivos.length; i++) {\n            const archivo = this.archivos[i];\n            if (archivo.file) {\n              // Assuming the response contains the file data\n              const file = response.data.files[i];\n              // Update the submitted status and file data for the archivo\n              archivo.submitted = true;\n              // Ensure archivo.file is an object\n              archivo.file = archivo.file || {};\n              archivo.file.id = file.id;\n              archivo.file.filename = file.filename;\n            }\n          }\n          // Optionally, update the archivo data with any response data received from the server\n          // For example, you may receive an ID or other metadata from the server\n          // Update the archivos array in local storage\n          localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n          // Display a success message to the user\n          alert(\"Files submitted successfully!\");\n        } else {\n          // Handle the case where the request was not successful\n          console.error(\"Failed to submit files:\", response.statusText);\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n      zip.generateAsync({\n        type: \"blob\"\n      }).then(content => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios.delete(`http://localhost:3000/archivos/${archivoId}`).then(response => {\n        if (response.status === 200) {\n          this.archivos[index].submitted = false;\n          // Set file property to null instead of an empty object\n          this.archivos[index].file = null;\n          localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n          window.alert(\"File deleted successfully!\");\n        } else {\n          console.error(\"Failed to delete file.\");\n        }\n      }).catch(error => {\n        console.error(\"Error deleting file:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","JSZip","saveAs","data","archivos","id","fieldName","file","submitted","userName","localStorage","getItem","drawer","sidebarItems","title","icon","userId","mounted","fetchArchivoData","computed","isSubmitDisabled","some","archivo","methods","response","get","files","forEach","index","_id","filename","error","console","navigate","$router","push","logout","removeItem","submitForm","formData","FormData","i","length","append","post","headers","status","setItem","JSON","stringify","alert","statusText","downloadAllFiles","zip","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","uniqueFilename","generateAsync","type","then","content","deleteFile","archivoId","delete","window","catch"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Archivos\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col\n                  v-for=\"(archivo, index) in archivos\"\n                  :key=\"archivo.id\"\n                  cols=\"12\"\n                  md=\"6\"\n                >\n                  <v-card class=\"mb-3\">\n                    <v-card-title>{{ archivo.fieldName }}</v-card-title>\n                    <v-card-text class=\"text-center\" v-if=\"archivo.submitted\">\n                      <v-icon color=\"blue darken-2\" size=\"48\"\n                        >mdi-file-pdf-box</v-icon\n                      >\n                      <div>{{ archivo.file.filename }}</div>\n                    </v-card-text>\n                    <v-divider v-if=\"archivo.submitted\"></v-divider>\n                    <v-file-input\n                      v-if=\"!archivo.submitted\"\n                      v-model=\"archivo.file\"\n                      :label=\"archivo.fieldName\"\n                      prepend-icon=\"mdi-upload\"\n                      accept=\"application/pdf\"\n                    ></v-file-input>\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      :href=\"\n                        'data:application/octet-stream;base64,' +\n                        archivo.file.data\n                      \"\n                      :download=\"archivo.file.filename\"\n                      color=\"blue darken-2\"\n                      >Descargar</v-btn\n                    >\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      color=\"red darken-2\"\n                      @click=\"deleteFile(index)\"\n                      >Eliminar</v-btn\n                    >\n                  </v-card>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-divider class=\"my-4\"></v-divider>\n            <v-card-actions>\n              <v-btn\n                :disabled=\"isSubmitDisabled\"\n                color=\"blue darken-2\"\n                @click=\"submitForm\"\n                >Enviar</v-btn\n              >\n              <v-btn color=\"primary\" @click=\"downloadAllFiles\"\n                >Descargar todos los archivos</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport default {\n  data() {\n    return {\n      archivos: [\n        {\n          id: 1,\n          fieldName: \"Solicitud de residencias profesionales\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 2,\n          fieldName: \"Carta de presentación\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 3,\n          fieldName: \"Carta de aceptación\",\n          file: null,\n          submitted: false,\n        },\n        { id: 4, fieldName: \"Cartilla IMSS\", file: null, submitted: false },\n        {\n          id: 5,\n          fieldName: \"Oficio de Asignación de asesor interno\",\n          file: null,\n          submitted: false,\n        },\n        { id: 6, fieldName: \"Anteproyecto\", file: null, submitted: false },\n        {\n          id: 7,\n          fieldName: \"Liberación de los 5 créditos\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 8,\n          fieldName: \"Liberación servicio social\",\n          file: null,\n          submitted: false,\n        },\n      ],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Archivos\", icon: \"mdi-file-document-outline\" },\n      ],\n      userId: localStorage.getItem(\"id\"),\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some((archivo) => !archivo.file);\n    },\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n        // Update archivo objects with their data based on index\n        files.forEach((file, index) => {\n          if (this.archivos[index]) {\n            this.archivos[index].file = {\n              id: file._id,\n              filename: file.filename,\n              data: file.data, // assuming 'data' contains the base64 string\n            };\n            this.archivos[index].submitted = true;\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists\n          if (archivo.file) {\n            // Append each file to the FormData object\n            formData.append(\"files\", archivo.file);\n          }\n        }\n\n        // Perform an HTTP POST request to submit the files\n        const response = await axios.post(\n          \"http://localhost:3000/upload-archivo\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n\n        // Check if the request was successful\n        if (response.status === 201) {\n          // Iterate through each archivo and update the submitted status and file data\n          for (let i = 0; i < this.archivos.length; i++) {\n            const archivo = this.archivos[i];\n            if (archivo.file) {\n              // Assuming the response contains the file data\n              const file = response.data.files[i];\n              // Update the submitted status and file data for the archivo\n              archivo.submitted = true;\n              // Ensure archivo.file is an object\n              archivo.file = archivo.file || {};\n              archivo.file.id = file.id;\n              archivo.file.filename = file.filename;\n            }\n          }\n          // Optionally, update the archivo data with any response data received from the server\n          // For example, you may receive an ID or other metadata from the server\n          // Update the archivos array in local storage\n          localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n          // Display a success message to the user\n          alert(\"Files submitted successfully!\");\n        } else {\n          // Handle the case where the request was not successful\n          console.error(\"Failed to submit files:\", response.statusText);\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      }\n    },\n\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n\n      zip.generateAsync({ type: \"blob\" }).then((content) => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios\n        .delete(`http://localhost:3000/archivos/${archivoId}`)\n        .then((response) => {\n          if (response.status === 200) {\n            this.archivos[index].submitted = false;\n            // Set file property to null instead of an empty object\n            this.archivos[index].file = null;\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            window.alert(\"File deleted successfully!\");\n          } else {\n            console.error(\"Failed to delete file.\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error deleting file:\", error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}