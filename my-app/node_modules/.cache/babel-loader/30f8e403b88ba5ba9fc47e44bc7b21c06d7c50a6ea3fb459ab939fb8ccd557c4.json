{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_main, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: $data.valid,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_text_field, {\n            modelValue: $data.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n            rules: $data.emailRules,\n            label: \"E-mail\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n            modelValue: $data.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n            rules: $data.passwordRules,\n            label: \"Password\",\n            type: \"password\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_btn, {\n            disabled: !$data.valid,\n            onClick: $options.submit\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Login\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_app","default","_withCtx","_createVNode","_component_v_main","_component_v_container","_component_v_form","ref","modelValue","$data","valid","_cache","$event","_component_v_text_field","email","rules","emailRules","label","required","password","passwordRules","type","_component_v_btn","disabled","onClick","$options","submit","_createTextVNode","_"],"sources":["/Users/angel/project-system/my-app/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-text-field\n            v-model=\"email\"\n            :rules=\"emailRules\"\n            label=\"E-mail\"\n            required\n          ></v-text-field>\n          <v-text-field\n            v-model=\"password\"\n            :rules=\"passwordRules\"\n            label=\"Password\"\n            type=\"password\"\n            required\n          ></v-text-field>\n          <v-btn :disabled=\"!valid\" @click=\"submit\">Login</v-btn>\n        </v-form>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      valid: true,\n      email: \"\",\n      emailRules: [\n        (v) => !!v || \"E-mail is required\",\n        (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n      ],\n      password: \"\",\n      passwordRules: [(v) => !!v || \"Password is required\"],\n    };\n  },\n  methods: {\n    submit() {\n      if (this.$refs.form.validate()) {\n        // Handle form submission\n        console.log(\"Form submitted:\", {\n          email: this.email,\n          password: this.password,\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add any scoped styles here */\n</style>\n"],"mappings":";;;;;;;;uBACEA,YAAA,CAqBQC,gBAAA;IAtBVC,OAAA,EAAAC,QAAA,CAEI,MAmBS,CAnBTC,YAAA,CAmBSC,iBAAA;MArBbH,OAAA,EAAAC,QAAA,CAGM,MAiBc,CAjBdC,YAAA,CAiBcE,sBAAA;QApBpBJ,OAAA,EAAAC,QAAA,CAIQ,MAeS,CAfTC,YAAA,CAeSG,iBAAA;UAfDC,GAAG,EAAC,MAAM;UAJ1BC,UAAA,EAIoCC,KAAA,CAAAC,KAAK;UAJzC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoCH,KAAA,CAAAC,KAAK,GAAAE,MAAA;UAAE,iBAAe,EAAf;;UAJ3CX,OAAA,EAAAC,QAAA,CAKU,MAKgB,CALhBC,YAAA,CAKgBU,uBAAA;YAV1BL,UAAA,EAMqBC,KAAA,CAAAK,KAAK;YAN1B,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMqBH,KAAA,CAAAK,KAAK,GAAAF,MAAA;YACbG,KAAK,EAAEN,KAAA,CAAAO,UAAU;YAClBC,KAAK,EAAC,QAAQ;YACdC,QAAQ,EAAR;4DAEFf,YAAA,CAMgBU,uBAAA;YAjB1BL,UAAA,EAYqBC,KAAA,CAAAU,QAAQ;YAZ7B,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYqBH,KAAA,CAAAU,QAAQ,GAAAP,MAAA;YAChBG,KAAK,EAAEN,KAAA,CAAAW,aAAa;YACrBH,KAAK,EAAC,UAAU;YAChBI,IAAI,EAAC,UAAU;YACfH,QAAQ,EAAR;4DAEFf,YAAA,CAAuDmB,gBAAA;YAA/CC,QAAQ,GAAGd,KAAA,CAAAC,KAAK;YAAGc,OAAK,EAAEC,QAAA,CAAAC;;YAlB5CzB,OAAA,EAAAC,QAAA,CAkBoD,MAAK,CAlBzDyB,gBAAA,CAkBoD,OAAK,E;YAlBzDC,CAAA;;UAAAA,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}