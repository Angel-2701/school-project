{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      teachers: [],\n      sidebarItems: [{\n        title: \"Projects\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Students\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Teachers\",\n        icon: \"mdi-account-tie\"\n      }],\n      userName: \"John Doe\",\n      drawer: false,\n      editDialog: false,\n      editedTeacher: {\n        _id: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        contraseña: \"\"\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newTeacher: {\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        contraseña: \"\"\n        // Add more fields as needed\n      }\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/teachers\");\n        this.teachers = response.data;\n      } catch (error) {\n        console.error(\"Error fetching teachers:\", error);\n      }\n    },\n    async navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/students\");\n          break;\n        case 2:\n          this.$router.push(\"/teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n    },\n    editUser(teacher) {\n      this.editedTeacher = {\n        ...teacher\n      };\n      this.editDialog = true;\n    },\n    async saveEditedTeacher() {\n      try {\n        // Send the updated teacher data to the server\n        const response = await axios.put(`http://localhost:3000/users/${this.editedTeacher._id}`, this.editedTeacher);\n        console.log(\"Teacher updated successfully:\", response.data);\n        this.fetchData();\n      } catch (error) {\n        console.error(\"Error updating teacher:\", error);\n      }\n      this.editDialog = false;\n    },\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n    },\n    async saveNewTeacher() {\n      try {\n        // Add 'rol' field with value 'teacher'\n        this.newTeacher.rol = \"teacher\";\n        const response = await axios.post(\"http://localhost:3000/register\", this.newTeacher);\n        if (response.status === 201) {\n          console.log(\"Teacher created successfully:\", response.data);\n          this.fetchData();\n        } else {\n          console.error(\"Failed to create teacher:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error creating teacher:\", error);\n      }\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    async deleteTeacher(teacherId) {\n      try {\n        const response = await axios.delete(`http://localhost:3000/users/${teacherId}`);\n        console.log(\"Teacher deleted successfully:\", response.data);\n        this.fetchData(); // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error(\"Error deleting teacher:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","data","teachers","sidebarItems","title","icon","userName","drawer","editDialog","editedTeacher","_id","nombre","apellido","correo","contraseña","createDialog","newTeacher","methods","fetchData","response","get","error","console","navigate","index","$router","push","logout","editUser","teacher","saveEditedTeacher","put","log","cancelEdit","openCreateDialog","saveNewTeacher","rol","post","status","cancelCreate","deleteTeacher","teacherId","delete","mounted"],"sources":["/Users/angel/project-system/my-app/src/components/TeachersPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container fluid>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"10\">\n          <v-card>\n            <!-- Teachers Data -->\n            <v-data-table\n              v-if=\"teachers.length > 0\"\n              :items=\"teachers\"\n              align=\"center\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Teachers</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr>\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    {{ value }}\n                  </td>\n                  <td>\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editUser(item)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteTeacher(item._id)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Edit Teacher</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"editedTeacher.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedTeacher.contraseña\"\n              label=\"Password\"\n              type=\"password\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveEditedTeacher\">Save</v-btn>\n            <v-btn @click=\"cancelEdit\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Create New Teacher</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"newTeacher._id\" label=\"ID\"></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.nombre\"\n              label=\"Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.apellido\"\n              label=\"Last Name\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.correo\"\n              label=\"Email\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newTeacher.contraseña\"\n              label=\"Password\"\n              type=\"password\"\n            ></v-text-field>\n            <!-- Add more fields as needed -->\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"blue darken-2\" @click=\"saveNewTeacher\">Save</v-btn>\n            <v-btn @click=\"cancelCreate\">Cancel</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      teachers: [],\n      sidebarItems: [\n        { title: \"Projects\", icon: \"mdi-folder-outline\" },\n        { title: \"Students\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Teachers\", icon: \"mdi-account-tie\" },\n      ],\n      userName: \"John Doe\",\n      drawer: false,\n      editDialog: false,\n      editedTeacher: {\n        _id: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        contraseña: \"\",\n        // Add more fields as needed\n      },\n      createDialog: false,\n      newTeacher: {\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        contraseña: \"\",\n        // Add more fields as needed\n      },\n    };\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/teachers\");\n        this.teachers = response.data;\n      } catch (error) {\n        console.error(\"Error fetching teachers:\", error);\n      }\n    },\n\n    async navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/students\");\n          break;\n        case 2:\n          this.$router.push(\"/teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n    },\n    editUser(teacher) {\n      this.editedTeacher = { ...teacher };\n      this.editDialog = true;\n    },\n    async saveEditedTeacher() {\n      try {\n        // Send the updated teacher data to the server\n        const response = await axios.put(\n          `http://localhost:3000/users/${this.editedTeacher._id}`,\n          this.editedTeacher\n        );\n\n        console.log(\"Teacher updated successfully:\", response.data);\n        this.fetchData();\n      } catch (error) {\n        console.error(\"Error updating teacher:\", error);\n      }\n      this.editDialog = false;\n    },\n\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n    },\n    async saveNewTeacher() {\n      try {\n        // Add 'rol' field with value 'teacher'\n        this.newTeacher.rol = \"teacher\";\n\n        const response = await axios.post(\n          \"http://localhost:3000/register\",\n          this.newTeacher\n        );\n        if (response.status === 201) {\n          console.log(\"Teacher created successfully:\", response.data);\n          this.fetchData();\n        } else {\n          console.error(\"Failed to create teacher:\", response.data);\n        }\n      } catch (error) {\n        console.error(\"Error creating teacher:\", error);\n      }\n      this.createDialog = false;\n    },\n\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    async deleteTeacher(teacherId) {\n      try {\n        const response = await axios.delete(\n          `http://localhost:3000/users/${teacherId}`\n        );\n        console.log(\"Teacher deleted successfully:\", response.data);\n        this.fetchData(); // Call a method to update the UI or fetch updated data\n      } catch (error) {\n        console.error(\"Error deleting teacher:\", error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchData();\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}