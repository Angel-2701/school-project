{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      projects: [],\n      tableHeaders: [],\n      sidebarItems: [{\n        title: \"Proyectos\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Alumnos\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Maestros\",\n        icon: \"mdi-account-tie\"\n      }],\n      userName: localStorage.getItem(\"userName\"),\n      // Retrieve the user's name from localStorage\n      drawer: false,\n      editDialog: false,\n      editedProjectName: \"\",\n      editedProjectId: \"\",\n      editedProjectCompany: \"\",\n      createDialog: false,\n      newProject: {\n        nombre: \"\",\n        empresa: \"\",\n        _id: \"\",\n        asesorExterno: {\n          nombre: \"\",\n          telefono: \"\",\n          correo: \"\"\n        }\n      },\n      search: \"\",\n      asesorExterno: {\n        nombre: \"\",\n        telefono: \"\",\n        correo: \"\"\n      }\n    };\n  },\n  computed: {\n    filteredProjects() {\n      return this.projects.map(project => {\n        const {\n          asesorExterno,\n          ...filteredProject\n        } = project;\n        return filteredProject;\n      }).reverse();\n    },\n    // Compute whether the \"Save\" button should be disabled\n    isEditSaveDisabled() {\n      // Check if any required field is empty or invalid\n      return !this.isEditNameValid() || !this.isEditCompanyValid();\n    },\n    isSaveDisabled() {\n      // Check if any required field is empty or invalid\n      return !this.isIdValid() || !this.isNameValid() || !this.isCompanyValid() || !this.isAsesorValid();\n    }\n  },\n  methods: {\n    isIdValid() {\n      return /^[0-9]+$/.test(this.newProject._id);\n    },\n    isNameValid() {\n      return !!this.newProject.nombre;\n    },\n    isAsesorValid() {\n      return !!this.asesorExterno.nombre && !!this.asesorExterno.telefono && !!this.asesorExterno.correo;\n    },\n    isCompanyValid() {\n      return !!this.newProject.empresa;\n    },\n    isEditNameValid() {\n      return !!this.editedProjectName;\n    },\n    isEditCompanyValid() {\n      return !!this.editedProjectCompany;\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        this.projects = response.data;\n\n        // Generate table headers based on the keys of the first project\n        if (this.projects.length > 0) {\n          // Access the first project from the reactive proxy object\n          const firstProject = this.projects[0];\n\n          // Extract keys from the first project and capitalize them\n          const keys = Object.keys(firstProject).filter(key => key !== \"asesorExterno\").map(key => ({\n            text: key.charAt(0).toUpperCase() + key.slice(1),\n            // Capitalize first letter\n            value: key\n          }));\n\n          // Set the tableHeaders property with the generated headers\n          this.tableHeaders = keys;\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/admin/Students\");\n          break;\n        case 2:\n          this.$router.push(\"/admin/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    editProject(project, event) {\n      // Stop the propagation of the click event\n      event.stopPropagation();\n      this.editedProjectName = project.nombre;\n      this.editedProjectId = project._id;\n      this.editedProjectCompany = project.empresa;\n      this.asesorExterno.nombre = project.asesorExterno.nombre;\n      this.asesorExterno.telefono = project.asesorExterno.telefono;\n      this.asesorExterno.correo = project.asesorExterno.correo;\n      this.editDialog = true;\n    },\n    saveEditedProject() {\n      // Create an object with the updated project data\n      const updatedProject = {\n        nombre: this.editedProjectName,\n        // Assuming the only editable field is the project name\n        empresa: this.editedProjectCompany,\n        asesorExterno: this.asesorExterno\n      };\n\n      // Make an HTTP PUT request to update the project\n      axios.put(`http://localhost:3000/projects/${this.editedProjectId}`, updatedProject).then(response => {\n        // Check if the project was successfully updated\n        if (response.status === 200) {\n          console.log(\"Project updated successfully:\", response.data);\n\n          // Optionally, you can fetch the updated projects from the server again\n          this.fetchData();\n        } else {\n          console.error(\"Failed to update project:\", response.data);\n        }\n      }).catch(error => {\n        console.error(\"Error updating project:\", error);\n      });\n\n      // Close the edit dialog\n      this.editDialog = false;\n    },\n    deleteProject(project) {\n      // Prompt the user for confirmation before deleting the project\n      if (confirm(\"¿Estás seguro que deseas borrar este proyecto?\")) {\n        // Make an HTTP DELETE request to delete the project\n        axios.delete(`http://localhost:3000/projects/${project._id}`).then(response => {\n          // Check if the project was successfully deleted\n          if (response.status === 200) {\n            console.log(\"Project deleted successfully:\", response.data);\n\n            // Optionally, you can fetch the updated projects from the server again\n            this.fetchData();\n          } else {\n            console.error(\"Failed to delete project:\", response.data);\n          }\n        }).catch(error => {\n          console.error(\"Error deleting project:\", error);\n        });\n      }\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n    },\n    saveNewProject() {\n      axios.post(\"http://localhost:3000/projects\", this.newProject).then(response => {\n        if (response.status === 201) {\n          console.log(\"Project created successfully:\", response.data);\n          this.fetchData();\n        } else {\n          console.error(\"Failed to create project:\", response.data);\n        }\n      }).catch(error => {\n        if (error.response) {\n          // Display an error message to the user if the email already exists\n          alert(error.response.data.error);\n        }\n      });\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // You can perform any action you want here, such as navigating to another page or displaying more information about the clicked item.\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","data","projects","tableHeaders","sidebarItems","title","icon","userName","localStorage","getItem","drawer","editDialog","editedProjectName","editedProjectId","editedProjectCompany","createDialog","newProject","nombre","empresa","_id","asesorExterno","telefono","correo","search","computed","filteredProjects","map","project","filteredProject","reverse","isEditSaveDisabled","isEditNameValid","isEditCompanyValid","isSaveDisabled","isIdValid","isNameValid","isCompanyValid","isAsesorValid","methods","test","fetchData","response","get","length","firstProject","keys","Object","filter","key","text","charAt","toUpperCase","slice","value","error","console","navigate","index","$router","push","logout","removeItem","editProject","event","stopPropagation","saveEditedProject","updatedProject","put","then","status","log","catch","deleteProject","confirm","delete","openCreateDialog","saveNewProject","post","alert","cancelCreate","cancelEdit","handleRowClick","item","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/AdminPage.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <v-main>\n        <!-- Main content -->\n        <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n          <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n            <template v-slot:text>\n              <v-text-field\n                v-model=\"search\"\n                label=\"Buscar\"\n                prepend-inner-icon=\"mdi-magnify\"\n                variant=\"outlined\"\n                hide-details\n                single-line\n              ></v-text-field>\n            </template>\n            <!-- Projects Data -->\n            <v-data-table\n              :items=\"filteredProjects\"\n              align=\"center\"\n              :search=\"search\"\n              items-per-page-text=\"Elementos por página\"\n              pageText=\"\"\n            >\n              <template v-slot:top>\n                <v-toolbar flat color=\"blue darken-2\">\n                  <v-toolbar-title>Proyectos</v-toolbar-title>\n                  <v-divider class=\"mx-4\" inset vertical></v-divider>\n                  <v-spacer></v-spacer>\n                  <v-btn icon color=\"blue darken-2\" @click=\"openCreateDialog\">\n                    <v-icon>mdi-plus</v-icon>\n                  </v-btn>\n                </v-toolbar>\n              </template>\n              <template v-slot:item=\"{ item }\">\n                <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                  <td v-for=\"(value, key) in item\" :key=\"key\">\n                    {{ value }}\n                  </td>\n                  <td>\n                    <!-- Use small prop to make the buttons smaller -->\n                    <v-btn\n                      icon\n                      small\n                      color=\"blue darken-2\"\n                      @click=\"editProject(item, $event)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-pencil</v-icon>\n                    </v-btn>\n\n                    <v-btn\n                      icon\n                      small\n                      color=\"red darken-2\"\n                      @click=\"deleteProject(item)\"\n                      style=\"width: 30px; height: 30px; margin-right: 5px\"\n                    >\n                      <v-icon style=\"font-size: 18px\">mdi-delete</v-icon>\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card>\n        </v-col>\n      </v-main>\n\n      <!-- Edit Dialog -->\n      <v-dialog v-model=\"editDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Editar Proyecto</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"editedProjectName\"\n              label=\"Nombre del Proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Proyecto requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"editedProjectCompany\"\n              label=\"Empresa\"\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo del asesor requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"asesorExterno.telefono\"\n              label=\"Número telefónico asesor externo\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'Número telefónico del asesor requerido']\"\n            ></v-text-field>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              @click=\"saveEditedProject\"\n              :disabled=\"isEditSaveDisabled\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelEdit\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <!-- Create Dialog -->\n      <v-dialog v-model=\"createDialog\" max-width=\"500\">\n        <v-card>\n          <v-card-title>Crear Nuevo Proyecto</v-card-title>\n          <v-card-text>\n            <v-text-field\n              v-model=\"newProject._id\"\n              label=\"ID\"\n              required\n              :rules=\"[\n                (v) => !!v || 'ID requerido',\n                (v) => /^[0-9]+$/.test(v) || 'ID debe contener solo números',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newProject.nombre\"\n              label=\"Nombre del Proyecto\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre del Proyecto requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newProject.empresa\"\n              label=\"Empresa\"\n              required\n              :rules=\"[(v) => !!v || 'Empresa requerida']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newProject.asesorExterno.nombre\"\n              label=\"Nombre Asesor externo\"\n              required\n              :rules=\"[(v) => !!v || 'Nombre del Asesor requerido']\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newProject.asesorExterno.correo\"\n              label=\"Correo Asesor externo\"\n              required\n              :rules=\"[\n                (v) => !!v || 'Correo del asesor requerido',\n                (v) => /.+@.+\\..+/.test(v) || 'Correo debe ser válido',\n              ]\"\n            ></v-text-field>\n            <v-text-field\n              v-model=\"newProject.asesorExterno.telefono\"\n              label=\"Número telefónico asesor externo\"\n              type=\"number\"\n              required\n              :rules=\"[(v) => !!v || 'Número telefónico del asesor requerido']\"\n            ></v-text-field>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"blue darken-2\"\n              @click=\"saveNewProject\"\n              :disabled=\"isSaveDisabled\"\n              >Guardar</v-btn\n            >\n            <v-btn @click=\"cancelCreate\">Cancelar</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      projects: [],\n      tableHeaders: [],\n      sidebarItems: [\n        { title: \"Proyectos\", icon: \"mdi-folder-outline\" },\n        { title: \"Alumnos\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Maestros\", icon: \"mdi-account-tie\" },\n      ],\n      userName: localStorage.getItem(\"userName\"), // Retrieve the user's name from localStorage\n      drawer: false,\n      editDialog: false,\n      editedProjectName: \"\",\n      editedProjectId: \"\",\n      editedProjectCompany: \"\",\n      createDialog: false,\n      newProject: {\n        nombre: \"\",\n        empresa: \"\",\n        _id: \"\",\n        asesorExterno: {\n          nombre: \"\",\n          telefono: \"\",\n          correo: \"\",\n        },\n      },\n      search: \"\",\n      asesorExterno: {\n        nombre: \"\",\n        telefono: \"\",\n        correo: \"\",\n      },\n    };\n  },\n  computed: {\n    filteredProjects() {\n      return this.projects\n        .map((project) => {\n          const { asesorExterno, ...filteredProject } = project;\n          return filteredProject;\n        })\n        .reverse();\n    },\n    // Compute whether the \"Save\" button should be disabled\n    isEditSaveDisabled() {\n      // Check if any required field is empty or invalid\n      return !this.isEditNameValid() || !this.isEditCompanyValid();\n    },\n    isSaveDisabled() {\n      // Check if any required field is empty or invalid\n      return (\n        !this.isIdValid() ||\n        !this.isNameValid() ||\n        !this.isCompanyValid() ||\n        !this.isAsesorValid()\n      );\n    },\n  },\n  methods: {\n    isIdValid() {\n      return /^[0-9]+$/.test(this.newProject._id);\n    },\n    isNameValid() {\n      return !!this.newProject.nombre;\n    },\n    isAsesorValid() {\n      return (\n        !!this.asesorExterno.nombre &&\n        !!this.asesorExterno.telefono &&\n        !!this.asesorExterno.correo\n      );\n    },\n    isCompanyValid() {\n      return !!this.newProject.empresa;\n    },\n    isEditNameValid() {\n      return !!this.editedProjectName;\n    },\n    isEditCompanyValid() {\n      return !!this.editedProjectCompany;\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/projects\");\n        this.projects = response.data;\n\n        // Generate table headers based on the keys of the first project\n        if (this.projects.length > 0) {\n          // Access the first project from the reactive proxy object\n          const firstProject = this.projects[0];\n\n          // Extract keys from the first project and capitalize them\n          const keys = Object.keys(firstProject)\n            .filter((key) => key !== \"asesorExterno\")\n            .map((key) => ({\n              text: key.charAt(0).toUpperCase() + key.slice(1), // Capitalize first letter\n              value: key,\n            }));\n\n          // Set the tableHeaders property with the generated headers\n          this.tableHeaders = keys;\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    },\n\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/admin\");\n          break;\n        case 1:\n          this.$router.push(\"/admin/Students\");\n          break;\n        case 2:\n          this.$router.push(\"/admin/Teachers\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      // Logic to logout the user\n      // For example, you can clear any user data or tokens stored in localStorage\n      localStorage.removeItem(\"token\");\n\n      // Redirect the user to the login page\n      this.$router.push(\"/login\");\n    },\n    editProject(project, event) {\n      // Stop the propagation of the click event\n      event.stopPropagation();\n\n      this.editedProjectName = project.nombre;\n      this.editedProjectId = project._id;\n      this.editedProjectCompany = project.empresa;\n      this.asesorExterno.nombre = project.asesorExterno.nombre;\n      this.asesorExterno.telefono = project.asesorExterno.telefono;\n      this.asesorExterno.correo = project.asesorExterno.correo;\n      this.editDialog = true;\n    },\n\n    saveEditedProject() {\n      // Create an object with the updated project data\n      const updatedProject = {\n        nombre: this.editedProjectName, // Assuming the only editable field is the project name\n        empresa: this.editedProjectCompany,\n        asesorExterno: this.asesorExterno,\n      };\n\n      // Make an HTTP PUT request to update the project\n      axios\n        .put(\n          `http://localhost:3000/projects/${this.editedProjectId}`,\n          updatedProject\n        )\n        .then((response) => {\n          // Check if the project was successfully updated\n          if (response.status === 200) {\n            console.log(\"Project updated successfully:\", response.data);\n\n            // Optionally, you can fetch the updated projects from the server again\n            this.fetchData();\n          } else {\n            console.error(\"Failed to update project:\", response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error updating project:\", error);\n        });\n\n      // Close the edit dialog\n      this.editDialog = false;\n    },\n\n    deleteProject(project) {\n      // Prompt the user for confirmation before deleting the project\n      if (confirm(\"¿Estás seguro que deseas borrar este proyecto?\")) {\n        // Make an HTTP DELETE request to delete the project\n        axios\n          .delete(`http://localhost:3000/projects/${project._id}`)\n          .then((response) => {\n            // Check if the project was successfully deleted\n            if (response.status === 200) {\n              console.log(\"Project deleted successfully:\", response.data);\n\n              // Optionally, you can fetch the updated projects from the server again\n              this.fetchData();\n            } else {\n              console.error(\"Failed to delete project:\", response.data);\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error deleting project:\", error);\n          });\n      }\n    },\n    openCreateDialog() {\n      this.createDialog = true;\n    },\n    saveNewProject() {\n      axios\n        .post(\"http://localhost:3000/projects\", this.newProject)\n        .then((response) => {\n          if (response.status === 201) {\n            console.log(\"Project created successfully:\", response.data);\n            this.fetchData();\n          } else {\n            console.error(\"Failed to create project:\", response.data);\n          }\n        })\n        .catch((error) => {\n          if (error.response) {\n            // Display an error message to the user if the email already exists\n            alert(error.response.data.error);\n          }\n        });\n      this.createDialog = false;\n    },\n    cancelCreate() {\n      this.createDialog = false;\n    },\n\n    cancelEdit() {\n      this.editDialog = false;\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log(\"Row clicked:\", item);\n      // You can perform any action you want here, such as navigating to another page or displaying more information about the clicked item.\n    },\n  },\n  mounted() {\n    this.fetchData();\n  },\n};\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n\n/* Add shadow to indicate clickable rows */\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}