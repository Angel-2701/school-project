{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nexport default {\n  data() {\n    return {\n      isSubmitting: false,\n      archivos: [{\n        id: 1,\n        fieldName: \"Solicitud de residencias profesionales\",\n        file: null,\n        submitted: false\n      }, {\n        id: 2,\n        fieldName: \"Carta de presentación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 3,\n        fieldName: \"Carta de aceptación\",\n        file: null,\n        submitted: false\n      }, {\n        id: 4,\n        fieldName: \"Cartilla IMSS\",\n        file: null,\n        submitted: false\n      }, {\n        id: 5,\n        fieldName: \"Oficio de Asignación de asesor interno\",\n        file: null,\n        submitted: false\n      }, {\n        id: 6,\n        fieldName: \"Anteproyecto\",\n        file: null,\n        submitted: false\n      }, {\n        id: 7,\n        fieldName: \"Liberación de los 5 créditos\",\n        file: null,\n        submitted: false\n      }, {\n        id: 8,\n        fieldName: \"Liberación servicio social\",\n        file: null,\n        submitted: false\n      }],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [{\n        title: \"Proyecto\",\n        icon: \"mdi-folder-outline\"\n      }, {\n        title: \"Asesorias\",\n        icon: \"mdi-account-plus-outline\"\n      }, {\n        title: \"Archivos\",\n        icon: \"mdi-file-document-outline\"\n      }],\n      userId: localStorage.getItem(\"id\")\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some(archivo => !archivo.file);\n    },\n    isDownloadDisabled() {\n      return !this.archivos.some(archivo => archivo.submitted);\n    }\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        // Fetch user data to get the mapping of files to fields\n        const userResponse = await axios.get(`http://localhost:3000/users/${this.userId}`);\n        const userArchivos = userResponse.data.archivos;\n\n        // Fetch all files\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n\n        // Iterate through each field in userArchivos to find the matching file from the files response\n        for (const [fieldName, fileId] of Object.entries(userArchivos)) {\n          const matchingFile = files.find(file => file._id === fileId);\n          if (matchingFile) {\n            const matchingArchivo = this.archivos.find(archivo => archivo.fieldName === fieldName);\n            if (matchingArchivo) {\n              matchingArchivo.file = {\n                id: matchingFile._id,\n                filename: matchingFile.filename,\n                data: matchingFile.data // assuming 'data' contains the base64 string\n              };\n              matchingArchivo.submitted = true;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      this.isSubmitting = true;\n      try {\n        const formData = new FormData();\n        const newFiles = [];\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists and is not submitted yet\n          if (archivo.file && !archivo.submitted) {\n            // Append each new file to the FormData object\n            formData.append(\"files\", archivo.file);\n            newFiles.push(archivo); // Keep track of new files\n          }\n        }\n        if (newFiles.length > 0) {\n          // Perform an HTTP POST request to submit the new files\n          const response = await axios.post(\"http://localhost:3000/upload-archivo\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n\n          // Check if the request was successful\n          if (response.status === 201) {\n            // Create an object to store the nuevos archivos data\n            const nuevosArchivosData = {};\n\n            // Iterate through new files and update the submitted status and file data\n            for (let i = 0; i < newFiles.length; i++) {\n              const file = response.data.files[i];\n              const index = this.archivos.findIndex(archivo => archivo.fieldName === newFiles[i].fieldName);\n              this.archivos[index].submitted = true;\n              this.archivos[index].file = {\n                id: file.id,\n                filename: file.filename,\n                data: file.data // assuming 'data' contains the base64 string\n              };\n              // Add to nuevosArchivosData\n              nuevosArchivosData[this.archivos[index].fieldName] = file.id;\n            }\n\n            // Fetch the current user data\n            const currentUser = await axios.get(`http://localhost:3000/users/${this.userId}`);\n\n            // Merge the nuevos archivos data with the existing archivos data in the user object\n            const updatedArchivosData = {\n              ...currentUser.data.archivos,\n              ...nuevosArchivosData\n            };\n\n            // Update the user collection with the updated archivos data\n            await axios.put(`http://localhost:3000/users/${this.userId}`, {\n              archivos: updatedArchivosData\n            });\n\n            // Update the archivos array in local storage\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            // Display a success message to the user\n            alert(\"Files submitted successfully!\");\n          } else {\n            // Handle the case where the request was not successful\n            console.error(\"Failed to submit files:\", response.statusText);\n          }\n        } else {\n          alert(\"No new files to submit.\");\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n      zip.generateAsync({\n        type: \"blob\"\n      }).then(content => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios.delete(`http://localhost:3000/archivos/${archivoId}`).then(async response => {\n        if (response.status === 200) {\n          // Remove the archivo ID from the user's archivos field\n          const fieldName = this.archivos[index].fieldName;\n          try {\n            const currentUser = await axios.get(`http://localhost:3000/users/${this.userId}`);\n            const updatedArchivosData = {\n              ...currentUser.data.archivos\n            };\n            delete updatedArchivosData[fieldName];\n            await axios.put(`http://localhost:3000/users/${this.userId}`, {\n              archivos: updatedArchivosData\n            });\n          } catch (error) {\n            console.error(\"Error updating user archivos:\", error);\n          }\n          this.archivos[index].submitted = false;\n          this.archivos[index].file = null; // Clear the file object\n          localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n          window.alert(\"File deleted successfully!\");\n        } else {\n          console.error(\"Failed to delete file.\");\n        }\n      }).catch(error => {\n        console.error(\"Error deleting file:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","JSZip","saveAs","data","isSubmitting","archivos","id","fieldName","file","submitted","userName","localStorage","getItem","drawer","sidebarItems","title","icon","userId","mounted","fetchArchivoData","computed","isSubmitDisabled","some","archivo","isDownloadDisabled","methods","userResponse","get","userArchivos","response","files","fileId","Object","entries","matchingFile","find","_id","matchingArchivo","filename","error","console","navigate","index","$router","push","logout","removeItem","submitForm","formData","FormData","newFiles","i","length","append","post","headers","status","nuevosArchivosData","findIndex","currentUser","updatedArchivosData","put","setItem","JSON","stringify","alert","statusText","downloadAllFiles","zip","forEach","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","uniqueFilename","generateAsync","type","then","content","deleteFile","archivoId","delete","window","catch"],"sources":["/Users/angel/school-project/my-app/src/components/ArchivosAlumno.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <!-- Top Bar -->\n      <v-app-bar app color=\"blue darken-2\" dark>\n        <!-- Burger menu icon -->\n        <v-btn icon @click=\"drawer = !drawer\">\n          <v-icon>mdi-menu</v-icon>\n        </v-btn>\n        <!-- Title -->\n        <v-toolbar-title>{{ userName }}</v-toolbar-title>\n        <v-spacer></v-spacer>\n        <!-- Logout button -->\n        <v-btn icon @click=\"logout\">\n          <v-icon>mdi-logout</v-icon>\n        </v-btn>\n      </v-app-bar>\n\n      <!-- Sidebar -->\n      <v-navigation-drawer app v-model=\"drawer\" color=\"blue darken-2\" dark>\n        <v-list dense>\n          <v-list-item\n            v-for=\"(item, index) in sidebarItems\"\n            :key=\"index\"\n            @click=\"navigate(index)\"\n          >\n            <v-list-item-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-action>\n            <v-list-item-content>\n              <v-list-item-title>{{ item.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- Main Content -->\n      <v-main>\n        <v-col cols=\"12\" style=\"max-width: 1000px; margin: 0 auto\">\n          <v-card class=\"mx-auto\" max-width=\"800\">\n            <v-card-title class=\"blue darken-2 white--text\">\n              Archivos\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col\n                  v-for=\"(archivo, index) in archivos\"\n                  :key=\"archivo.id\"\n                  cols=\"12\"\n                  md=\"6\"\n                >\n                  <v-card class=\"mb-3\">\n                    <v-card-title>{{ archivo.fieldName }}</v-card-title>\n                    <v-card-text class=\"text-center\" v-if=\"archivo.submitted\">\n                      <v-icon color=\"blue darken-2\" size=\"48\"\n                        >mdi-file-pdf-box</v-icon\n                      >\n                      <div>{{ archivo.file.filename }}</div>\n                    </v-card-text>\n                    <v-divider v-if=\"archivo.submitted\"></v-divider>\n                    <v-file-input\n                      v-if=\"!archivo.submitted\"\n                      v-model=\"archivo.file\"\n                      :label=\"archivo.fieldName\"\n                      prepend-icon=\"mdi-upload\"\n                      accept=\"application/pdf\"\n                    ></v-file-input>\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      :href=\"\n                        'data:application/octet-stream;base64,' +\n                        archivo.file.data\n                      \"\n                      :download=\"archivo.file.filename\"\n                      color=\"blue darken-2\"\n                      >Descargar</v-btn\n                    >\n                    <v-btn\n                      v-if=\"archivo.submitted\"\n                      color=\"red darken-2\"\n                      @click=\"deleteFile(index)\"\n                      >Eliminar</v-btn\n                    >\n                  </v-card>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-divider class=\"my-4\"></v-divider>\n            <v-card-actions>\n              <v-btn\n                :disabled=\"isSubmitDisabled\"\n                color=\"blue darken-2\"\n                @click=\"submitForm\"\n                >Enviar</v-btn\n              >\n              <v-btn\n                :disabled=\"isDownloadDisabled\"\n                color=\"primary\"\n                @click=\"downloadAllFiles\"\n                >Descargar todos los archivos</v-btn\n              >\n              <v-progress-circular\n                v-if=\"isSubmitting\"\n                indeterminate\n                color=\"blue darken-2\"\n                size=\"24\"\n                class=\"ml-2\"\n              ></v-progress-circular>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-main>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport default {\n  data() {\n    return {\n      isSubmitting: false,\n      archivos: [\n        {\n          id: 1,\n          fieldName: \"Solicitud de residencias profesionales\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 2,\n          fieldName: \"Carta de presentación\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 3,\n          fieldName: \"Carta de aceptación\",\n          file: null,\n          submitted: false,\n        },\n        { id: 4, fieldName: \"Cartilla IMSS\", file: null, submitted: false },\n        {\n          id: 5,\n          fieldName: \"Oficio de Asignación de asesor interno\",\n          file: null,\n          submitted: false,\n        },\n        { id: 6, fieldName: \"Anteproyecto\", file: null, submitted: false },\n        {\n          id: 7,\n          fieldName: \"Liberación de los 5 créditos\",\n          file: null,\n          submitted: false,\n        },\n        {\n          id: 8,\n          fieldName: \"Liberación servicio social\",\n          file: null,\n          submitted: false,\n        },\n      ],\n      userName: localStorage.getItem(\"userName\"),\n      drawer: false,\n      sidebarItems: [\n        { title: \"Proyecto\", icon: \"mdi-folder-outline\" },\n        { title: \"Asesorias\", icon: \"mdi-account-plus-outline\" },\n        { title: \"Archivos\", icon: \"mdi-file-document-outline\" },\n      ],\n      userId: localStorage.getItem(\"id\"),\n    };\n  },\n  mounted() {\n    // Fetch data if needed\n    this.fetchArchivoData();\n  },\n  computed: {\n    isSubmitDisabled() {\n      return this.archivos.some((archivo) => !archivo.file);\n    },\n    isDownloadDisabled() {\n      return !this.archivos.some((archivo) => archivo.submitted);\n    },\n  },\n  methods: {\n    async fetchArchivoData() {\n      try {\n        // Fetch user data to get the mapping of files to fields\n        const userResponse = await axios.get(\n          `http://localhost:3000/users/${this.userId}`\n        );\n        const userArchivos = userResponse.data.archivos;\n\n        // Fetch all files\n        const response = await axios.get(\"http://localhost:3000/archivos\");\n        const files = response.data;\n\n        // Iterate through each field in userArchivos to find the matching file from the files response\n        for (const [fieldName, fileId] of Object.entries(userArchivos)) {\n          const matchingFile = files.find((file) => file._id === fileId);\n          if (matchingFile) {\n            const matchingArchivo = this.archivos.find(\n              (archivo) => archivo.fieldName === fieldName\n            );\n            if (matchingArchivo) {\n              matchingArchivo.file = {\n                id: matchingFile._id,\n                filename: matchingFile.filename,\n                data: matchingFile.data, // assuming 'data' contains the base64 string\n              };\n              matchingArchivo.submitted = true;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching archivo data:\", error);\n      }\n    },\n\n    navigate(index) {\n      switch (index) {\n        case 0:\n          this.$router.push(\"/student\");\n          break;\n        case 1:\n          this.$router.push(\"/student/asesorias\");\n          break;\n        case 2:\n          this.$router.push(\"/student/archivos\");\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n    },\n    async submitForm() {\n      this.isSubmitting = true;\n      try {\n        const formData = new FormData();\n        const newFiles = [];\n\n        // Iterate through each archivo\n        for (let i = 0; i < this.archivos.length; i++) {\n          const archivo = this.archivos[i];\n          // Check if a file exists and is not submitted yet\n          if (archivo.file && !archivo.submitted) {\n            // Append each new file to the FormData object\n            formData.append(\"files\", archivo.file);\n            newFiles.push(archivo); // Keep track of new files\n          }\n        }\n\n        if (newFiles.length > 0) {\n          // Perform an HTTP POST request to submit the new files\n          const response = await axios.post(\n            \"http://localhost:3000/upload-archivo\",\n            formData,\n            {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n              },\n            }\n          );\n\n          // Check if the request was successful\n          if (response.status === 201) {\n            // Create an object to store the nuevos archivos data\n            const nuevosArchivosData = {};\n\n            // Iterate through new files and update the submitted status and file data\n            for (let i = 0; i < newFiles.length; i++) {\n              const file = response.data.files[i];\n              const index = this.archivos.findIndex(\n                (archivo) => archivo.fieldName === newFiles[i].fieldName\n              );\n              this.archivos[index].submitted = true;\n              this.archivos[index].file = {\n                id: file.id,\n                filename: file.filename,\n                data: file.data, // assuming 'data' contains the base64 string\n              };\n              // Add to nuevosArchivosData\n              nuevosArchivosData[this.archivos[index].fieldName] = file.id;\n            }\n\n            // Fetch the current user data\n            const currentUser = await axios.get(\n              `http://localhost:3000/users/${this.userId}`\n            );\n\n            // Merge the nuevos archivos data with the existing archivos data in the user object\n            const updatedArchivosData = {\n              ...currentUser.data.archivos,\n              ...nuevosArchivosData,\n            };\n\n            // Update the user collection with the updated archivos data\n            await axios.put(`http://localhost:3000/users/${this.userId}`, {\n              archivos: updatedArchivosData,\n            });\n\n            // Update the archivos array in local storage\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            // Display a success message to the user\n            alert(\"Files submitted successfully!\");\n          } else {\n            // Handle the case where the request was not successful\n            console.error(\"Failed to submit files:\", response.statusText);\n          }\n        } else {\n          alert(\"No new files to submit.\");\n        }\n      } catch (error) {\n        // Handle any errors that occur during the submission process\n        console.error(\"Error submitting files:\", error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n\n    async downloadAllFiles() {\n      // Ensure the latest data is fetched before downloading\n      await this.fetchArchivoData();\n\n      const zip = new JSZip();\n      this.archivos.forEach((archivo, index) => {\n        if (archivo.file && archivo.file.data) {\n          const byteString = atob(archivo.file.data);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n          }\n          // Append index to the filename to ensure uniqueness\n          const uniqueFilename = `${index}_${archivo.file.filename}`;\n          zip.file(uniqueFilename, ab);\n        }\n      });\n\n      zip.generateAsync({ type: \"blob\" }).then((content) => {\n        saveAs(content, \"archivos.zip\");\n      });\n    },\n\n    deleteFile(index) {\n      const archivoId = this.archivos[index].file.id;\n      axios\n        .delete(`http://localhost:3000/archivos/${archivoId}`)\n        .then(async (response) => {\n          if (response.status === 200) {\n            // Remove the archivo ID from the user's archivos field\n            const fieldName = this.archivos[index].fieldName;\n            try {\n              const currentUser = await axios.get(\n                `http://localhost:3000/users/${this.userId}`\n              );\n              const updatedArchivosData = { ...currentUser.data.archivos };\n              delete updatedArchivosData[fieldName];\n              await axios.put(`http://localhost:3000/users/${this.userId}`, {\n                archivos: updatedArchivosData,\n              });\n            } catch (error) {\n              console.error(\"Error updating user archivos:\", error);\n            }\n\n            this.archivos[index].submitted = false;\n            this.archivos[index].file = null; // Clear the file object\n            localStorage.setItem(\"archivos\", JSON.stringify(this.archivos));\n            window.alert(\"File deleted successfully!\");\n          } else {\n            console.error(\"Failed to delete file.\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error deleting file:\", error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-btn i {\n  color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}