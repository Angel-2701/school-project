{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      id: localStorage.getItem('id'),\n      editDialog: false,\n      newProject: {\n        name: '',\n        company: '',\n        _id: ''\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      users: [],\n      sidebarItems: [{\n        title: 'Projects',\n        icon: 'mdi-folder-outline'\n      }],\n      drawer: false,\n      selectedProject: null,\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1,\n      userName: localStorage.getItem('userName')\n    };\n  },\n  beforeRouteEnter(to, from, next) {\n    const projectId = parseFloat(to.params.projectId);\n    axios.get(`http://localhost:3000/projects/${projectId}`).then(response => {\n      next(vm => {\n        vm.selectedProject = response.data;\n      });\n    }).catch(error => {\n      console.error('Error fetching user details:', error);\n      next(false); // Prevent component from rendering\n    });\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const teacherResponse = await axios.get(`http://localhost:3000/users/${this.id}`);\n        const teacher = teacherResponse.data;\n        const studentsResponse = await axios.get('http://localhost:3000/students');\n        const allStudents = studentsResponse.data;\n        const teacherStudents = allStudents.filter(student => teacher.alumnos.includes(student._id));\n        const projectIds = teacherStudents.map(student => student.project);\n        const projectsResponse = await axios.get('http://localhost:3000/projects');\n        const projects = projectsResponse.data;\n        const filteredProjects = projects.filter(project => projectIds.includes(project._id));\n        this.projects = filteredProjects;\n        this.students = teacherStudents;\n        this.users = this.students.filter(student => student.project === this.selectedProject._id);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    openGradeDialog(user, event) {\n      event.stopPropagation();\n      this.selectedUser = user;\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = {\n          grade1: null,\n          grade2: null,\n          grade3: null\n        };\n      }\n      this.editDialog = true;\n    },\n    saveGrades() {\n      axios.put(`http://localhost:3000/users/${this.selectedUser._id}`, this.selectedUser).then(response => {\n        console.log('User updated successfully:', response.data);\n        this.editDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error('Error updating user:', error);\n      });\n    },\n    openConsultanciesDialog(student, event) {\n      event.stopPropagation();\n      this.selectedStudent = student;\n      this.enableConsultanciesDialog = true;\n    },\n    enableConsultancies() {\n      const numberOfConsultancies = parseInt(this.selectedStudent.consultancies);\n      console.log('Number of Consultancies to Enable:', numberOfConsultancies);\n      this.updateConsultancies(numberOfConsultancies);\n    },\n    updateConsultancies() {\n      axios.put(`http://localhost:3000/users/${this.selectedStudent._id}`, this.selectedStudent).then(response => {\n        console.log('User consultancies updated successfully:', response.data);\n        this.enableConsultanciesDialog = false;\n        this.fetchData();\n      }).catch(error => {\n        console.error('Error updating user consultancies:', error);\n      });\n    },\n    navigate(index) {\n      this.showProjects = true;\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects');\n          break;\n        case 1:\n          this.$router.push('/Students');\n          break;\n        case 2:\n          this.$router.push('/Teachers');\n          break;\n        default:\n          break;\n      }\n    },\n    logout() {\n      localStorage.removeItem('token');\n      this.$router.push('/login');\n    },\n    handleRowClick(item) {\n      // Handle row click event here\n      console.log('Row clicked:', item);\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: 'UserDetails',\n        params: {\n          userId: item._id\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchData();\n    // Filter students based on the selected project ID\n    this.users = this.students.filter(student => student.project === this.selectedProject._id);\n  }\n};","map":{"version":3,"names":["axios","data","id","localStorage","getItem","editDialog","newProject","name","company","_id","showProjects","projects","students","users","sidebarItems","title","icon","drawer","selectedProject","selectedUser","gradeOptions","enableConsultanciesDialog","numberOfConsultancies","userName","beforeRouteEnter","to","from","next","projectId","parseFloat","params","get","then","response","vm","catch","error","console","methods","fetchData","teacherResponse","teacher","studentsResponse","allStudents","teacherStudents","filter","student","alumnos","includes","projectIds","map","project","projectsResponse","filteredProjects","openGradeDialog","user","event","stopPropagation","grades","grade1","grade2","grade3","saveGrades","put","log","openConsultanciesDialog","selectedStudent","enableConsultancies","parseInt","consultancies","updateConsultancies","navigate","index","$router","push","logout","removeItem","handleRowClick","item","userId","mounted"],"sources":["/Users/angel/school-project/my-app/src/components/ProjectTable.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- Top Bar -->\n    <v-app-bar app color=\"blue darken-2\" dark>\n      <!-- Burger menu icon -->\n      <v-btn icon @click=\"drawer = !drawer\">\n        <v-icon>mdi-menu</v-icon>\n      </v-btn>\n      <!-- Title -->\n      <v-toolbar-title>{{ userName }}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <!-- Logout button -->\n      <v-btn icon @click=\"logout\">\n        <v-icon>mdi-logout</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <v-main>\n      <!-- Main content -->\n      <v-col cols=\"12\" style=\"max-width: 1500px; margin: 0px auto\">\n        <v-card class=\"text-center\" style=\"width: 100%; margin: 0px auto\">\n          <!-- Students Data -->\n          <v-data-table v-if=\"users.length > 0\" :items=\"users\" align=\"center\">\n            <template v-slot:top>\n              <v-toolbar flat color=\"blue darken-2\">\n                <v-toolbar-title>{{ selectedProject.name }}</v-toolbar-title>\n                <v-divider class=\"mx-4\" inset vertical></v-divider>\n                <v-spacer></v-spacer>\n                <!-- Removed the button for creating a new project -->\n              </v-toolbar>\n            </template>\n            <template v-slot:headers>\n              <tr>\n                <th>{{ \"ID\" }}</th>\n                <th>{{ \"Nombre\" }}</th>\n                <th>{{ \"Apellido\" }}</th>\n                <th>{{ \"Apellido Materno\" }}</th>\n                <th>{{ \"Carrera\" }}</th>\n                <th>{{ \"Proyecto\" }}</th>\n                <!-- Exclude numeroTelefonico from the headers -->\n              </tr>\n            </template>\n            <template v-slot:item=\"{ item }\">\n              <tr @click=\"handleRowClick(item)\" class=\"clickable-row\">\n                <td>{{ item._id }}</td>\n                <td>{{ item.nombre }}</td>\n                <td>{{ item.apellido }}</td>\n                <td>{{ item.apellidoM }}</td>\n                <td>{{ item.carrera }}</td>\n                <td>{{ item.project }}</td>\n                <td>\n                  <!-- Use small prop to make the buttons smaller -->\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on }\">\n                      <v-btn\n                        icon\n                        small\n                        color=\"blue darken-2\"\n                        @click=\"openGradeDialog(item, $event)\"\n                        style=\"width: 30px; height: 30px; margin-right: 5px\"\n                        v-on=\"on\"\n                      >\n                        <v-icon style=\"font-size: 18px\"\n                          >mdi-clipboard-check-outline</v-icon\n                        >\n                      </v-btn>\n                    </template>\n                    <span>Assign Grades</span>\n                  </v-tooltip>\n\n                  <v-btn\n                    icon\n                    small\n                    color=\"green darken-2\"\n                    @click=\"openConsultanciesDialog(item, $event)\"\n                    style=\"width: 30px; height: 30px; margin-right: 5px\"\n                  >\n                    <v-icon style=\"font-size: 18px\">mdi-check</v-icon>\n                  </v-btn>\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n        </v-card>\n      </v-col>\n    </v-main>\n\n    <!-- Dialog for assigning grades -->\n    <v-dialog v-model=\"editDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Assign Grades to {{ selectedUser.nombre }}\n          {{ selectedUser.apellido }}\n        </v-card-title>\n        <v-card-text>\n          <v-row>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade1\"\n                :items=\"gradeOptions\"\n                label=\"Grade 1\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade2\"\n                :items=\"gradeOptions\"\n                label=\"Grade 2\"\n              ></v-select>\n            </v-col>\n            <v-col cols=\"4\">\n              <v-select\n                v-model=\"selectedUser.grades.grade3\"\n                :items=\"gradeOptions\"\n                label=\"Grade 3\"\n              ></v-select>\n            </v-col>\n          </v-row>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"editDialog = false\"\n            >Cancel</v-btn\n          >\n          <v-btn color=\"blue darken-1\" text @click=\"saveGrades\">Save</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Dialog for enabling consultancies -->\n    <v-dialog v-model=\"enableConsultanciesDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Enable Consultancies for {{ selectedStudent.nombre }}\n          {{ selectedStudent.apellido }}\n        </v-card-title>\n        <v-card-text>\n          <v-text-field\n            v-model=\"selectedStudent.consultancies\"\n            label=\"Number of Consultancies (Max: 16)\"\n            type=\"number\"\n            max=\"16\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"blue darken-1\"\n            text\n            @click=\"enableConsultanciesDialog = false\"\n            >Cancel</v-btn\n          >\n          <v-btn color=\"blue darken-1\" text @click=\"enableConsultancies\"\n            >Enable</v-btn\n          >\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      id: localStorage.getItem('id'),\n      editDialog: false,\n      newProject: {\n        name: '',\n        company: '',\n        _id: ''\n      },\n      showProjects: true,\n      projects: [],\n      students: [],\n      users: [],\n      sidebarItems: [{ title: 'Projects', icon: 'mdi-folder-outline' }],\n      drawer: false,\n      selectedProject: null,\n      selectedUser: {},\n      gradeOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      enableConsultanciesDialog: false,\n      numberOfConsultancies: 1,\n      userName: localStorage.getItem('userName')\n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    const projectId = parseFloat(to.params.projectId)\n    axios\n      .get(`http://localhost:3000/projects/${projectId}`)\n      .then((response) => {\n        next((vm) => {\n          vm.selectedProject = response.data\n        })\n      })\n      .catch((error) => {\n        console.error('Error fetching user details:', error)\n        next(false) // Prevent component from rendering\n      })\n  },\n  methods: {\n    async fetchData () {\n      try {\n        const teacherResponse = await axios.get(\n          `http://localhost:3000/users/${this.id}`\n        )\n        const teacher = teacherResponse.data\n\n        const studentsResponse = await axios.get(\n          'http://localhost:3000/students'\n        )\n        const allStudents = studentsResponse.data\n\n        const teacherStudents = allStudents.filter((student) =>\n          teacher.alumnos.includes(student._id)\n        )\n\n        const projectIds = teacherStudents.map((student) => student.project)\n\n        const projectsResponse = await axios.get(\n          'http://localhost:3000/projects'\n        )\n        const projects = projectsResponse.data\n\n        const filteredProjects = projects.filter((project) =>\n          projectIds.includes(project._id)\n        )\n\n        this.projects = filteredProjects\n        this.students = teacherStudents\n        this.users = this.students.filter(\n          (student) => student.project === this.selectedProject._id\n        )\n      } catch (error) {\n        console.error('Error fetching data:', error)\n      }\n    },\n    openGradeDialog (user, event) {\n      event.stopPropagation()\n      this.selectedUser = user\n      if (!this.selectedUser.grades) {\n        this.selectedUser.grades = { grade1: null, grade2: null, grade3: null }\n      }\n      this.editDialog = true\n    },\n    saveGrades () {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedUser._id}`,\n          this.selectedUser\n        )\n        .then((response) => {\n          console.log('User updated successfully:', response.data)\n          this.editDialog = false\n          this.fetchData()\n        })\n        .catch((error) => {\n          console.error('Error updating user:', error)\n        })\n    },\n    openConsultanciesDialog (student, event) {\n      event.stopPropagation()\n      this.selectedStudent = student\n      this.enableConsultanciesDialog = true\n    },\n    enableConsultancies () {\n      const numberOfConsultancies = parseInt(\n        this.selectedStudent.consultancies\n      )\n      console.log('Number of Consultancies to Enable:', numberOfConsultancies)\n      this.updateConsultancies(numberOfConsultancies)\n    },\n    updateConsultancies () {\n      axios\n        .put(\n          `http://localhost:3000/users/${this.selectedStudent._id}`,\n          this.selectedStudent\n        )\n        .then((response) => {\n          console.log(\n            'User consultancies updated successfully:',\n            response.data\n          )\n          this.enableConsultanciesDialog = false\n          this.fetchData()\n        })\n        .catch((error) => {\n          console.error('Error updating user consultancies:', error)\n        })\n    },\n\n    navigate (index) {\n      this.showProjects = true\n      switch (index) {\n        case 0:\n          this.$router.push('/Teacher/Projects')\n          break\n        case 1:\n          this.$router.push('/Students')\n          break\n        case 2:\n          this.$router.push('/Teachers')\n          break\n        default:\n          break\n      }\n    },\n    logout () {\n      localStorage.removeItem('token')\n      this.$router.push('/login')\n    },\n    handleRowClick (item) {\n      // Handle row click event here\n      console.log('Row clicked:', item)\n      // Navigate to a new page and pass the user's ID as route parameters\n      this.$router.push({\n        name: 'UserDetails',\n        params: { userId: item._id }\n      })\n    }\n  },\n  mounted () {\n    this.fetchData()\n    // Filter students based on the selected project ID\n    this.users = this.students.filter(\n      (student) => student.project === this.selectedProject._id\n    )\n  }\n}\n</script>\n\n<style scoped>\n/* Adjustments for burger menu icon color */\n.v-btn i {\n  color: white;\n}\n\n.clickable-row:hover {\n  cursor: pointer;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}